const createEmptyBuf = (device, size) => {
    return device.createBuffer({size, usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST });
};

const createWeightBuf = (device, size, data) => {
  const buf = device.createBuffer({ mappedAtCreation: true, size, usage: GPUBufferUsage.STORAGE });
  new Uint8Array(buf.getMappedRange()).set(data);
  buf.unmap();
  return buf;
};

const addComputePass = (device, commandEncoder, pipeline, bufs, workgroup) => {
  const bindGroup = device.createBindGroup({layout: pipeline.getBindGroupLayout(0), entries: bufs.map((buffer, index) => ({ binding: index, resource: { buffer } }))});
  const passEncoder = commandEncoder.beginComputePass();
  passEncoder.setPipeline(pipeline);
  passEncoder.setBindGroup(0, bindGroup);
  passEncoder.dispatchWorkgroups(...workgroup);
  passEncoder.end();
};

const r_8_7_7_16_4_3_3_3_4_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 8 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.y);  /* 16 */
  { let lidx4 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    var acc0_12 = 0.0f;
    var acc0_13 = 0.0f;
    var acc0_14 = 0.0f;
    var acc0_15 = 0.0f;
    for(var ridx5 = 0; ridx5 <= 2; ridx5++) {
      var val1_0 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176))]);
      var val1_1 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+224)]);
      var val1_2 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+448)]), bool((((gidx1*32)+(lidx3*2)+2)<224)));
      var val1_3 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+1)]);
      var val1_4 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+225)]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+449)]), bool((((gidx1*32)+(lidx3*2)+2)<224)));
      var val1_6 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+2)]);
      var val1_7 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+226)]);
      var val1_8 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+450)]), bool((((gidx1*32)+(lidx3*2)+2)<224)));
      var val1_9 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+3)]);
      var val1_10 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+227)]);
      var val1_11 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+451)]), bool((((gidx1*32)+(lidx3*2)+2)<224)));
      var val1_12 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+4)]);
      var val1_13 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+228)]);
      var val1_14 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+452)]), bool((((gidx1*32)+(lidx3*2)+2)<224)));
      var val1_15 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+5)]);
      var val1_16 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+229)]);
      var val1_17 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+453)]), bool((((gidx1*32)+(lidx3*2)+2)<224)));
      var val1_18 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+6)]);
      var val1_19 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+230)]);
      var val1_20 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+454)]), bool((((gidx1*32)+(lidx3*2)+2)<224)));
      var val1_21 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+7)]);
      var val1_22 = f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+231)]);
      var val1_23 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+455)]), bool((((gidx1*32)+(lidx3*2)+2)<224)));
      var val1_24 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+8)]), bool((((gidx2*32)+(lidx4*8)+8)<224)));
      var val1_25 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+232)]), bool((((gidx2*32)+(lidx4*8)+8)<224)));
      var val1_26 = select(f32(0.0f), f32(data1[((gidx1*7168)+(gidx2*32)+(lidx3*448)+(lidx4*8)+(ridx5*50176)+456)]), bool(((((gidx1*32)+(lidx3*2)+2)<224)&&(((gidx2*32)+(lidx4*8)+8)<224))));
      var val2_0 = f32(data2[((gidx0*108)+(ridx5*9))]);
      var val2_1 = f32(data2[((gidx0*108)+(ridx5*9)+3)]);
      var val2_2 = f32(data2[((gidx0*108)+(ridx5*9)+6)]);
      var val2_3 = f32(data2[((gidx0*108)+(ridx5*9)+1)]);
      var val2_4 = f32(data2[((gidx0*108)+(ridx5*9)+4)]);
      var val2_5 = f32(data2[((gidx0*108)+(ridx5*9)+7)]);
      var val2_6 = f32(data2[((gidx0*108)+(ridx5*9)+2)]);
      var val2_7 = f32(data2[((gidx0*108)+(ridx5*9)+5)]);
      var val2_8 = f32(data2[((gidx0*108)+(ridx5*9)+8)]);
      var val2_9 = f32(data2[((gidx0*108)+(ridx5*9)+27)]);
      var val2_10 = f32(data2[((gidx0*108)+(ridx5*9)+30)]);
      var val2_11 = f32(data2[((gidx0*108)+(ridx5*9)+33)]);
      var val2_12 = f32(data2[((gidx0*108)+(ridx5*9)+28)]);
      var val2_13 = f32(data2[((gidx0*108)+(ridx5*9)+31)]);
      var val2_14 = f32(data2[((gidx0*108)+(ridx5*9)+34)]);
      var val2_15 = f32(data2[((gidx0*108)+(ridx5*9)+29)]);
      var val2_16 = f32(data2[((gidx0*108)+(ridx5*9)+32)]);
      var val2_17 = f32(data2[((gidx0*108)+(ridx5*9)+35)]);
      var val2_18 = f32(data2[((gidx0*108)+(ridx5*9)+54)]);
      var val2_19 = f32(data2[((gidx0*108)+(ridx5*9)+57)]);
      var val2_20 = f32(data2[((gidx0*108)+(ridx5*9)+60)]);
      var val2_21 = f32(data2[((gidx0*108)+(ridx5*9)+55)]);
      var val2_22 = f32(data2[((gidx0*108)+(ridx5*9)+58)]);
      var val2_23 = f32(data2[((gidx0*108)+(ridx5*9)+61)]);
      var val2_24 = f32(data2[((gidx0*108)+(ridx5*9)+56)]);
      var val2_25 = f32(data2[((gidx0*108)+(ridx5*9)+59)]);
      var val2_26 = f32(data2[((gidx0*108)+(ridx5*9)+62)]);
      var val2_27 = f32(data2[((gidx0*108)+(ridx5*9)+81)]);
      var val2_28 = f32(data2[((gidx0*108)+(ridx5*9)+84)]);
      var val2_29 = f32(data2[((gidx0*108)+(ridx5*9)+87)]);
      var val2_30 = f32(data2[((gidx0*108)+(ridx5*9)+82)]);
      var val2_31 = f32(data2[((gidx0*108)+(ridx5*9)+85)]);
      var val2_32 = f32(data2[((gidx0*108)+(ridx5*9)+88)]);
      var val2_33 = f32(data2[((gidx0*108)+(ridx5*9)+83)]);
      var val2_34 = f32(data2[((gidx0*108)+(ridx5*9)+86)]);
      var val2_35 = f32(data2[((gidx0*108)+(ridx5*9)+89)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_1 = fma(val1_6,val2_0,acc0_1);
      acc0_1 = fma(val1_7,val2_1,acc0_1);
      acc0_1 = fma(val1_8,val2_2,acc0_1);
      acc0_1 = fma(val1_9,val2_3,acc0_1);
      acc0_1 = fma(val1_10,val2_4,acc0_1);
      acc0_1 = fma(val1_11,val2_5,acc0_1);
      acc0_1 = fma(val1_12,val2_6,acc0_1);
      acc0_1 = fma(val1_13,val2_7,acc0_1);
      acc0_1 = fma(val1_14,val2_8,acc0_1);
      acc0_2 = fma(val1_12,val2_0,acc0_2);
      acc0_2 = fma(val1_13,val2_1,acc0_2);
      acc0_2 = fma(val1_14,val2_2,acc0_2);
      acc0_2 = fma(val1_15,val2_3,acc0_2);
      acc0_2 = fma(val1_16,val2_4,acc0_2);
      acc0_2 = fma(val1_17,val2_5,acc0_2);
      acc0_2 = fma(val1_18,val2_6,acc0_2);
      acc0_2 = fma(val1_19,val2_7,acc0_2);
      acc0_2 = fma(val1_20,val2_8,acc0_2);
      acc0_3 = fma(val1_18,val2_0,acc0_3);
      acc0_3 = fma(val1_19,val2_1,acc0_3);
      acc0_3 = fma(val1_20,val2_2,acc0_3);
      acc0_3 = fma(val1_21,val2_3,acc0_3);
      acc0_3 = fma(val1_22,val2_4,acc0_3);
      acc0_3 = fma(val1_23,val2_5,acc0_3);
      acc0_3 = fma(val1_24,val2_6,acc0_3);
      acc0_3 = fma(val1_25,val2_7,acc0_3);
      acc0_3 = fma(val1_26,val2_8,acc0_3);
      acc0_4 = fma(val1_0,val2_9,acc0_4);
      acc0_4 = fma(val1_1,val2_10,acc0_4);
      acc0_4 = fma(val1_2,val2_11,acc0_4);
      acc0_4 = fma(val1_3,val2_12,acc0_4);
      acc0_4 = fma(val1_4,val2_13,acc0_4);
      acc0_4 = fma(val1_5,val2_14,acc0_4);
      acc0_4 = fma(val1_6,val2_15,acc0_4);
      acc0_4 = fma(val1_7,val2_16,acc0_4);
      acc0_4 = fma(val1_8,val2_17,acc0_4);
      acc0_5 = fma(val1_6,val2_9,acc0_5);
      acc0_5 = fma(val1_7,val2_10,acc0_5);
      acc0_5 = fma(val1_8,val2_11,acc0_5);
      acc0_5 = fma(val1_9,val2_12,acc0_5);
      acc0_5 = fma(val1_10,val2_13,acc0_5);
      acc0_5 = fma(val1_11,val2_14,acc0_5);
      acc0_5 = fma(val1_12,val2_15,acc0_5);
      acc0_5 = fma(val1_13,val2_16,acc0_5);
      acc0_5 = fma(val1_14,val2_17,acc0_5);
      acc0_6 = fma(val1_12,val2_9,acc0_6);
      acc0_6 = fma(val1_13,val2_10,acc0_6);
      acc0_6 = fma(val1_14,val2_11,acc0_6);
      acc0_6 = fma(val1_15,val2_12,acc0_6);
      acc0_6 = fma(val1_16,val2_13,acc0_6);
      acc0_6 = fma(val1_17,val2_14,acc0_6);
      acc0_6 = fma(val1_18,val2_15,acc0_6);
      acc0_6 = fma(val1_19,val2_16,acc0_6);
      acc0_6 = fma(val1_20,val2_17,acc0_6);
      acc0_7 = fma(val1_18,val2_9,acc0_7);
      acc0_7 = fma(val1_19,val2_10,acc0_7);
      acc0_7 = fma(val1_20,val2_11,acc0_7);
      acc0_7 = fma(val1_21,val2_12,acc0_7);
      acc0_7 = fma(val1_22,val2_13,acc0_7);
      acc0_7 = fma(val1_23,val2_14,acc0_7);
      acc0_7 = fma(val1_24,val2_15,acc0_7);
      acc0_7 = fma(val1_25,val2_16,acc0_7);
      acc0_7 = fma(val1_26,val2_17,acc0_7);
      acc0_8 = fma(val1_0,val2_18,acc0_8);
      acc0_8 = fma(val1_1,val2_19,acc0_8);
      acc0_8 = fma(val1_2,val2_20,acc0_8);
      acc0_8 = fma(val1_3,val2_21,acc0_8);
      acc0_8 = fma(val1_4,val2_22,acc0_8);
      acc0_8 = fma(val1_5,val2_23,acc0_8);
      acc0_8 = fma(val1_6,val2_24,acc0_8);
      acc0_8 = fma(val1_7,val2_25,acc0_8);
      acc0_8 = fma(val1_8,val2_26,acc0_8);
      acc0_9 = fma(val1_6,val2_18,acc0_9);
      acc0_9 = fma(val1_7,val2_19,acc0_9);
      acc0_9 = fma(val1_8,val2_20,acc0_9);
      acc0_9 = fma(val1_9,val2_21,acc0_9);
      acc0_9 = fma(val1_10,val2_22,acc0_9);
      acc0_9 = fma(val1_11,val2_23,acc0_9);
      acc0_9 = fma(val1_12,val2_24,acc0_9);
      acc0_9 = fma(val1_13,val2_25,acc0_9);
      acc0_9 = fma(val1_14,val2_26,acc0_9);
      acc0_10 = fma(val1_12,val2_18,acc0_10);
      acc0_10 = fma(val1_13,val2_19,acc0_10);
      acc0_10 = fma(val1_14,val2_20,acc0_10);
      acc0_10 = fma(val1_15,val2_21,acc0_10);
      acc0_10 = fma(val1_16,val2_22,acc0_10);
      acc0_10 = fma(val1_17,val2_23,acc0_10);
      acc0_10 = fma(val1_18,val2_24,acc0_10);
      acc0_10 = fma(val1_19,val2_25,acc0_10);
      acc0_10 = fma(val1_20,val2_26,acc0_10);
      acc0_11 = fma(val1_18,val2_18,acc0_11);
      acc0_11 = fma(val1_19,val2_19,acc0_11);
      acc0_11 = fma(val1_20,val2_20,acc0_11);
      acc0_11 = fma(val1_21,val2_21,acc0_11);
      acc0_11 = fma(val1_22,val2_22,acc0_11);
      acc0_11 = fma(val1_23,val2_23,acc0_11);
      acc0_11 = fma(val1_24,val2_24,acc0_11);
      acc0_11 = fma(val1_25,val2_25,acc0_11);
      acc0_11 = fma(val1_26,val2_26,acc0_11);
      acc0_12 = fma(val1_0,val2_27,acc0_12);
      acc0_12 = fma(val1_1,val2_28,acc0_12);
      acc0_12 = fma(val1_2,val2_29,acc0_12);
      acc0_12 = fma(val1_3,val2_30,acc0_12);
      acc0_12 = fma(val1_4,val2_31,acc0_12);
      acc0_12 = fma(val1_5,val2_32,acc0_12);
      acc0_12 = fma(val1_6,val2_33,acc0_12);
      acc0_12 = fma(val1_7,val2_34,acc0_12);
      acc0_12 = fma(val1_8,val2_35,acc0_12);
      acc0_13 = fma(val1_6,val2_27,acc0_13);
      acc0_13 = fma(val1_7,val2_28,acc0_13);
      acc0_13 = fma(val1_8,val2_29,acc0_13);
      acc0_13 = fma(val1_9,val2_30,acc0_13);
      acc0_13 = fma(val1_10,val2_31,acc0_13);
      acc0_13 = fma(val1_11,val2_32,acc0_13);
      acc0_13 = fma(val1_12,val2_33,acc0_13);
      acc0_13 = fma(val1_13,val2_34,acc0_13);
      acc0_13 = fma(val1_14,val2_35,acc0_13);
      acc0_14 = fma(val1_12,val2_27,acc0_14);
      acc0_14 = fma(val1_13,val2_28,acc0_14);
      acc0_14 = fma(val1_14,val2_29,acc0_14);
      acc0_14 = fma(val1_15,val2_30,acc0_14);
      acc0_14 = fma(val1_16,val2_31,acc0_14);
      acc0_14 = fma(val1_17,val2_32,acc0_14);
      acc0_14 = fma(val1_18,val2_33,acc0_14);
      acc0_14 = fma(val1_19,val2_34,acc0_14);
      acc0_14 = fma(val1_20,val2_35,acc0_14);
      acc0_15 = fma(val1_18,val2_27,acc0_15);
      acc0_15 = fma(val1_19,val2_28,acc0_15);
      acc0_15 = fma(val1_20,val2_29,acc0_15);
      acc0_15 = fma(val1_21,val2_30,acc0_15);
      acc0_15 = fma(val1_22,val2_31,acc0_15);
      acc0_15 = fma(val1_23,val2_32,acc0_15);
      acc0_15 = fma(val1_24,val2_33,acc0_15);
      acc0_15 = fma(val1_25,val2_34,acc0_15);
      acc0_15 = fma(val1_26,val2_35,acc0_15);
    } /* reduce */
    var val3_0 = f32(data3[(gidx0*4)]);
    var val3_1 = f32(data3[((gidx0*4)+1)]);
    var val3_2 = f32(data3[((gidx0*4)+2)]);
    var val3_3 = f32(data3[((gidx0*4)+3)]);
    var val4_0 = f32(data4[(gidx0*4)]);
    var val4_1 = f32(data4[((gidx0*4)+1)]);
    var val4_2 = f32(data4[((gidx0*4)+2)]);
    var val4_3 = f32(data4[((gidx0*4)+3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[(gidx0*4)]);
    var val6_1 = f32(data6[((gidx0*4)+1)]);
    var val6_2 = f32(data6[((gidx0*4)+2)]);
    var val6_3 = f32(data6[((gidx0*4)+3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[(gidx0*4)]);
    var val8_1 = f32(data8[((gidx0*4)+1)]);
    var val8_2 = f32(data8[((gidx0*4)+2)]);
    var val8_3 = f32(data8[((gidx0*4)+3)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (acc0_12-val3_3);
    var alu13 = (acc0_13-val3_3);
    var alu14 = (acc0_14-val3_3);
    var alu15 = (acc0_15-val3_3);
    var alu16 = (alu0*val4_0);
    var alu17 = (alu1*val4_0);
    var alu18 = (alu2*val4_0);
    var alu19 = (alu3*val4_0);
    var alu20 = (alu4*val4_1);
    var alu21 = (alu5*val4_1);
    var alu22 = (alu6*val4_1);
    var alu23 = (alu7*val4_1);
    var alu24 = (alu8*val4_2);
    var alu25 = (alu9*val4_2);
    var alu26 = (alu10*val4_2);
    var alu27 = (alu11*val4_2);
    var alu28 = (alu12*val4_3);
    var alu29 = (alu13*val4_3);
    var alu30 = (alu14*val4_3);
    var alu31 = (alu15*val4_3);
    var alu32 = (val7_0+val6_0);
    var alu33 = (val7_0+val6_0);
    var alu34 = (val7_0+val6_0);
    var alu35 = (val7_0+val6_0);
    var alu36 = (val7_0+val6_1);
    var alu37 = (val7_0+val6_1);
    var alu38 = (val7_0+val6_1);
    var alu39 = (val7_0+val6_1);
    var alu40 = (val7_0+val6_2);
    var alu41 = (val7_0+val6_2);
    var alu42 = (val7_0+val6_2);
    var alu43 = (val7_0+val6_2);
    var alu44 = (val7_0+val6_3);
    var alu45 = (val7_0+val6_3);
    var alu46 = (val7_0+val6_3);
    var alu47 = (val7_0+val6_3);
    var alu48 = (val5_0/alu32);
    var alu49 = (val5_0/alu33);
    var alu50 = (val5_0/alu34);
    var alu51 = (val5_0/alu35);
    var alu52 = (val5_0/alu36);
    var alu53 = (val5_0/alu37);
    var alu54 = (val5_0/alu38);
    var alu55 = (val5_0/alu39);
    var alu56 = (val5_0/alu40);
    var alu57 = (val5_0/alu41);
    var alu58 = (val5_0/alu42);
    var alu59 = (val5_0/alu43);
    var alu60 = (val5_0/alu44);
    var alu61 = (val5_0/alu45);
    var alu62 = (val5_0/alu46);
    var alu63 = (val5_0/alu47);
    var alu64 = sqrt(alu48);
    var alu65 = sqrt(alu49);
    var alu66 = sqrt(alu50);
    var alu67 = sqrt(alu51);
    var alu68 = sqrt(alu52);
    var alu69 = sqrt(alu53);
    var alu70 = sqrt(alu54);
    var alu71 = sqrt(alu55);
    var alu72 = sqrt(alu56);
    var alu73 = sqrt(alu57);
    var alu74 = sqrt(alu58);
    var alu75 = sqrt(alu59);
    var alu76 = sqrt(alu60);
    var alu77 = sqrt(alu61);
    var alu78 = sqrt(alu62);
    var alu79 = sqrt(alu63);
    var alu80 = (alu16*alu64);
    var alu81 = (alu17*alu65);
    var alu82 = (alu18*alu66);
    var alu83 = (alu19*alu67);
    var alu84 = (alu20*alu68);
    var alu85 = (alu21*alu69);
    var alu86 = (alu22*alu70);
    var alu87 = (alu23*alu71);
    var alu88 = (alu24*alu72);
    var alu89 = (alu25*alu73);
    var alu90 = (alu26*alu74);
    var alu91 = (alu27*alu75);
    var alu92 = (alu28*alu76);
    var alu93 = (alu29*alu77);
    var alu94 = (alu30*alu78);
    var alu95 = (alu31*alu79);
    var alu96 = (alu80+val8_0);
    var alu97 = (alu81+val8_0);
    var alu98 = (alu82+val8_0);
    var alu99 = (alu83+val8_0);
    var alu100 = (alu84+val8_1);
    var alu101 = (alu85+val8_1);
    var alu102 = (alu86+val8_1);
    var alu103 = (alu87+val8_1);
    var alu104 = (alu88+val8_2);
    var alu105 = (alu89+val8_2);
    var alu106 = (alu90+val8_2);
    var alu107 = (alu91+val8_2);
    var alu108 = (alu92+val8_3);
    var alu109 = (alu93+val8_3);
    var alu110 = (alu94+val8_3);
    var alu111 = (alu95+val8_3);
    var alu112 = (val5_0/alu32);
    var alu113 = (val5_0/alu33);
    var alu114 = (val5_0/alu34);
    var alu115 = (val5_0/alu35);
    var alu116 = (val5_0/alu36);
    var alu117 = (val5_0/alu37);
    var alu118 = (val5_0/alu38);
    var alu119 = (val5_0/alu39);
    var alu120 = (val5_0/alu40);
    var alu121 = (val5_0/alu41);
    var alu122 = (val5_0/alu42);
    var alu123 = (val5_0/alu43);
    var alu124 = (val5_0/alu44);
    var alu125 = (val5_0/alu45);
    var alu126 = (val5_0/alu46);
    var alu127 = (val5_0/alu47);
    var alu128 = sqrt(alu112);
    var alu129 = sqrt(alu113);
    var alu130 = sqrt(alu114);
    var alu131 = sqrt(alu115);
    var alu132 = sqrt(alu116);
    var alu133 = sqrt(alu117);
    var alu134 = sqrt(alu118);
    var alu135 = sqrt(alu119);
    var alu136 = sqrt(alu120);
    var alu137 = sqrt(alu121);
    var alu138 = sqrt(alu122);
    var alu139 = sqrt(alu123);
    var alu140 = sqrt(alu124);
    var alu141 = sqrt(alu125);
    var alu142 = sqrt(alu126);
    var alu143 = sqrt(alu127);
    var alu144 = (alu16*alu128);
    var alu145 = (alu17*alu129);
    var alu146 = (alu18*alu130);
    var alu147 = (alu19*alu131);
    var alu148 = (alu20*alu132);
    var alu149 = (alu21*alu133);
    var alu150 = (alu22*alu134);
    var alu151 = (alu23*alu135);
    var alu152 = (alu24*alu136);
    var alu153 = (alu25*alu137);
    var alu154 = (alu26*alu138);
    var alu155 = (alu27*alu139);
    var alu156 = (alu28*alu140);
    var alu157 = (alu29*alu141);
    var alu158 = (alu30*alu142);
    var alu159 = (alu31*alu143);
    var alu160 = (alu144+val8_0);
    var alu161 = (alu145+val8_0);
    var alu162 = (alu146+val8_0);
    var alu163 = (alu147+val8_0);
    var alu164 = (alu148+val8_1);
    var alu165 = (alu149+val8_1);
    var alu166 = (alu150+val8_1);
    var alu167 = (alu151+val8_1);
    var alu168 = (alu152+val8_2);
    var alu169 = (alu153+val8_2);
    var alu170 = (alu154+val8_2);
    var alu171 = (alu155+val8_2);
    var alu172 = (alu156+val8_3);
    var alu173 = (alu157+val8_3);
    var alu174 = (alu158+val8_3);
    var alu175 = (alu159+val8_3);
    var alu176 = (alu160*val11_0);
    var alu177 = (alu161*val11_0);
    var alu178 = (alu162*val11_0);
    var alu179 = (alu163*val11_0);
    var alu180 = (alu164*val11_0);
    var alu181 = (alu165*val11_0);
    var alu182 = (alu166*val11_0);
    var alu183 = (alu167*val11_0);
    var alu184 = (alu168*val11_0);
    var alu185 = (alu169*val11_0);
    var alu186 = (alu170*val11_0);
    var alu187 = (alu171*val11_0);
    var alu188 = (alu172*val11_0);
    var alu189 = (alu173*val11_0);
    var alu190 = (alu174*val11_0);
    var alu191 = (alu175*val11_0);
    var alu192 = exp2(alu176);
    var alu193 = exp2(alu177);
    var alu194 = exp2(alu178);
    var alu195 = exp2(alu179);
    var alu196 = exp2(alu180);
    var alu197 = exp2(alu181);
    var alu198 = exp2(alu182);
    var alu199 = exp2(alu183);
    var alu200 = exp2(alu184);
    var alu201 = exp2(alu185);
    var alu202 = exp2(alu186);
    var alu203 = exp2(alu187);
    var alu204 = exp2(alu188);
    var alu205 = exp2(alu189);
    var alu206 = exp2(alu190);
    var alu207 = exp2(alu191);
    var alu208 = (val10_0+alu192);
    var alu209 = (val10_0+alu193);
    var alu210 = (val10_0+alu194);
    var alu211 = (val10_0+alu195);
    var alu212 = (val10_0+alu196);
    var alu213 = (val10_0+alu197);
    var alu214 = (val10_0+alu198);
    var alu215 = (val10_0+alu199);
    var alu216 = (val10_0+alu200);
    var alu217 = (val10_0+alu201);
    var alu218 = (val10_0+alu202);
    var alu219 = (val10_0+alu203);
    var alu220 = (val10_0+alu204);
    var alu221 = (val10_0+alu205);
    var alu222 = (val10_0+alu206);
    var alu223 = (val10_0+alu207);
    var alu224 = (val9_0/alu208);
    var alu225 = (val9_0/alu209);
    var alu226 = (val9_0/alu210);
    var alu227 = (val9_0/alu211);
    var alu228 = (val9_0/alu212);
    var alu229 = (val9_0/alu213);
    var alu230 = (val9_0/alu214);
    var alu231 = (val9_0/alu215);
    var alu232 = (val9_0/alu216);
    var alu233 = (val9_0/alu217);
    var alu234 = (val9_0/alu218);
    var alu235 = (val9_0/alu219);
    var alu236 = (val9_0/alu220);
    var alu237 = (val9_0/alu221);
    var alu238 = (val9_0/alu222);
    var alu239 = (val9_0/alu223);
    var alu240 = (alu96*alu224);
    var alu241 = (alu97*alu225);
    var alu242 = (alu98*alu226);
    var alu243 = (alu99*alu227);
    var alu244 = (alu100*alu228);
    var alu245 = (alu101*alu229);
    var alu246 = (alu102*alu230);
    var alu247 = (alu103*alu231);
    var alu248 = (alu104*alu232);
    var alu249 = (alu105*alu233);
    var alu250 = (alu106*alu234);
    var alu251 = (alu107*alu235);
    var alu252 = (alu108*alu236);
    var alu253 = (alu109*alu237);
    var alu254 = (alu110*alu238);
    var alu255 = (alu111*alu239);
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4))] = alu240;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+1)] = alu241;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+2)] = alu242;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+3)] = alu243;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+12544)] = alu244;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+12545)] = alu245;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+12546)] = alu246;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+12547)] = alu247;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+25088)] = alu248;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+25089)] = alu249;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+25090)] = alu250;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+25091)] = alu251;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+37632)] = alu252;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+37633)] = alu253;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+37634)] = alu254;
    data0[((gidx0*50176)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+37635)] = alu255;
  }}}}} /* global+local */
}`;

const r_32_7_7_16_4_3_3_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 32 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.y);  /* 16 */
  { let lidx4 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-113)]), bool(((((gidx1*-16)+(lidx3*-1))<0)&&(((gidx2*-16)+(lidx4*-4))<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-1)]), bool((((gidx2*-16)+(lidx4*-4))<0)));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+111)]), bool(((((gidx1*16)+2+lidx3)<113)&&(((gidx2*-16)+(lidx4*-4))<0))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-112)]), bool((((gidx1*-16)+(lidx3*-1))<0)));
      var val1_4 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4))]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+112)]), bool((((gidx1*16)+2+lidx3)<113)));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-111)]), bool((((gidx1*-16)+(lidx3*-1))<0)));
      var val1_7 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+1)]);
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+113)]), bool((((gidx1*16)+2+lidx3)<113)));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-110)]), bool((((gidx1*-16)+(lidx3*-1))<0)));
      var val1_10 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+2)]);
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+114)]), bool((((gidx1*16)+2+lidx3)<113)));
      var val1_12 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-109)]), bool((((gidx1*-16)+(lidx3*-1))<0)));
      var val1_13 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+3)]);
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+115)]), bool((((gidx1*16)+2+lidx3)<113)));
      var val1_15 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-108)]), bool(((((gidx1*-16)+(lidx3*-1))<0)&&(((gidx2*16)+(lidx4*4)+5)<113))));
      var val1_16 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+4)]), bool((((gidx2*16)+(lidx4*4)+5)<113)));
      var val1_17 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+116)]), bool(((((gidx1*16)+2+lidx3)<113)&&(((gidx2*16)+(lidx4*4)+5)<113))));
      var val2_0 = f32(data2[(gidx0*9)]);
      var val2_1 = f32(data2[((gidx0*9)+3)]);
      var val2_2 = f32(data2[((gidx0*9)+6)]);
      var val2_3 = f32(data2[((gidx0*9)+1)]);
      var val2_4 = f32(data2[((gidx0*9)+4)]);
      var val2_5 = f32(data2[((gidx0*9)+7)]);
      var val2_6 = f32(data2[((gidx0*9)+2)]);
      var val2_7 = f32(data2[((gidx0*9)+5)]);
      var val2_8 = f32(data2[((gidx0*9)+8)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_1 = fma(val1_3,val2_0,acc0_1);
      acc0_1 = fma(val1_4,val2_1,acc0_1);
      acc0_1 = fma(val1_5,val2_2,acc0_1);
      acc0_1 = fma(val1_6,val2_3,acc0_1);
      acc0_1 = fma(val1_7,val2_4,acc0_1);
      acc0_1 = fma(val1_8,val2_5,acc0_1);
      acc0_1 = fma(val1_9,val2_6,acc0_1);
      acc0_1 = fma(val1_10,val2_7,acc0_1);
      acc0_1 = fma(val1_11,val2_8,acc0_1);
      acc0_2 = fma(val1_6,val2_0,acc0_2);
      acc0_2 = fma(val1_7,val2_1,acc0_2);
      acc0_2 = fma(val1_8,val2_2,acc0_2);
      acc0_2 = fma(val1_9,val2_3,acc0_2);
      acc0_2 = fma(val1_10,val2_4,acc0_2);
      acc0_2 = fma(val1_11,val2_5,acc0_2);
      acc0_2 = fma(val1_12,val2_6,acc0_2);
      acc0_2 = fma(val1_13,val2_7,acc0_2);
      acc0_2 = fma(val1_14,val2_8,acc0_2);
      acc0_3 = fma(val1_9,val2_0,acc0_3);
      acc0_3 = fma(val1_10,val2_1,acc0_3);
      acc0_3 = fma(val1_11,val2_2,acc0_3);
      acc0_3 = fma(val1_12,val2_3,acc0_3);
      acc0_3 = fma(val1_13,val2_4,acc0_3);
      acc0_3 = fma(val1_14,val2_5,acc0_3);
      acc0_3 = fma(val1_15,val2_6,acc0_3);
      acc0_3 = fma(val1_16,val2_7,acc0_3);
      acc0_3 = fma(val1_17,val2_8,acc0_3);
     /* reduce */
    data0[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4))] = acc0_0;
    data0[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+1)] = acc0_1;
    data0[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+2)] = acc0_2;
    data0[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+3)] = acc0_3;
  }}}}} /* global+local */
}`;

const r_32_256_49 = `var<workgroup> temp: array<f32,256>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(256) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 32 */
  { let lidx1 = i32(lindex.x);  /* 256 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 48; ridx2++) {
      var val1_0 = f32(data1[((gidx0*12544)+(lidx1*49)+ridx2)]);
      var val2_0 = f32(data2[gidx0]);
      var val3_0 = f32(data3[gidx0]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[gidx0]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[gidx0]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (alu0*val3_0);
      var alu2 = (val6_0+val5_0);
      var alu3 = (val4_0/alu2);
      var alu4 = sqrt(alu3);
      var alu5 = (alu1*alu4);
      var alu6 = (alu5+val7_0);
      var alu7 = (alu6*val10_0);
      var alu8 = exp2(alu7);
      var alu9 = (val9_0+alu8);
      var alu10 = (val8_0/alu9);
      acc0_0 = fma(alu6,alu10,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 255; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val11_0 = 7.971938775510203e-05f;
    var alu11 = (accm1_0*val11_0);
    data0[gidx0] = alu11;
  }} /* local */
} /* global */
}`;

const r_8_16_2 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 8 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 1; ridx2++) {
      var val1_0 = f32(data1[((lidx1*2)+ridx2)]);
      var val2_0 = f32(data2[((gidx0*32)+(lidx1*2)+ridx2)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val3_0 = f32(data3[gidx0]);
    var val4_0 = 1.0f;
    var val5_0 = 1.0f;
    var val6_0 = -1.4426950408889634f;
    var alu0 = (accm1_0+val3_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val5_0+alu2);
    var alu4 = (val4_0/alu3);
    var alu5 = (alu0*alu4);
    data0[gidx0] = alu5;
  }} /* local */
} /* global */
}`;

const r_32_8 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data3: array<f32>;
@group(0) @binding(2) var<storage,read_write> data4: array<f32>;
@group(0) @binding(3) var<storage,read_write> data5: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
  { let lidx0 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
      var val3_0 = f32(data3[0]);
      var val3_1 = f32(data3[1]);
      var val3_2 = f32(data3[2]);
      var val3_3 = f32(data3[3]);
      var val3_4 = f32(data3[4]);
      var val3_5 = f32(data3[5]);
      var val3_6 = f32(data3[6]);
      var val3_7 = f32(data3[7]);
      var val4_0 = f32(data4[(lidx0*8)]);
      var val4_1 = f32(data4[((lidx0*8)+1)]);
      var val4_2 = f32(data4[((lidx0*8)+2)]);
      var val4_3 = f32(data4[((lidx0*8)+3)]);
      var val4_4 = f32(data4[((lidx0*8)+4)]);
      var val4_5 = f32(data4[((lidx0*8)+5)]);
      var val4_6 = f32(data4[((lidx0*8)+6)]);
      var val4_7 = f32(data4[((lidx0*8)+7)]);
      acc0_0 = fma(val3_0,val4_0,acc0_0);
      acc0_0 = fma(val3_1,val4_1,acc0_0);
      acc0_0 = fma(val3_2,val4_2,acc0_0);
      acc0_0 = fma(val3_3,val4_3,acc0_0);
      acc0_0 = fma(val3_4,val4_4,acc0_0);
      acc0_0 = fma(val3_5,val4_5,acc0_0);
      acc0_0 = fma(val3_6,val4_6,acc0_0);
      acc0_0 = fma(val3_7,val4_7,acc0_0);
     /* reduce */
    var val1_0 = 1.0f;
    var val2_0 = 1.0f;
    var val5_0 = f32(data5[lidx0]);
    var val6_0 = -1.4426950408889634f;
    var alu0 = (acc0_0+val5_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val2_0+alu2);
    var alu4 = (val1_0/alu3);
    data0[lidx0] = alu4;
  } /* global+local */
}`;

const r_32_7_7_16_4_3_3_4n1 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 32 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.y);  /* 16 */
  { let lidx4 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-113)]), bool(((((gidx1*-16)+(lidx3*-1))<0)&&(((gidx2*-16)+(lidx4*-4))<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-1)]), bool((((gidx2*-16)+(lidx4*-4))<0)));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+111)]), bool(((((gidx1*16)+2+lidx3)<113)&&(((gidx2*-16)+(lidx4*-4))<0))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-112)]), bool((((gidx1*-16)+(lidx3*-1))<0)));
      var val1_4 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4))]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+112)]), bool((((gidx1*16)+2+lidx3)<113)));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-111)]), bool((((gidx1*-16)+(lidx3*-1))<0)));
      var val1_7 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+1)]);
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+113)]), bool((((gidx1*16)+2+lidx3)<113)));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-110)]), bool((((gidx1*-16)+(lidx3*-1))<0)));
      var val1_10 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+2)]);
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+114)]), bool((((gidx1*16)+2+lidx3)<113)));
      var val1_12 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-109)]), bool((((gidx1*-16)+(lidx3*-1))<0)));
      var val1_13 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+3)]);
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+115)]), bool((((gidx1*16)+2+lidx3)<113)));
      var val1_15 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+-108)]), bool(((((gidx1*-16)+(lidx3*-1))<0)&&(((gidx2*16)+(lidx4*4)+5)<113))));
      var val1_16 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+4)]), bool((((gidx2*16)+(lidx4*4)+5)<113)));
      var val1_17 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+116)]), bool(((((gidx1*16)+2+lidx3)<113)&&(((gidx2*16)+(lidx4*4)+5)<113))));
      var val2_0 = f32(data2[(gidx0*9)]);
      var val2_1 = f32(data2[((gidx0*9)+3)]);
      var val2_2 = f32(data2[((gidx0*9)+6)]);
      var val2_3 = f32(data2[((gidx0*9)+1)]);
      var val2_4 = f32(data2[((gidx0*9)+4)]);
      var val2_5 = f32(data2[((gidx0*9)+7)]);
      var val2_6 = f32(data2[((gidx0*9)+2)]);
      var val2_7 = f32(data2[((gidx0*9)+5)]);
      var val2_8 = f32(data2[((gidx0*9)+8)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_1 = fma(val1_3,val2_0,acc0_1);
      acc0_1 = fma(val1_4,val2_1,acc0_1);
      acc0_1 = fma(val1_5,val2_2,acc0_1);
      acc0_1 = fma(val1_6,val2_3,acc0_1);
      acc0_1 = fma(val1_7,val2_4,acc0_1);
      acc0_1 = fma(val1_8,val2_5,acc0_1);
      acc0_1 = fma(val1_9,val2_6,acc0_1);
      acc0_1 = fma(val1_10,val2_7,acc0_1);
      acc0_1 = fma(val1_11,val2_8,acc0_1);
      acc0_2 = fma(val1_6,val2_0,acc0_2);
      acc0_2 = fma(val1_7,val2_1,acc0_2);
      acc0_2 = fma(val1_8,val2_2,acc0_2);
      acc0_2 = fma(val1_9,val2_3,acc0_2);
      acc0_2 = fma(val1_10,val2_4,acc0_2);
      acc0_2 = fma(val1_11,val2_5,acc0_2);
      acc0_2 = fma(val1_12,val2_6,acc0_2);
      acc0_2 = fma(val1_13,val2_7,acc0_2);
      acc0_2 = fma(val1_14,val2_8,acc0_2);
      acc0_3 = fma(val1_9,val2_0,acc0_3);
      acc0_3 = fma(val1_10,val2_1,acc0_3);
      acc0_3 = fma(val1_11,val2_2,acc0_3);
      acc0_3 = fma(val1_12,val2_3,acc0_3);
      acc0_3 = fma(val1_13,val2_4,acc0_3);
      acc0_3 = fma(val1_14,val2_5,acc0_3);
      acc0_3 = fma(val1_15,val2_6,acc0_3);
      acc0_3 = fma(val1_16,val2_7,acc0_3);
      acc0_3 = fma(val1_17,val2_8,acc0_3);
     /* reduce */
    var val3_0 = f32(data3[gidx0]);
    var val4_0 = f32(data4[gidx0]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[gidx0]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[gidx0]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[gidx0]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (alu0*val4_0);
    var alu5 = (alu1*val4_0);
    var alu6 = (alu2*val4_0);
    var alu7 = (alu3*val4_0);
    var alu8 = (val7_0+val6_0);
    var alu9 = (val7_0+val6_0);
    var alu10 = (val7_0+val6_0);
    var alu11 = (val7_0+val6_0);
    var alu12 = (val5_0/alu8);
    var alu13 = (val5_0/alu9);
    var alu14 = (val5_0/alu10);
    var alu15 = (val5_0/alu11);
    var alu16 = sqrt(alu12);
    var alu17 = sqrt(alu13);
    var alu18 = sqrt(alu14);
    var alu19 = sqrt(alu15);
    var alu20 = (alu4*alu16);
    var alu21 = (alu5*alu17);
    var alu22 = (alu6*alu18);
    var alu23 = (alu7*alu19);
    var alu24 = (alu20+val8_0);
    var alu25 = (alu21+val8_0);
    var alu26 = (alu22+val8_0);
    var alu27 = (alu23+val8_0);
    var alu28 = (val5_0/alu8);
    var alu29 = (val5_0/alu9);
    var alu30 = (val5_0/alu10);
    var alu31 = (val5_0/alu11);
    var alu32 = sqrt(alu28);
    var alu33 = sqrt(alu29);
    var alu34 = sqrt(alu30);
    var alu35 = sqrt(alu31);
    var alu36 = (alu4*alu32);
    var alu37 = (alu5*alu33);
    var alu38 = (alu6*alu34);
    var alu39 = (alu7*alu35);
    var alu40 = (alu36+val8_0);
    var alu41 = (alu37+val8_0);
    var alu42 = (alu38+val8_0);
    var alu43 = (alu39+val8_0);
    var alu44 = (alu40*val11_0);
    var alu45 = (alu41*val11_0);
    var alu46 = (alu42*val11_0);
    var alu47 = (alu43*val11_0);
    var alu48 = exp2(alu44);
    var alu49 = exp2(alu45);
    var alu50 = exp2(alu46);
    var alu51 = exp2(alu47);
    var alu52 = (val10_0+alu48);
    var alu53 = (val10_0+alu49);
    var alu54 = (val10_0+alu50);
    var alu55 = (val10_0+alu51);
    var alu56 = (val9_0/alu52);
    var alu57 = (val9_0/alu53);
    var alu58 = (val9_0/alu54);
    var alu59 = (val9_0/alu55);
    var alu60 = (alu24*alu56);
    var alu61 = (alu25*alu57);
    var alu62 = (alu26*alu58);
    var alu63 = (alu27*alu59);
    var alu64 = (alu60*val12_0);
    var alu65 = (alu61*val12_0);
    var alu66 = (alu62*val12_0);
    var alu67 = (alu63*val12_0);
    data0[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4))] = alu64;
    data0[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+1)] = alu65;
    data0[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+2)] = alu66;
    data0[((gidx0*12544)+(gidx1*1792)+(gidx2*16)+(lidx3*112)+(lidx4*4)+3)] = alu67;
  }}}}} /* global+local */
}`;

const r_196_4_16_32_4_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 196 */
  { let lidx1 = i32(lindex.y);  /* 4 */
  { let lidx2 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    var acc0_12 = 0.0f;
    var acc0_13 = 0.0f;
    var acc0_14 = 0.0f;
    var acc0_15 = 0.0f;
      var val1_0 = f32(data1[((gidx0*64)+(lidx2*4))]);
      var val1_1 = f32(data1[((gidx0*64)+(lidx2*4)+12544)]);
      var val1_2 = f32(data1[((gidx0*64)+(lidx2*4)+25088)]);
      var val1_3 = f32(data1[((gidx0*64)+(lidx2*4)+37632)]);
      var val1_4 = f32(data1[((gidx0*64)+(lidx2*4)+50176)]);
      var val1_5 = f32(data1[((gidx0*64)+(lidx2*4)+62720)]);
      var val1_6 = f32(data1[((gidx0*64)+(lidx2*4)+75264)]);
      var val1_7 = f32(data1[((gidx0*64)+(lidx2*4)+87808)]);
      var val1_8 = f32(data1[((gidx0*64)+(lidx2*4)+100352)]);
      var val1_9 = f32(data1[((gidx0*64)+(lidx2*4)+112896)]);
      var val1_10 = f32(data1[((gidx0*64)+(lidx2*4)+125440)]);
      var val1_11 = f32(data1[((gidx0*64)+(lidx2*4)+137984)]);
      var val1_12 = f32(data1[((gidx0*64)+(lidx2*4)+150528)]);
      var val1_13 = f32(data1[((gidx0*64)+(lidx2*4)+163072)]);
      var val1_14 = f32(data1[((gidx0*64)+(lidx2*4)+175616)]);
      var val1_15 = f32(data1[((gidx0*64)+(lidx2*4)+188160)]);
      var val1_16 = f32(data1[((gidx0*64)+(lidx2*4)+200704)]);
      var val1_17 = f32(data1[((gidx0*64)+(lidx2*4)+213248)]);
      var val1_18 = f32(data1[((gidx0*64)+(lidx2*4)+225792)]);
      var val1_19 = f32(data1[((gidx0*64)+(lidx2*4)+238336)]);
      var val1_20 = f32(data1[((gidx0*64)+(lidx2*4)+250880)]);
      var val1_21 = f32(data1[((gidx0*64)+(lidx2*4)+263424)]);
      var val1_22 = f32(data1[((gidx0*64)+(lidx2*4)+275968)]);
      var val1_23 = f32(data1[((gidx0*64)+(lidx2*4)+288512)]);
      var val1_24 = f32(data1[((gidx0*64)+(lidx2*4)+301056)]);
      var val1_25 = f32(data1[((gidx0*64)+(lidx2*4)+313600)]);
      var val1_26 = f32(data1[((gidx0*64)+(lidx2*4)+326144)]);
      var val1_27 = f32(data1[((gidx0*64)+(lidx2*4)+338688)]);
      var val1_28 = f32(data1[((gidx0*64)+(lidx2*4)+351232)]);
      var val1_29 = f32(data1[((gidx0*64)+(lidx2*4)+363776)]);
      var val1_30 = f32(data1[((gidx0*64)+(lidx2*4)+376320)]);
      var val1_31 = f32(data1[((gidx0*64)+(lidx2*4)+388864)]);
      var val1_32 = f32(data1[((gidx0*64)+(lidx2*4)+1)]);
      var val1_33 = f32(data1[((gidx0*64)+(lidx2*4)+12545)]);
      var val1_34 = f32(data1[((gidx0*64)+(lidx2*4)+25089)]);
      var val1_35 = f32(data1[((gidx0*64)+(lidx2*4)+37633)]);
      var val1_36 = f32(data1[((gidx0*64)+(lidx2*4)+50177)]);
      var val1_37 = f32(data1[((gidx0*64)+(lidx2*4)+62721)]);
      var val1_38 = f32(data1[((gidx0*64)+(lidx2*4)+75265)]);
      var val1_39 = f32(data1[((gidx0*64)+(lidx2*4)+87809)]);
      var val1_40 = f32(data1[((gidx0*64)+(lidx2*4)+100353)]);
      var val1_41 = f32(data1[((gidx0*64)+(lidx2*4)+112897)]);
      var val1_42 = f32(data1[((gidx0*64)+(lidx2*4)+125441)]);
      var val1_43 = f32(data1[((gidx0*64)+(lidx2*4)+137985)]);
      var val1_44 = f32(data1[((gidx0*64)+(lidx2*4)+150529)]);
      var val1_45 = f32(data1[((gidx0*64)+(lidx2*4)+163073)]);
      var val1_46 = f32(data1[((gidx0*64)+(lidx2*4)+175617)]);
      var val1_47 = f32(data1[((gidx0*64)+(lidx2*4)+188161)]);
      var val1_48 = f32(data1[((gidx0*64)+(lidx2*4)+200705)]);
      var val1_49 = f32(data1[((gidx0*64)+(lidx2*4)+213249)]);
      var val1_50 = f32(data1[((gidx0*64)+(lidx2*4)+225793)]);
      var val1_51 = f32(data1[((gidx0*64)+(lidx2*4)+238337)]);
      var val1_52 = f32(data1[((gidx0*64)+(lidx2*4)+250881)]);
      var val1_53 = f32(data1[((gidx0*64)+(lidx2*4)+263425)]);
      var val1_54 = f32(data1[((gidx0*64)+(lidx2*4)+275969)]);
      var val1_55 = f32(data1[((gidx0*64)+(lidx2*4)+288513)]);
      var val1_56 = f32(data1[((gidx0*64)+(lidx2*4)+301057)]);
      var val1_57 = f32(data1[((gidx0*64)+(lidx2*4)+313601)]);
      var val1_58 = f32(data1[((gidx0*64)+(lidx2*4)+326145)]);
      var val1_59 = f32(data1[((gidx0*64)+(lidx2*4)+338689)]);
      var val1_60 = f32(data1[((gidx0*64)+(lidx2*4)+351233)]);
      var val1_61 = f32(data1[((gidx0*64)+(lidx2*4)+363777)]);
      var val1_62 = f32(data1[((gidx0*64)+(lidx2*4)+376321)]);
      var val1_63 = f32(data1[((gidx0*64)+(lidx2*4)+388865)]);
      var val1_64 = f32(data1[((gidx0*64)+(lidx2*4)+2)]);
      var val1_65 = f32(data1[((gidx0*64)+(lidx2*4)+12546)]);
      var val1_66 = f32(data1[((gidx0*64)+(lidx2*4)+25090)]);
      var val1_67 = f32(data1[((gidx0*64)+(lidx2*4)+37634)]);
      var val1_68 = f32(data1[((gidx0*64)+(lidx2*4)+50178)]);
      var val1_69 = f32(data1[((gidx0*64)+(lidx2*4)+62722)]);
      var val1_70 = f32(data1[((gidx0*64)+(lidx2*4)+75266)]);
      var val1_71 = f32(data1[((gidx0*64)+(lidx2*4)+87810)]);
      var val1_72 = f32(data1[((gidx0*64)+(lidx2*4)+100354)]);
      var val1_73 = f32(data1[((gidx0*64)+(lidx2*4)+112898)]);
      var val1_74 = f32(data1[((gidx0*64)+(lidx2*4)+125442)]);
      var val1_75 = f32(data1[((gidx0*64)+(lidx2*4)+137986)]);
      var val1_76 = f32(data1[((gidx0*64)+(lidx2*4)+150530)]);
      var val1_77 = f32(data1[((gidx0*64)+(lidx2*4)+163074)]);
      var val1_78 = f32(data1[((gidx0*64)+(lidx2*4)+175618)]);
      var val1_79 = f32(data1[((gidx0*64)+(lidx2*4)+188162)]);
      var val1_80 = f32(data1[((gidx0*64)+(lidx2*4)+200706)]);
      var val1_81 = f32(data1[((gidx0*64)+(lidx2*4)+213250)]);
      var val1_82 = f32(data1[((gidx0*64)+(lidx2*4)+225794)]);
      var val1_83 = f32(data1[((gidx0*64)+(lidx2*4)+238338)]);
      var val1_84 = f32(data1[((gidx0*64)+(lidx2*4)+250882)]);
      var val1_85 = f32(data1[((gidx0*64)+(lidx2*4)+263426)]);
      var val1_86 = f32(data1[((gidx0*64)+(lidx2*4)+275970)]);
      var val1_87 = f32(data1[((gidx0*64)+(lidx2*4)+288514)]);
      var val1_88 = f32(data1[((gidx0*64)+(lidx2*4)+301058)]);
      var val1_89 = f32(data1[((gidx0*64)+(lidx2*4)+313602)]);
      var val1_90 = f32(data1[((gidx0*64)+(lidx2*4)+326146)]);
      var val1_91 = f32(data1[((gidx0*64)+(lidx2*4)+338690)]);
      var val1_92 = f32(data1[((gidx0*64)+(lidx2*4)+351234)]);
      var val1_93 = f32(data1[((gidx0*64)+(lidx2*4)+363778)]);
      var val1_94 = f32(data1[((gidx0*64)+(lidx2*4)+376322)]);
      var val1_95 = f32(data1[((gidx0*64)+(lidx2*4)+388866)]);
      var val1_96 = f32(data1[((gidx0*64)+(lidx2*4)+3)]);
      var val1_97 = f32(data1[((gidx0*64)+(lidx2*4)+12547)]);
      var val1_98 = f32(data1[((gidx0*64)+(lidx2*4)+25091)]);
      var val1_99 = f32(data1[((gidx0*64)+(lidx2*4)+37635)]);
      var val1_100 = f32(data1[((gidx0*64)+(lidx2*4)+50179)]);
      var val1_101 = f32(data1[((gidx0*64)+(lidx2*4)+62723)]);
      var val1_102 = f32(data1[((gidx0*64)+(lidx2*4)+75267)]);
      var val1_103 = f32(data1[((gidx0*64)+(lidx2*4)+87811)]);
      var val1_104 = f32(data1[((gidx0*64)+(lidx2*4)+100355)]);
      var val1_105 = f32(data1[((gidx0*64)+(lidx2*4)+112899)]);
      var val1_106 = f32(data1[((gidx0*64)+(lidx2*4)+125443)]);
      var val1_107 = f32(data1[((gidx0*64)+(lidx2*4)+137987)]);
      var val1_108 = f32(data1[((gidx0*64)+(lidx2*4)+150531)]);
      var val1_109 = f32(data1[((gidx0*64)+(lidx2*4)+163075)]);
      var val1_110 = f32(data1[((gidx0*64)+(lidx2*4)+175619)]);
      var val1_111 = f32(data1[((gidx0*64)+(lidx2*4)+188163)]);
      var val1_112 = f32(data1[((gidx0*64)+(lidx2*4)+200707)]);
      var val1_113 = f32(data1[((gidx0*64)+(lidx2*4)+213251)]);
      var val1_114 = f32(data1[((gidx0*64)+(lidx2*4)+225795)]);
      var val1_115 = f32(data1[((gidx0*64)+(lidx2*4)+238339)]);
      var val1_116 = f32(data1[((gidx0*64)+(lidx2*4)+250883)]);
      var val1_117 = f32(data1[((gidx0*64)+(lidx2*4)+263427)]);
      var val1_118 = f32(data1[((gidx0*64)+(lidx2*4)+275971)]);
      var val1_119 = f32(data1[((gidx0*64)+(lidx2*4)+288515)]);
      var val1_120 = f32(data1[((gidx0*64)+(lidx2*4)+301059)]);
      var val1_121 = f32(data1[((gidx0*64)+(lidx2*4)+313603)]);
      var val1_122 = f32(data1[((gidx0*64)+(lidx2*4)+326147)]);
      var val1_123 = f32(data1[((gidx0*64)+(lidx2*4)+338691)]);
      var val1_124 = f32(data1[((gidx0*64)+(lidx2*4)+351235)]);
      var val1_125 = f32(data1[((gidx0*64)+(lidx2*4)+363779)]);
      var val1_126 = f32(data1[((gidx0*64)+(lidx2*4)+376323)]);
      var val1_127 = f32(data1[((gidx0*64)+(lidx2*4)+388867)]);
      var val2_0 = f32(data2[(lidx1*128)]);
      var val2_1 = f32(data2[((lidx1*128)+1)]);
      var val2_2 = f32(data2[((lidx1*128)+2)]);
      var val2_3 = f32(data2[((lidx1*128)+3)]);
      var val2_4 = f32(data2[((lidx1*128)+4)]);
      var val2_5 = f32(data2[((lidx1*128)+5)]);
      var val2_6 = f32(data2[((lidx1*128)+6)]);
      var val2_7 = f32(data2[((lidx1*128)+7)]);
      var val2_8 = f32(data2[((lidx1*128)+8)]);
      var val2_9 = f32(data2[((lidx1*128)+9)]);
      var val2_10 = f32(data2[((lidx1*128)+10)]);
      var val2_11 = f32(data2[((lidx1*128)+11)]);
      var val2_12 = f32(data2[((lidx1*128)+12)]);
      var val2_13 = f32(data2[((lidx1*128)+13)]);
      var val2_14 = f32(data2[((lidx1*128)+14)]);
      var val2_15 = f32(data2[((lidx1*128)+15)]);
      var val2_16 = f32(data2[((lidx1*128)+16)]);
      var val2_17 = f32(data2[((lidx1*128)+17)]);
      var val2_18 = f32(data2[((lidx1*128)+18)]);
      var val2_19 = f32(data2[((lidx1*128)+19)]);
      var val2_20 = f32(data2[((lidx1*128)+20)]);
      var val2_21 = f32(data2[((lidx1*128)+21)]);
      var val2_22 = f32(data2[((lidx1*128)+22)]);
      var val2_23 = f32(data2[((lidx1*128)+23)]);
      var val2_24 = f32(data2[((lidx1*128)+24)]);
      var val2_25 = f32(data2[((lidx1*128)+25)]);
      var val2_26 = f32(data2[((lidx1*128)+26)]);
      var val2_27 = f32(data2[((lidx1*128)+27)]);
      var val2_28 = f32(data2[((lidx1*128)+28)]);
      var val2_29 = f32(data2[((lidx1*128)+29)]);
      var val2_30 = f32(data2[((lidx1*128)+30)]);
      var val2_31 = f32(data2[((lidx1*128)+31)]);
      var val2_32 = f32(data2[((lidx1*128)+32)]);
      var val2_33 = f32(data2[((lidx1*128)+33)]);
      var val2_34 = f32(data2[((lidx1*128)+34)]);
      var val2_35 = f32(data2[((lidx1*128)+35)]);
      var val2_36 = f32(data2[((lidx1*128)+36)]);
      var val2_37 = f32(data2[((lidx1*128)+37)]);
      var val2_38 = f32(data2[((lidx1*128)+38)]);
      var val2_39 = f32(data2[((lidx1*128)+39)]);
      var val2_40 = f32(data2[((lidx1*128)+40)]);
      var val2_41 = f32(data2[((lidx1*128)+41)]);
      var val2_42 = f32(data2[((lidx1*128)+42)]);
      var val2_43 = f32(data2[((lidx1*128)+43)]);
      var val2_44 = f32(data2[((lidx1*128)+44)]);
      var val2_45 = f32(data2[((lidx1*128)+45)]);
      var val2_46 = f32(data2[((lidx1*128)+46)]);
      var val2_47 = f32(data2[((lidx1*128)+47)]);
      var val2_48 = f32(data2[((lidx1*128)+48)]);
      var val2_49 = f32(data2[((lidx1*128)+49)]);
      var val2_50 = f32(data2[((lidx1*128)+50)]);
      var val2_51 = f32(data2[((lidx1*128)+51)]);
      var val2_52 = f32(data2[((lidx1*128)+52)]);
      var val2_53 = f32(data2[((lidx1*128)+53)]);
      var val2_54 = f32(data2[((lidx1*128)+54)]);
      var val2_55 = f32(data2[((lidx1*128)+55)]);
      var val2_56 = f32(data2[((lidx1*128)+56)]);
      var val2_57 = f32(data2[((lidx1*128)+57)]);
      var val2_58 = f32(data2[((lidx1*128)+58)]);
      var val2_59 = f32(data2[((lidx1*128)+59)]);
      var val2_60 = f32(data2[((lidx1*128)+60)]);
      var val2_61 = f32(data2[((lidx1*128)+61)]);
      var val2_62 = f32(data2[((lidx1*128)+62)]);
      var val2_63 = f32(data2[((lidx1*128)+63)]);
      var val2_64 = f32(data2[((lidx1*128)+64)]);
      var val2_65 = f32(data2[((lidx1*128)+65)]);
      var val2_66 = f32(data2[((lidx1*128)+66)]);
      var val2_67 = f32(data2[((lidx1*128)+67)]);
      var val2_68 = f32(data2[((lidx1*128)+68)]);
      var val2_69 = f32(data2[((lidx1*128)+69)]);
      var val2_70 = f32(data2[((lidx1*128)+70)]);
      var val2_71 = f32(data2[((lidx1*128)+71)]);
      var val2_72 = f32(data2[((lidx1*128)+72)]);
      var val2_73 = f32(data2[((lidx1*128)+73)]);
      var val2_74 = f32(data2[((lidx1*128)+74)]);
      var val2_75 = f32(data2[((lidx1*128)+75)]);
      var val2_76 = f32(data2[((lidx1*128)+76)]);
      var val2_77 = f32(data2[((lidx1*128)+77)]);
      var val2_78 = f32(data2[((lidx1*128)+78)]);
      var val2_79 = f32(data2[((lidx1*128)+79)]);
      var val2_80 = f32(data2[((lidx1*128)+80)]);
      var val2_81 = f32(data2[((lidx1*128)+81)]);
      var val2_82 = f32(data2[((lidx1*128)+82)]);
      var val2_83 = f32(data2[((lidx1*128)+83)]);
      var val2_84 = f32(data2[((lidx1*128)+84)]);
      var val2_85 = f32(data2[((lidx1*128)+85)]);
      var val2_86 = f32(data2[((lidx1*128)+86)]);
      var val2_87 = f32(data2[((lidx1*128)+87)]);
      var val2_88 = f32(data2[((lidx1*128)+88)]);
      var val2_89 = f32(data2[((lidx1*128)+89)]);
      var val2_90 = f32(data2[((lidx1*128)+90)]);
      var val2_91 = f32(data2[((lidx1*128)+91)]);
      var val2_92 = f32(data2[((lidx1*128)+92)]);
      var val2_93 = f32(data2[((lidx1*128)+93)]);
      var val2_94 = f32(data2[((lidx1*128)+94)]);
      var val2_95 = f32(data2[((lidx1*128)+95)]);
      var val2_96 = f32(data2[((lidx1*128)+96)]);
      var val2_97 = f32(data2[((lidx1*128)+97)]);
      var val2_98 = f32(data2[((lidx1*128)+98)]);
      var val2_99 = f32(data2[((lidx1*128)+99)]);
      var val2_100 = f32(data2[((lidx1*128)+100)]);
      var val2_101 = f32(data2[((lidx1*128)+101)]);
      var val2_102 = f32(data2[((lidx1*128)+102)]);
      var val2_103 = f32(data2[((lidx1*128)+103)]);
      var val2_104 = f32(data2[((lidx1*128)+104)]);
      var val2_105 = f32(data2[((lidx1*128)+105)]);
      var val2_106 = f32(data2[((lidx1*128)+106)]);
      var val2_107 = f32(data2[((lidx1*128)+107)]);
      var val2_108 = f32(data2[((lidx1*128)+108)]);
      var val2_109 = f32(data2[((lidx1*128)+109)]);
      var val2_110 = f32(data2[((lidx1*128)+110)]);
      var val2_111 = f32(data2[((lidx1*128)+111)]);
      var val2_112 = f32(data2[((lidx1*128)+112)]);
      var val2_113 = f32(data2[((lidx1*128)+113)]);
      var val2_114 = f32(data2[((lidx1*128)+114)]);
      var val2_115 = f32(data2[((lidx1*128)+115)]);
      var val2_116 = f32(data2[((lidx1*128)+116)]);
      var val2_117 = f32(data2[((lidx1*128)+117)]);
      var val2_118 = f32(data2[((lidx1*128)+118)]);
      var val2_119 = f32(data2[((lidx1*128)+119)]);
      var val2_120 = f32(data2[((lidx1*128)+120)]);
      var val2_121 = f32(data2[((lidx1*128)+121)]);
      var val2_122 = f32(data2[((lidx1*128)+122)]);
      var val2_123 = f32(data2[((lidx1*128)+123)]);
      var val2_124 = f32(data2[((lidx1*128)+124)]);
      var val2_125 = f32(data2[((lidx1*128)+125)]);
      var val2_126 = f32(data2[((lidx1*128)+126)]);
      var val2_127 = f32(data2[((lidx1*128)+127)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_0 = fma(val1_9,val2_9,acc0_0);
      acc0_0 = fma(val1_10,val2_10,acc0_0);
      acc0_0 = fma(val1_11,val2_11,acc0_0);
      acc0_0 = fma(val1_12,val2_12,acc0_0);
      acc0_0 = fma(val1_13,val2_13,acc0_0);
      acc0_0 = fma(val1_14,val2_14,acc0_0);
      acc0_0 = fma(val1_15,val2_15,acc0_0);
      acc0_0 = fma(val1_16,val2_16,acc0_0);
      acc0_0 = fma(val1_17,val2_17,acc0_0);
      acc0_0 = fma(val1_18,val2_18,acc0_0);
      acc0_0 = fma(val1_19,val2_19,acc0_0);
      acc0_0 = fma(val1_20,val2_20,acc0_0);
      acc0_0 = fma(val1_21,val2_21,acc0_0);
      acc0_0 = fma(val1_22,val2_22,acc0_0);
      acc0_0 = fma(val1_23,val2_23,acc0_0);
      acc0_0 = fma(val1_24,val2_24,acc0_0);
      acc0_0 = fma(val1_25,val2_25,acc0_0);
      acc0_0 = fma(val1_26,val2_26,acc0_0);
      acc0_0 = fma(val1_27,val2_27,acc0_0);
      acc0_0 = fma(val1_28,val2_28,acc0_0);
      acc0_0 = fma(val1_29,val2_29,acc0_0);
      acc0_0 = fma(val1_30,val2_30,acc0_0);
      acc0_0 = fma(val1_31,val2_31,acc0_0);
      acc0_1 = fma(val1_32,val2_0,acc0_1);
      acc0_1 = fma(val1_33,val2_1,acc0_1);
      acc0_1 = fma(val1_34,val2_2,acc0_1);
      acc0_1 = fma(val1_35,val2_3,acc0_1);
      acc0_1 = fma(val1_36,val2_4,acc0_1);
      acc0_1 = fma(val1_37,val2_5,acc0_1);
      acc0_1 = fma(val1_38,val2_6,acc0_1);
      acc0_1 = fma(val1_39,val2_7,acc0_1);
      acc0_1 = fma(val1_40,val2_8,acc0_1);
      acc0_1 = fma(val1_41,val2_9,acc0_1);
      acc0_1 = fma(val1_42,val2_10,acc0_1);
      acc0_1 = fma(val1_43,val2_11,acc0_1);
      acc0_1 = fma(val1_44,val2_12,acc0_1);
      acc0_1 = fma(val1_45,val2_13,acc0_1);
      acc0_1 = fma(val1_46,val2_14,acc0_1);
      acc0_1 = fma(val1_47,val2_15,acc0_1);
      acc0_1 = fma(val1_48,val2_16,acc0_1);
      acc0_1 = fma(val1_49,val2_17,acc0_1);
      acc0_1 = fma(val1_50,val2_18,acc0_1);
      acc0_1 = fma(val1_51,val2_19,acc0_1);
      acc0_1 = fma(val1_52,val2_20,acc0_1);
      acc0_1 = fma(val1_53,val2_21,acc0_1);
      acc0_1 = fma(val1_54,val2_22,acc0_1);
      acc0_1 = fma(val1_55,val2_23,acc0_1);
      acc0_1 = fma(val1_56,val2_24,acc0_1);
      acc0_1 = fma(val1_57,val2_25,acc0_1);
      acc0_1 = fma(val1_58,val2_26,acc0_1);
      acc0_1 = fma(val1_59,val2_27,acc0_1);
      acc0_1 = fma(val1_60,val2_28,acc0_1);
      acc0_1 = fma(val1_61,val2_29,acc0_1);
      acc0_1 = fma(val1_62,val2_30,acc0_1);
      acc0_1 = fma(val1_63,val2_31,acc0_1);
      acc0_2 = fma(val1_64,val2_0,acc0_2);
      acc0_2 = fma(val1_65,val2_1,acc0_2);
      acc0_2 = fma(val1_66,val2_2,acc0_2);
      acc0_2 = fma(val1_67,val2_3,acc0_2);
      acc0_2 = fma(val1_68,val2_4,acc0_2);
      acc0_2 = fma(val1_69,val2_5,acc0_2);
      acc0_2 = fma(val1_70,val2_6,acc0_2);
      acc0_2 = fma(val1_71,val2_7,acc0_2);
      acc0_2 = fma(val1_72,val2_8,acc0_2);
      acc0_2 = fma(val1_73,val2_9,acc0_2);
      acc0_2 = fma(val1_74,val2_10,acc0_2);
      acc0_2 = fma(val1_75,val2_11,acc0_2);
      acc0_2 = fma(val1_76,val2_12,acc0_2);
      acc0_2 = fma(val1_77,val2_13,acc0_2);
      acc0_2 = fma(val1_78,val2_14,acc0_2);
      acc0_2 = fma(val1_79,val2_15,acc0_2);
      acc0_2 = fma(val1_80,val2_16,acc0_2);
      acc0_2 = fma(val1_81,val2_17,acc0_2);
      acc0_2 = fma(val1_82,val2_18,acc0_2);
      acc0_2 = fma(val1_83,val2_19,acc0_2);
      acc0_2 = fma(val1_84,val2_20,acc0_2);
      acc0_2 = fma(val1_85,val2_21,acc0_2);
      acc0_2 = fma(val1_86,val2_22,acc0_2);
      acc0_2 = fma(val1_87,val2_23,acc0_2);
      acc0_2 = fma(val1_88,val2_24,acc0_2);
      acc0_2 = fma(val1_89,val2_25,acc0_2);
      acc0_2 = fma(val1_90,val2_26,acc0_2);
      acc0_2 = fma(val1_91,val2_27,acc0_2);
      acc0_2 = fma(val1_92,val2_28,acc0_2);
      acc0_2 = fma(val1_93,val2_29,acc0_2);
      acc0_2 = fma(val1_94,val2_30,acc0_2);
      acc0_2 = fma(val1_95,val2_31,acc0_2);
      acc0_3 = fma(val1_96,val2_0,acc0_3);
      acc0_3 = fma(val1_97,val2_1,acc0_3);
      acc0_3 = fma(val1_98,val2_2,acc0_3);
      acc0_3 = fma(val1_99,val2_3,acc0_3);
      acc0_3 = fma(val1_100,val2_4,acc0_3);
      acc0_3 = fma(val1_101,val2_5,acc0_3);
      acc0_3 = fma(val1_102,val2_6,acc0_3);
      acc0_3 = fma(val1_103,val2_7,acc0_3);
      acc0_3 = fma(val1_104,val2_8,acc0_3);
      acc0_3 = fma(val1_105,val2_9,acc0_3);
      acc0_3 = fma(val1_106,val2_10,acc0_3);
      acc0_3 = fma(val1_107,val2_11,acc0_3);
      acc0_3 = fma(val1_108,val2_12,acc0_3);
      acc0_3 = fma(val1_109,val2_13,acc0_3);
      acc0_3 = fma(val1_110,val2_14,acc0_3);
      acc0_3 = fma(val1_111,val2_15,acc0_3);
      acc0_3 = fma(val1_112,val2_16,acc0_3);
      acc0_3 = fma(val1_113,val2_17,acc0_3);
      acc0_3 = fma(val1_114,val2_18,acc0_3);
      acc0_3 = fma(val1_115,val2_19,acc0_3);
      acc0_3 = fma(val1_116,val2_20,acc0_3);
      acc0_3 = fma(val1_117,val2_21,acc0_3);
      acc0_3 = fma(val1_118,val2_22,acc0_3);
      acc0_3 = fma(val1_119,val2_23,acc0_3);
      acc0_3 = fma(val1_120,val2_24,acc0_3);
      acc0_3 = fma(val1_121,val2_25,acc0_3);
      acc0_3 = fma(val1_122,val2_26,acc0_3);
      acc0_3 = fma(val1_123,val2_27,acc0_3);
      acc0_3 = fma(val1_124,val2_28,acc0_3);
      acc0_3 = fma(val1_125,val2_29,acc0_3);
      acc0_3 = fma(val1_126,val2_30,acc0_3);
      acc0_3 = fma(val1_127,val2_31,acc0_3);
      acc0_4 = fma(val1_0,val2_32,acc0_4);
      acc0_4 = fma(val1_1,val2_33,acc0_4);
      acc0_4 = fma(val1_2,val2_34,acc0_4);
      acc0_4 = fma(val1_3,val2_35,acc0_4);
      acc0_4 = fma(val1_4,val2_36,acc0_4);
      acc0_4 = fma(val1_5,val2_37,acc0_4);
      acc0_4 = fma(val1_6,val2_38,acc0_4);
      acc0_4 = fma(val1_7,val2_39,acc0_4);
      acc0_4 = fma(val1_8,val2_40,acc0_4);
      acc0_4 = fma(val1_9,val2_41,acc0_4);
      acc0_4 = fma(val1_10,val2_42,acc0_4);
      acc0_4 = fma(val1_11,val2_43,acc0_4);
      acc0_4 = fma(val1_12,val2_44,acc0_4);
      acc0_4 = fma(val1_13,val2_45,acc0_4);
      acc0_4 = fma(val1_14,val2_46,acc0_4);
      acc0_4 = fma(val1_15,val2_47,acc0_4);
      acc0_4 = fma(val1_16,val2_48,acc0_4);
      acc0_4 = fma(val1_17,val2_49,acc0_4);
      acc0_4 = fma(val1_18,val2_50,acc0_4);
      acc0_4 = fma(val1_19,val2_51,acc0_4);
      acc0_4 = fma(val1_20,val2_52,acc0_4);
      acc0_4 = fma(val1_21,val2_53,acc0_4);
      acc0_4 = fma(val1_22,val2_54,acc0_4);
      acc0_4 = fma(val1_23,val2_55,acc0_4);
      acc0_4 = fma(val1_24,val2_56,acc0_4);
      acc0_4 = fma(val1_25,val2_57,acc0_4);
      acc0_4 = fma(val1_26,val2_58,acc0_4);
      acc0_4 = fma(val1_27,val2_59,acc0_4);
      acc0_4 = fma(val1_28,val2_60,acc0_4);
      acc0_4 = fma(val1_29,val2_61,acc0_4);
      acc0_4 = fma(val1_30,val2_62,acc0_4);
      acc0_4 = fma(val1_31,val2_63,acc0_4);
      acc0_5 = fma(val1_32,val2_32,acc0_5);
      acc0_5 = fma(val1_33,val2_33,acc0_5);
      acc0_5 = fma(val1_34,val2_34,acc0_5);
      acc0_5 = fma(val1_35,val2_35,acc0_5);
      acc0_5 = fma(val1_36,val2_36,acc0_5);
      acc0_5 = fma(val1_37,val2_37,acc0_5);
      acc0_5 = fma(val1_38,val2_38,acc0_5);
      acc0_5 = fma(val1_39,val2_39,acc0_5);
      acc0_5 = fma(val1_40,val2_40,acc0_5);
      acc0_5 = fma(val1_41,val2_41,acc0_5);
      acc0_5 = fma(val1_42,val2_42,acc0_5);
      acc0_5 = fma(val1_43,val2_43,acc0_5);
      acc0_5 = fma(val1_44,val2_44,acc0_5);
      acc0_5 = fma(val1_45,val2_45,acc0_5);
      acc0_5 = fma(val1_46,val2_46,acc0_5);
      acc0_5 = fma(val1_47,val2_47,acc0_5);
      acc0_5 = fma(val1_48,val2_48,acc0_5);
      acc0_5 = fma(val1_49,val2_49,acc0_5);
      acc0_5 = fma(val1_50,val2_50,acc0_5);
      acc0_5 = fma(val1_51,val2_51,acc0_5);
      acc0_5 = fma(val1_52,val2_52,acc0_5);
      acc0_5 = fma(val1_53,val2_53,acc0_5);
      acc0_5 = fma(val1_54,val2_54,acc0_5);
      acc0_5 = fma(val1_55,val2_55,acc0_5);
      acc0_5 = fma(val1_56,val2_56,acc0_5);
      acc0_5 = fma(val1_57,val2_57,acc0_5);
      acc0_5 = fma(val1_58,val2_58,acc0_5);
      acc0_5 = fma(val1_59,val2_59,acc0_5);
      acc0_5 = fma(val1_60,val2_60,acc0_5);
      acc0_5 = fma(val1_61,val2_61,acc0_5);
      acc0_5 = fma(val1_62,val2_62,acc0_5);
      acc0_5 = fma(val1_63,val2_63,acc0_5);
      acc0_6 = fma(val1_64,val2_32,acc0_6);
      acc0_6 = fma(val1_65,val2_33,acc0_6);
      acc0_6 = fma(val1_66,val2_34,acc0_6);
      acc0_6 = fma(val1_67,val2_35,acc0_6);
      acc0_6 = fma(val1_68,val2_36,acc0_6);
      acc0_6 = fma(val1_69,val2_37,acc0_6);
      acc0_6 = fma(val1_70,val2_38,acc0_6);
      acc0_6 = fma(val1_71,val2_39,acc0_6);
      acc0_6 = fma(val1_72,val2_40,acc0_6);
      acc0_6 = fma(val1_73,val2_41,acc0_6);
      acc0_6 = fma(val1_74,val2_42,acc0_6);
      acc0_6 = fma(val1_75,val2_43,acc0_6);
      acc0_6 = fma(val1_76,val2_44,acc0_6);
      acc0_6 = fma(val1_77,val2_45,acc0_6);
      acc0_6 = fma(val1_78,val2_46,acc0_6);
      acc0_6 = fma(val1_79,val2_47,acc0_6);
      acc0_6 = fma(val1_80,val2_48,acc0_6);
      acc0_6 = fma(val1_81,val2_49,acc0_6);
      acc0_6 = fma(val1_82,val2_50,acc0_6);
      acc0_6 = fma(val1_83,val2_51,acc0_6);
      acc0_6 = fma(val1_84,val2_52,acc0_6);
      acc0_6 = fma(val1_85,val2_53,acc0_6);
      acc0_6 = fma(val1_86,val2_54,acc0_6);
      acc0_6 = fma(val1_87,val2_55,acc0_6);
      acc0_6 = fma(val1_88,val2_56,acc0_6);
      acc0_6 = fma(val1_89,val2_57,acc0_6);
      acc0_6 = fma(val1_90,val2_58,acc0_6);
      acc0_6 = fma(val1_91,val2_59,acc0_6);
      acc0_6 = fma(val1_92,val2_60,acc0_6);
      acc0_6 = fma(val1_93,val2_61,acc0_6);
      acc0_6 = fma(val1_94,val2_62,acc0_6);
      acc0_6 = fma(val1_95,val2_63,acc0_6);
      acc0_7 = fma(val1_96,val2_32,acc0_7);
      acc0_7 = fma(val1_97,val2_33,acc0_7);
      acc0_7 = fma(val1_98,val2_34,acc0_7);
      acc0_7 = fma(val1_99,val2_35,acc0_7);
      acc0_7 = fma(val1_100,val2_36,acc0_7);
      acc0_7 = fma(val1_101,val2_37,acc0_7);
      acc0_7 = fma(val1_102,val2_38,acc0_7);
      acc0_7 = fma(val1_103,val2_39,acc0_7);
      acc0_7 = fma(val1_104,val2_40,acc0_7);
      acc0_7 = fma(val1_105,val2_41,acc0_7);
      acc0_7 = fma(val1_106,val2_42,acc0_7);
      acc0_7 = fma(val1_107,val2_43,acc0_7);
      acc0_7 = fma(val1_108,val2_44,acc0_7);
      acc0_7 = fma(val1_109,val2_45,acc0_7);
      acc0_7 = fma(val1_110,val2_46,acc0_7);
      acc0_7 = fma(val1_111,val2_47,acc0_7);
      acc0_7 = fma(val1_112,val2_48,acc0_7);
      acc0_7 = fma(val1_113,val2_49,acc0_7);
      acc0_7 = fma(val1_114,val2_50,acc0_7);
      acc0_7 = fma(val1_115,val2_51,acc0_7);
      acc0_7 = fma(val1_116,val2_52,acc0_7);
      acc0_7 = fma(val1_117,val2_53,acc0_7);
      acc0_7 = fma(val1_118,val2_54,acc0_7);
      acc0_7 = fma(val1_119,val2_55,acc0_7);
      acc0_7 = fma(val1_120,val2_56,acc0_7);
      acc0_7 = fma(val1_121,val2_57,acc0_7);
      acc0_7 = fma(val1_122,val2_58,acc0_7);
      acc0_7 = fma(val1_123,val2_59,acc0_7);
      acc0_7 = fma(val1_124,val2_60,acc0_7);
      acc0_7 = fma(val1_125,val2_61,acc0_7);
      acc0_7 = fma(val1_126,val2_62,acc0_7);
      acc0_7 = fma(val1_127,val2_63,acc0_7);
      acc0_8 = fma(val1_0,val2_64,acc0_8);
      acc0_8 = fma(val1_1,val2_65,acc0_8);
      acc0_8 = fma(val1_2,val2_66,acc0_8);
      acc0_8 = fma(val1_3,val2_67,acc0_8);
      acc0_8 = fma(val1_4,val2_68,acc0_8);
      acc0_8 = fma(val1_5,val2_69,acc0_8);
      acc0_8 = fma(val1_6,val2_70,acc0_8);
      acc0_8 = fma(val1_7,val2_71,acc0_8);
      acc0_8 = fma(val1_8,val2_72,acc0_8);
      acc0_8 = fma(val1_9,val2_73,acc0_8);
      acc0_8 = fma(val1_10,val2_74,acc0_8);
      acc0_8 = fma(val1_11,val2_75,acc0_8);
      acc0_8 = fma(val1_12,val2_76,acc0_8);
      acc0_8 = fma(val1_13,val2_77,acc0_8);
      acc0_8 = fma(val1_14,val2_78,acc0_8);
      acc0_8 = fma(val1_15,val2_79,acc0_8);
      acc0_8 = fma(val1_16,val2_80,acc0_8);
      acc0_8 = fma(val1_17,val2_81,acc0_8);
      acc0_8 = fma(val1_18,val2_82,acc0_8);
      acc0_8 = fma(val1_19,val2_83,acc0_8);
      acc0_8 = fma(val1_20,val2_84,acc0_8);
      acc0_8 = fma(val1_21,val2_85,acc0_8);
      acc0_8 = fma(val1_22,val2_86,acc0_8);
      acc0_8 = fma(val1_23,val2_87,acc0_8);
      acc0_8 = fma(val1_24,val2_88,acc0_8);
      acc0_8 = fma(val1_25,val2_89,acc0_8);
      acc0_8 = fma(val1_26,val2_90,acc0_8);
      acc0_8 = fma(val1_27,val2_91,acc0_8);
      acc0_8 = fma(val1_28,val2_92,acc0_8);
      acc0_8 = fma(val1_29,val2_93,acc0_8);
      acc0_8 = fma(val1_30,val2_94,acc0_8);
      acc0_8 = fma(val1_31,val2_95,acc0_8);
      acc0_9 = fma(val1_32,val2_64,acc0_9);
      acc0_9 = fma(val1_33,val2_65,acc0_9);
      acc0_9 = fma(val1_34,val2_66,acc0_9);
      acc0_9 = fma(val1_35,val2_67,acc0_9);
      acc0_9 = fma(val1_36,val2_68,acc0_9);
      acc0_9 = fma(val1_37,val2_69,acc0_9);
      acc0_9 = fma(val1_38,val2_70,acc0_9);
      acc0_9 = fma(val1_39,val2_71,acc0_9);
      acc0_9 = fma(val1_40,val2_72,acc0_9);
      acc0_9 = fma(val1_41,val2_73,acc0_9);
      acc0_9 = fma(val1_42,val2_74,acc0_9);
      acc0_9 = fma(val1_43,val2_75,acc0_9);
      acc0_9 = fma(val1_44,val2_76,acc0_9);
      acc0_9 = fma(val1_45,val2_77,acc0_9);
      acc0_9 = fma(val1_46,val2_78,acc0_9);
      acc0_9 = fma(val1_47,val2_79,acc0_9);
      acc0_9 = fma(val1_48,val2_80,acc0_9);
      acc0_9 = fma(val1_49,val2_81,acc0_9);
      acc0_9 = fma(val1_50,val2_82,acc0_9);
      acc0_9 = fma(val1_51,val2_83,acc0_9);
      acc0_9 = fma(val1_52,val2_84,acc0_9);
      acc0_9 = fma(val1_53,val2_85,acc0_9);
      acc0_9 = fma(val1_54,val2_86,acc0_9);
      acc0_9 = fma(val1_55,val2_87,acc0_9);
      acc0_9 = fma(val1_56,val2_88,acc0_9);
      acc0_9 = fma(val1_57,val2_89,acc0_9);
      acc0_9 = fma(val1_58,val2_90,acc0_9);
      acc0_9 = fma(val1_59,val2_91,acc0_9);
      acc0_9 = fma(val1_60,val2_92,acc0_9);
      acc0_9 = fma(val1_61,val2_93,acc0_9);
      acc0_9 = fma(val1_62,val2_94,acc0_9);
      acc0_9 = fma(val1_63,val2_95,acc0_9);
      acc0_10 = fma(val1_64,val2_64,acc0_10);
      acc0_10 = fma(val1_65,val2_65,acc0_10);
      acc0_10 = fma(val1_66,val2_66,acc0_10);
      acc0_10 = fma(val1_67,val2_67,acc0_10);
      acc0_10 = fma(val1_68,val2_68,acc0_10);
      acc0_10 = fma(val1_69,val2_69,acc0_10);
      acc0_10 = fma(val1_70,val2_70,acc0_10);
      acc0_10 = fma(val1_71,val2_71,acc0_10);
      acc0_10 = fma(val1_72,val2_72,acc0_10);
      acc0_10 = fma(val1_73,val2_73,acc0_10);
      acc0_10 = fma(val1_74,val2_74,acc0_10);
      acc0_10 = fma(val1_75,val2_75,acc0_10);
      acc0_10 = fma(val1_76,val2_76,acc0_10);
      acc0_10 = fma(val1_77,val2_77,acc0_10);
      acc0_10 = fma(val1_78,val2_78,acc0_10);
      acc0_10 = fma(val1_79,val2_79,acc0_10);
      acc0_10 = fma(val1_80,val2_80,acc0_10);
      acc0_10 = fma(val1_81,val2_81,acc0_10);
      acc0_10 = fma(val1_82,val2_82,acc0_10);
      acc0_10 = fma(val1_83,val2_83,acc0_10);
      acc0_10 = fma(val1_84,val2_84,acc0_10);
      acc0_10 = fma(val1_85,val2_85,acc0_10);
      acc0_10 = fma(val1_86,val2_86,acc0_10);
      acc0_10 = fma(val1_87,val2_87,acc0_10);
      acc0_10 = fma(val1_88,val2_88,acc0_10);
      acc0_10 = fma(val1_89,val2_89,acc0_10);
      acc0_10 = fma(val1_90,val2_90,acc0_10);
      acc0_10 = fma(val1_91,val2_91,acc0_10);
      acc0_10 = fma(val1_92,val2_92,acc0_10);
      acc0_10 = fma(val1_93,val2_93,acc0_10);
      acc0_10 = fma(val1_94,val2_94,acc0_10);
      acc0_10 = fma(val1_95,val2_95,acc0_10);
      acc0_11 = fma(val1_96,val2_64,acc0_11);
      acc0_11 = fma(val1_97,val2_65,acc0_11);
      acc0_11 = fma(val1_98,val2_66,acc0_11);
      acc0_11 = fma(val1_99,val2_67,acc0_11);
      acc0_11 = fma(val1_100,val2_68,acc0_11);
      acc0_11 = fma(val1_101,val2_69,acc0_11);
      acc0_11 = fma(val1_102,val2_70,acc0_11);
      acc0_11 = fma(val1_103,val2_71,acc0_11);
      acc0_11 = fma(val1_104,val2_72,acc0_11);
      acc0_11 = fma(val1_105,val2_73,acc0_11);
      acc0_11 = fma(val1_106,val2_74,acc0_11);
      acc0_11 = fma(val1_107,val2_75,acc0_11);
      acc0_11 = fma(val1_108,val2_76,acc0_11);
      acc0_11 = fma(val1_109,val2_77,acc0_11);
      acc0_11 = fma(val1_110,val2_78,acc0_11);
      acc0_11 = fma(val1_111,val2_79,acc0_11);
      acc0_11 = fma(val1_112,val2_80,acc0_11);
      acc0_11 = fma(val1_113,val2_81,acc0_11);
      acc0_11 = fma(val1_114,val2_82,acc0_11);
      acc0_11 = fma(val1_115,val2_83,acc0_11);
      acc0_11 = fma(val1_116,val2_84,acc0_11);
      acc0_11 = fma(val1_117,val2_85,acc0_11);
      acc0_11 = fma(val1_118,val2_86,acc0_11);
      acc0_11 = fma(val1_119,val2_87,acc0_11);
      acc0_11 = fma(val1_120,val2_88,acc0_11);
      acc0_11 = fma(val1_121,val2_89,acc0_11);
      acc0_11 = fma(val1_122,val2_90,acc0_11);
      acc0_11 = fma(val1_123,val2_91,acc0_11);
      acc0_11 = fma(val1_124,val2_92,acc0_11);
      acc0_11 = fma(val1_125,val2_93,acc0_11);
      acc0_11 = fma(val1_126,val2_94,acc0_11);
      acc0_11 = fma(val1_127,val2_95,acc0_11);
      acc0_12 = fma(val1_0,val2_96,acc0_12);
      acc0_12 = fma(val1_1,val2_97,acc0_12);
      acc0_12 = fma(val1_2,val2_98,acc0_12);
      acc0_12 = fma(val1_3,val2_99,acc0_12);
      acc0_12 = fma(val1_4,val2_100,acc0_12);
      acc0_12 = fma(val1_5,val2_101,acc0_12);
      acc0_12 = fma(val1_6,val2_102,acc0_12);
      acc0_12 = fma(val1_7,val2_103,acc0_12);
      acc0_12 = fma(val1_8,val2_104,acc0_12);
      acc0_12 = fma(val1_9,val2_105,acc0_12);
      acc0_12 = fma(val1_10,val2_106,acc0_12);
      acc0_12 = fma(val1_11,val2_107,acc0_12);
      acc0_12 = fma(val1_12,val2_108,acc0_12);
      acc0_12 = fma(val1_13,val2_109,acc0_12);
      acc0_12 = fma(val1_14,val2_110,acc0_12);
      acc0_12 = fma(val1_15,val2_111,acc0_12);
      acc0_12 = fma(val1_16,val2_112,acc0_12);
      acc0_12 = fma(val1_17,val2_113,acc0_12);
      acc0_12 = fma(val1_18,val2_114,acc0_12);
      acc0_12 = fma(val1_19,val2_115,acc0_12);
      acc0_12 = fma(val1_20,val2_116,acc0_12);
      acc0_12 = fma(val1_21,val2_117,acc0_12);
      acc0_12 = fma(val1_22,val2_118,acc0_12);
      acc0_12 = fma(val1_23,val2_119,acc0_12);
      acc0_12 = fma(val1_24,val2_120,acc0_12);
      acc0_12 = fma(val1_25,val2_121,acc0_12);
      acc0_12 = fma(val1_26,val2_122,acc0_12);
      acc0_12 = fma(val1_27,val2_123,acc0_12);
      acc0_12 = fma(val1_28,val2_124,acc0_12);
      acc0_12 = fma(val1_29,val2_125,acc0_12);
      acc0_12 = fma(val1_30,val2_126,acc0_12);
      acc0_12 = fma(val1_31,val2_127,acc0_12);
      acc0_13 = fma(val1_32,val2_96,acc0_13);
      acc0_13 = fma(val1_33,val2_97,acc0_13);
      acc0_13 = fma(val1_34,val2_98,acc0_13);
      acc0_13 = fma(val1_35,val2_99,acc0_13);
      acc0_13 = fma(val1_36,val2_100,acc0_13);
      acc0_13 = fma(val1_37,val2_101,acc0_13);
      acc0_13 = fma(val1_38,val2_102,acc0_13);
      acc0_13 = fma(val1_39,val2_103,acc0_13);
      acc0_13 = fma(val1_40,val2_104,acc0_13);
      acc0_13 = fma(val1_41,val2_105,acc0_13);
      acc0_13 = fma(val1_42,val2_106,acc0_13);
      acc0_13 = fma(val1_43,val2_107,acc0_13);
      acc0_13 = fma(val1_44,val2_108,acc0_13);
      acc0_13 = fma(val1_45,val2_109,acc0_13);
      acc0_13 = fma(val1_46,val2_110,acc0_13);
      acc0_13 = fma(val1_47,val2_111,acc0_13);
      acc0_13 = fma(val1_48,val2_112,acc0_13);
      acc0_13 = fma(val1_49,val2_113,acc0_13);
      acc0_13 = fma(val1_50,val2_114,acc0_13);
      acc0_13 = fma(val1_51,val2_115,acc0_13);
      acc0_13 = fma(val1_52,val2_116,acc0_13);
      acc0_13 = fma(val1_53,val2_117,acc0_13);
      acc0_13 = fma(val1_54,val2_118,acc0_13);
      acc0_13 = fma(val1_55,val2_119,acc0_13);
      acc0_13 = fma(val1_56,val2_120,acc0_13);
      acc0_13 = fma(val1_57,val2_121,acc0_13);
      acc0_13 = fma(val1_58,val2_122,acc0_13);
      acc0_13 = fma(val1_59,val2_123,acc0_13);
      acc0_13 = fma(val1_60,val2_124,acc0_13);
      acc0_13 = fma(val1_61,val2_125,acc0_13);
      acc0_13 = fma(val1_62,val2_126,acc0_13);
      acc0_13 = fma(val1_63,val2_127,acc0_13);
      acc0_14 = fma(val1_64,val2_96,acc0_14);
      acc0_14 = fma(val1_65,val2_97,acc0_14);
      acc0_14 = fma(val1_66,val2_98,acc0_14);
      acc0_14 = fma(val1_67,val2_99,acc0_14);
      acc0_14 = fma(val1_68,val2_100,acc0_14);
      acc0_14 = fma(val1_69,val2_101,acc0_14);
      acc0_14 = fma(val1_70,val2_102,acc0_14);
      acc0_14 = fma(val1_71,val2_103,acc0_14);
      acc0_14 = fma(val1_72,val2_104,acc0_14);
      acc0_14 = fma(val1_73,val2_105,acc0_14);
      acc0_14 = fma(val1_74,val2_106,acc0_14);
      acc0_14 = fma(val1_75,val2_107,acc0_14);
      acc0_14 = fma(val1_76,val2_108,acc0_14);
      acc0_14 = fma(val1_77,val2_109,acc0_14);
      acc0_14 = fma(val1_78,val2_110,acc0_14);
      acc0_14 = fma(val1_79,val2_111,acc0_14);
      acc0_14 = fma(val1_80,val2_112,acc0_14);
      acc0_14 = fma(val1_81,val2_113,acc0_14);
      acc0_14 = fma(val1_82,val2_114,acc0_14);
      acc0_14 = fma(val1_83,val2_115,acc0_14);
      acc0_14 = fma(val1_84,val2_116,acc0_14);
      acc0_14 = fma(val1_85,val2_117,acc0_14);
      acc0_14 = fma(val1_86,val2_118,acc0_14);
      acc0_14 = fma(val1_87,val2_119,acc0_14);
      acc0_14 = fma(val1_88,val2_120,acc0_14);
      acc0_14 = fma(val1_89,val2_121,acc0_14);
      acc0_14 = fma(val1_90,val2_122,acc0_14);
      acc0_14 = fma(val1_91,val2_123,acc0_14);
      acc0_14 = fma(val1_92,val2_124,acc0_14);
      acc0_14 = fma(val1_93,val2_125,acc0_14);
      acc0_14 = fma(val1_94,val2_126,acc0_14);
      acc0_14 = fma(val1_95,val2_127,acc0_14);
      acc0_15 = fma(val1_96,val2_96,acc0_15);
      acc0_15 = fma(val1_97,val2_97,acc0_15);
      acc0_15 = fma(val1_98,val2_98,acc0_15);
      acc0_15 = fma(val1_99,val2_99,acc0_15);
      acc0_15 = fma(val1_100,val2_100,acc0_15);
      acc0_15 = fma(val1_101,val2_101,acc0_15);
      acc0_15 = fma(val1_102,val2_102,acc0_15);
      acc0_15 = fma(val1_103,val2_103,acc0_15);
      acc0_15 = fma(val1_104,val2_104,acc0_15);
      acc0_15 = fma(val1_105,val2_105,acc0_15);
      acc0_15 = fma(val1_106,val2_106,acc0_15);
      acc0_15 = fma(val1_107,val2_107,acc0_15);
      acc0_15 = fma(val1_108,val2_108,acc0_15);
      acc0_15 = fma(val1_109,val2_109,acc0_15);
      acc0_15 = fma(val1_110,val2_110,acc0_15);
      acc0_15 = fma(val1_111,val2_111,acc0_15);
      acc0_15 = fma(val1_112,val2_112,acc0_15);
      acc0_15 = fma(val1_113,val2_113,acc0_15);
      acc0_15 = fma(val1_114,val2_114,acc0_15);
      acc0_15 = fma(val1_115,val2_115,acc0_15);
      acc0_15 = fma(val1_116,val2_116,acc0_15);
      acc0_15 = fma(val1_117,val2_117,acc0_15);
      acc0_15 = fma(val1_118,val2_118,acc0_15);
      acc0_15 = fma(val1_119,val2_119,acc0_15);
      acc0_15 = fma(val1_120,val2_120,acc0_15);
      acc0_15 = fma(val1_121,val2_121,acc0_15);
      acc0_15 = fma(val1_122,val2_122,acc0_15);
      acc0_15 = fma(val1_123,val2_123,acc0_15);
      acc0_15 = fma(val1_124,val2_124,acc0_15);
      acc0_15 = fma(val1_125,val2_125,acc0_15);
      acc0_15 = fma(val1_126,val2_126,acc0_15);
      acc0_15 = fma(val1_127,val2_127,acc0_15);
     /* reduce */
    var val3_0 = f32(data3[(lidx1*4)]);
    var val3_1 = f32(data3[((lidx1*4)+1)]);
    var val3_2 = f32(data3[((lidx1*4)+2)]);
    var val3_3 = f32(data3[((lidx1*4)+3)]);
    var val4_0 = f32(data4[(lidx1*4)]);
    var val4_1 = f32(data4[((lidx1*4)+1)]);
    var val4_2 = f32(data4[((lidx1*4)+2)]);
    var val4_3 = f32(data4[((lidx1*4)+3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[(lidx1*4)]);
    var val6_1 = f32(data6[((lidx1*4)+1)]);
    var val6_2 = f32(data6[((lidx1*4)+2)]);
    var val6_3 = f32(data6[((lidx1*4)+3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[(lidx1*4)]);
    var val8_1 = f32(data8[((lidx1*4)+1)]);
    var val8_2 = f32(data8[((lidx1*4)+2)]);
    var val8_3 = f32(data8[((lidx1*4)+3)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (acc0_12-val3_3);
    var alu13 = (acc0_13-val3_3);
    var alu14 = (acc0_14-val3_3);
    var alu15 = (acc0_15-val3_3);
    var alu16 = (alu0*val4_0);
    var alu17 = (alu1*val4_0);
    var alu18 = (alu2*val4_0);
    var alu19 = (alu3*val4_0);
    var alu20 = (alu4*val4_1);
    var alu21 = (alu5*val4_1);
    var alu22 = (alu6*val4_1);
    var alu23 = (alu7*val4_1);
    var alu24 = (alu8*val4_2);
    var alu25 = (alu9*val4_2);
    var alu26 = (alu10*val4_2);
    var alu27 = (alu11*val4_2);
    var alu28 = (alu12*val4_3);
    var alu29 = (alu13*val4_3);
    var alu30 = (alu14*val4_3);
    var alu31 = (alu15*val4_3);
    var alu32 = (val7_0+val6_0);
    var alu33 = (val7_0+val6_0);
    var alu34 = (val7_0+val6_0);
    var alu35 = (val7_0+val6_0);
    var alu36 = (val7_0+val6_1);
    var alu37 = (val7_0+val6_1);
    var alu38 = (val7_0+val6_1);
    var alu39 = (val7_0+val6_1);
    var alu40 = (val7_0+val6_2);
    var alu41 = (val7_0+val6_2);
    var alu42 = (val7_0+val6_2);
    var alu43 = (val7_0+val6_2);
    var alu44 = (val7_0+val6_3);
    var alu45 = (val7_0+val6_3);
    var alu46 = (val7_0+val6_3);
    var alu47 = (val7_0+val6_3);
    var alu48 = (val5_0/alu32);
    var alu49 = (val5_0/alu33);
    var alu50 = (val5_0/alu34);
    var alu51 = (val5_0/alu35);
    var alu52 = (val5_0/alu36);
    var alu53 = (val5_0/alu37);
    var alu54 = (val5_0/alu38);
    var alu55 = (val5_0/alu39);
    var alu56 = (val5_0/alu40);
    var alu57 = (val5_0/alu41);
    var alu58 = (val5_0/alu42);
    var alu59 = (val5_0/alu43);
    var alu60 = (val5_0/alu44);
    var alu61 = (val5_0/alu45);
    var alu62 = (val5_0/alu46);
    var alu63 = (val5_0/alu47);
    var alu64 = sqrt(alu48);
    var alu65 = sqrt(alu49);
    var alu66 = sqrt(alu50);
    var alu67 = sqrt(alu51);
    var alu68 = sqrt(alu52);
    var alu69 = sqrt(alu53);
    var alu70 = sqrt(alu54);
    var alu71 = sqrt(alu55);
    var alu72 = sqrt(alu56);
    var alu73 = sqrt(alu57);
    var alu74 = sqrt(alu58);
    var alu75 = sqrt(alu59);
    var alu76 = sqrt(alu60);
    var alu77 = sqrt(alu61);
    var alu78 = sqrt(alu62);
    var alu79 = sqrt(alu63);
    var alu80 = (alu16*alu64);
    var alu81 = (alu17*alu65);
    var alu82 = (alu18*alu66);
    var alu83 = (alu19*alu67);
    var alu84 = (alu20*alu68);
    var alu85 = (alu21*alu69);
    var alu86 = (alu22*alu70);
    var alu87 = (alu23*alu71);
    var alu88 = (alu24*alu72);
    var alu89 = (alu25*alu73);
    var alu90 = (alu26*alu74);
    var alu91 = (alu27*alu75);
    var alu92 = (alu28*alu76);
    var alu93 = (alu29*alu77);
    var alu94 = (alu30*alu78);
    var alu95 = (alu31*alu79);
    var alu96 = (alu80+val8_0);
    var alu97 = (alu81+val8_0);
    var alu98 = (alu82+val8_0);
    var alu99 = (alu83+val8_0);
    var alu100 = (alu84+val8_1);
    var alu101 = (alu85+val8_1);
    var alu102 = (alu86+val8_1);
    var alu103 = (alu87+val8_1);
    var alu104 = (alu88+val8_2);
    var alu105 = (alu89+val8_2);
    var alu106 = (alu90+val8_2);
    var alu107 = (alu91+val8_2);
    var alu108 = (alu92+val8_3);
    var alu109 = (alu93+val8_3);
    var alu110 = (alu94+val8_3);
    var alu111 = (alu95+val8_3);
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4))] = alu96;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+1)] = alu97;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+2)] = alu98;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+3)] = alu99;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+12544)] = alu100;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+12545)] = alu101;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+12546)] = alu102;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+12547)] = alu103;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+25088)] = alu104;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+25089)] = alu105;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+25090)] = alu106;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+25091)] = alu107;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+37632)] = alu108;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+37633)] = alu109;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+37634)] = alu110;
    data0[((gidx0*64)+(lidx1*50176)+(lidx2*4)+37635)] = alu111;
  }}} /* global+local */
}`;

const r_4_196_8_16_16_4_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 4 */
{ let gidx1 = i32(gindex.x);  /* 196 */
  { let lidx2 = i32(lindex.y);  /* 8 */
  { let lidx3 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
      var val1_0 = f32(data1[((gidx1*64)+(lidx3*4))]);
      var val1_1 = f32(data1[((gidx1*64)+(lidx3*4)+12544)]);
      var val1_2 = f32(data1[((gidx1*64)+(lidx3*4)+25088)]);
      var val1_3 = f32(data1[((gidx1*64)+(lidx3*4)+37632)]);
      var val1_4 = f32(data1[((gidx1*64)+(lidx3*4)+50176)]);
      var val1_5 = f32(data1[((gidx1*64)+(lidx3*4)+62720)]);
      var val1_6 = f32(data1[((gidx1*64)+(lidx3*4)+75264)]);
      var val1_7 = f32(data1[((gidx1*64)+(lidx3*4)+87808)]);
      var val1_8 = f32(data1[((gidx1*64)+(lidx3*4)+100352)]);
      var val1_9 = f32(data1[((gidx1*64)+(lidx3*4)+112896)]);
      var val1_10 = f32(data1[((gidx1*64)+(lidx3*4)+125440)]);
      var val1_11 = f32(data1[((gidx1*64)+(lidx3*4)+137984)]);
      var val1_12 = f32(data1[((gidx1*64)+(lidx3*4)+150528)]);
      var val1_13 = f32(data1[((gidx1*64)+(lidx3*4)+163072)]);
      var val1_14 = f32(data1[((gidx1*64)+(lidx3*4)+175616)]);
      var val1_15 = f32(data1[((gidx1*64)+(lidx3*4)+188160)]);
      var val1_16 = f32(data1[((gidx1*64)+(lidx3*4)+1)]);
      var val1_17 = f32(data1[((gidx1*64)+(lidx3*4)+12545)]);
      var val1_18 = f32(data1[((gidx1*64)+(lidx3*4)+25089)]);
      var val1_19 = f32(data1[((gidx1*64)+(lidx3*4)+37633)]);
      var val1_20 = f32(data1[((gidx1*64)+(lidx3*4)+50177)]);
      var val1_21 = f32(data1[((gidx1*64)+(lidx3*4)+62721)]);
      var val1_22 = f32(data1[((gidx1*64)+(lidx3*4)+75265)]);
      var val1_23 = f32(data1[((gidx1*64)+(lidx3*4)+87809)]);
      var val1_24 = f32(data1[((gidx1*64)+(lidx3*4)+100353)]);
      var val1_25 = f32(data1[((gidx1*64)+(lidx3*4)+112897)]);
      var val1_26 = f32(data1[((gidx1*64)+(lidx3*4)+125441)]);
      var val1_27 = f32(data1[((gidx1*64)+(lidx3*4)+137985)]);
      var val1_28 = f32(data1[((gidx1*64)+(lidx3*4)+150529)]);
      var val1_29 = f32(data1[((gidx1*64)+(lidx3*4)+163073)]);
      var val1_30 = f32(data1[((gidx1*64)+(lidx3*4)+175617)]);
      var val1_31 = f32(data1[((gidx1*64)+(lidx3*4)+188161)]);
      var val1_32 = f32(data1[((gidx1*64)+(lidx3*4)+2)]);
      var val1_33 = f32(data1[((gidx1*64)+(lidx3*4)+12546)]);
      var val1_34 = f32(data1[((gidx1*64)+(lidx3*4)+25090)]);
      var val1_35 = f32(data1[((gidx1*64)+(lidx3*4)+37634)]);
      var val1_36 = f32(data1[((gidx1*64)+(lidx3*4)+50178)]);
      var val1_37 = f32(data1[((gidx1*64)+(lidx3*4)+62722)]);
      var val1_38 = f32(data1[((gidx1*64)+(lidx3*4)+75266)]);
      var val1_39 = f32(data1[((gidx1*64)+(lidx3*4)+87810)]);
      var val1_40 = f32(data1[((gidx1*64)+(lidx3*4)+100354)]);
      var val1_41 = f32(data1[((gidx1*64)+(lidx3*4)+112898)]);
      var val1_42 = f32(data1[((gidx1*64)+(lidx3*4)+125442)]);
      var val1_43 = f32(data1[((gidx1*64)+(lidx3*4)+137986)]);
      var val1_44 = f32(data1[((gidx1*64)+(lidx3*4)+150530)]);
      var val1_45 = f32(data1[((gidx1*64)+(lidx3*4)+163074)]);
      var val1_46 = f32(data1[((gidx1*64)+(lidx3*4)+175618)]);
      var val1_47 = f32(data1[((gidx1*64)+(lidx3*4)+188162)]);
      var val1_48 = f32(data1[((gidx1*64)+(lidx3*4)+3)]);
      var val1_49 = f32(data1[((gidx1*64)+(lidx3*4)+12547)]);
      var val1_50 = f32(data1[((gidx1*64)+(lidx3*4)+25091)]);
      var val1_51 = f32(data1[((gidx1*64)+(lidx3*4)+37635)]);
      var val1_52 = f32(data1[((gidx1*64)+(lidx3*4)+50179)]);
      var val1_53 = f32(data1[((gidx1*64)+(lidx3*4)+62723)]);
      var val1_54 = f32(data1[((gidx1*64)+(lidx3*4)+75267)]);
      var val1_55 = f32(data1[((gidx1*64)+(lidx3*4)+87811)]);
      var val1_56 = f32(data1[((gidx1*64)+(lidx3*4)+100355)]);
      var val1_57 = f32(data1[((gidx1*64)+(lidx3*4)+112899)]);
      var val1_58 = f32(data1[((gidx1*64)+(lidx3*4)+125443)]);
      var val1_59 = f32(data1[((gidx1*64)+(lidx3*4)+137987)]);
      var val1_60 = f32(data1[((gidx1*64)+(lidx3*4)+150531)]);
      var val1_61 = f32(data1[((gidx1*64)+(lidx3*4)+163075)]);
      var val1_62 = f32(data1[((gidx1*64)+(lidx3*4)+175619)]);
      var val1_63 = f32(data1[((gidx1*64)+(lidx3*4)+188163)]);
      var val2_0 = f32(data2[((gidx0*384)+(lidx2*48))]);
      var val2_1 = f32(data2[((gidx0*384)+(lidx2*48)+1)]);
      var val2_2 = f32(data2[((gidx0*384)+(lidx2*48)+2)]);
      var val2_3 = f32(data2[((gidx0*384)+(lidx2*48)+3)]);
      var val2_4 = f32(data2[((gidx0*384)+(lidx2*48)+4)]);
      var val2_5 = f32(data2[((gidx0*384)+(lidx2*48)+5)]);
      var val2_6 = f32(data2[((gidx0*384)+(lidx2*48)+6)]);
      var val2_7 = f32(data2[((gidx0*384)+(lidx2*48)+7)]);
      var val2_8 = f32(data2[((gidx0*384)+(lidx2*48)+8)]);
      var val2_9 = f32(data2[((gidx0*384)+(lidx2*48)+9)]);
      var val2_10 = f32(data2[((gidx0*384)+(lidx2*48)+10)]);
      var val2_11 = f32(data2[((gidx0*384)+(lidx2*48)+11)]);
      var val2_12 = f32(data2[((gidx0*384)+(lidx2*48)+12)]);
      var val2_13 = f32(data2[((gidx0*384)+(lidx2*48)+13)]);
      var val2_14 = f32(data2[((gidx0*384)+(lidx2*48)+14)]);
      var val2_15 = f32(data2[((gidx0*384)+(lidx2*48)+15)]);
      var val2_16 = f32(data2[((gidx0*384)+(lidx2*48)+16)]);
      var val2_17 = f32(data2[((gidx0*384)+(lidx2*48)+17)]);
      var val2_18 = f32(data2[((gidx0*384)+(lidx2*48)+18)]);
      var val2_19 = f32(data2[((gidx0*384)+(lidx2*48)+19)]);
      var val2_20 = f32(data2[((gidx0*384)+(lidx2*48)+20)]);
      var val2_21 = f32(data2[((gidx0*384)+(lidx2*48)+21)]);
      var val2_22 = f32(data2[((gidx0*384)+(lidx2*48)+22)]);
      var val2_23 = f32(data2[((gidx0*384)+(lidx2*48)+23)]);
      var val2_24 = f32(data2[((gidx0*384)+(lidx2*48)+24)]);
      var val2_25 = f32(data2[((gidx0*384)+(lidx2*48)+25)]);
      var val2_26 = f32(data2[((gidx0*384)+(lidx2*48)+26)]);
      var val2_27 = f32(data2[((gidx0*384)+(lidx2*48)+27)]);
      var val2_28 = f32(data2[((gidx0*384)+(lidx2*48)+28)]);
      var val2_29 = f32(data2[((gidx0*384)+(lidx2*48)+29)]);
      var val2_30 = f32(data2[((gidx0*384)+(lidx2*48)+30)]);
      var val2_31 = f32(data2[((gidx0*384)+(lidx2*48)+31)]);
      var val2_32 = f32(data2[((gidx0*384)+(lidx2*48)+32)]);
      var val2_33 = f32(data2[((gidx0*384)+(lidx2*48)+33)]);
      var val2_34 = f32(data2[((gidx0*384)+(lidx2*48)+34)]);
      var val2_35 = f32(data2[((gidx0*384)+(lidx2*48)+35)]);
      var val2_36 = f32(data2[((gidx0*384)+(lidx2*48)+36)]);
      var val2_37 = f32(data2[((gidx0*384)+(lidx2*48)+37)]);
      var val2_38 = f32(data2[((gidx0*384)+(lidx2*48)+38)]);
      var val2_39 = f32(data2[((gidx0*384)+(lidx2*48)+39)]);
      var val2_40 = f32(data2[((gidx0*384)+(lidx2*48)+40)]);
      var val2_41 = f32(data2[((gidx0*384)+(lidx2*48)+41)]);
      var val2_42 = f32(data2[((gidx0*384)+(lidx2*48)+42)]);
      var val2_43 = f32(data2[((gidx0*384)+(lidx2*48)+43)]);
      var val2_44 = f32(data2[((gidx0*384)+(lidx2*48)+44)]);
      var val2_45 = f32(data2[((gidx0*384)+(lidx2*48)+45)]);
      var val2_46 = f32(data2[((gidx0*384)+(lidx2*48)+46)]);
      var val2_47 = f32(data2[((gidx0*384)+(lidx2*48)+47)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_0 = fma(val1_9,val2_9,acc0_0);
      acc0_0 = fma(val1_10,val2_10,acc0_0);
      acc0_0 = fma(val1_11,val2_11,acc0_0);
      acc0_0 = fma(val1_12,val2_12,acc0_0);
      acc0_0 = fma(val1_13,val2_13,acc0_0);
      acc0_0 = fma(val1_14,val2_14,acc0_0);
      acc0_0 = fma(val1_15,val2_15,acc0_0);
      acc0_1 = fma(val1_16,val2_0,acc0_1);
      acc0_1 = fma(val1_17,val2_1,acc0_1);
      acc0_1 = fma(val1_18,val2_2,acc0_1);
      acc0_1 = fma(val1_19,val2_3,acc0_1);
      acc0_1 = fma(val1_20,val2_4,acc0_1);
      acc0_1 = fma(val1_21,val2_5,acc0_1);
      acc0_1 = fma(val1_22,val2_6,acc0_1);
      acc0_1 = fma(val1_23,val2_7,acc0_1);
      acc0_1 = fma(val1_24,val2_8,acc0_1);
      acc0_1 = fma(val1_25,val2_9,acc0_1);
      acc0_1 = fma(val1_26,val2_10,acc0_1);
      acc0_1 = fma(val1_27,val2_11,acc0_1);
      acc0_1 = fma(val1_28,val2_12,acc0_1);
      acc0_1 = fma(val1_29,val2_13,acc0_1);
      acc0_1 = fma(val1_30,val2_14,acc0_1);
      acc0_1 = fma(val1_31,val2_15,acc0_1);
      acc0_2 = fma(val1_32,val2_0,acc0_2);
      acc0_2 = fma(val1_33,val2_1,acc0_2);
      acc0_2 = fma(val1_34,val2_2,acc0_2);
      acc0_2 = fma(val1_35,val2_3,acc0_2);
      acc0_2 = fma(val1_36,val2_4,acc0_2);
      acc0_2 = fma(val1_37,val2_5,acc0_2);
      acc0_2 = fma(val1_38,val2_6,acc0_2);
      acc0_2 = fma(val1_39,val2_7,acc0_2);
      acc0_2 = fma(val1_40,val2_8,acc0_2);
      acc0_2 = fma(val1_41,val2_9,acc0_2);
      acc0_2 = fma(val1_42,val2_10,acc0_2);
      acc0_2 = fma(val1_43,val2_11,acc0_2);
      acc0_2 = fma(val1_44,val2_12,acc0_2);
      acc0_2 = fma(val1_45,val2_13,acc0_2);
      acc0_2 = fma(val1_46,val2_14,acc0_2);
      acc0_2 = fma(val1_47,val2_15,acc0_2);
      acc0_3 = fma(val1_48,val2_0,acc0_3);
      acc0_3 = fma(val1_49,val2_1,acc0_3);
      acc0_3 = fma(val1_50,val2_2,acc0_3);
      acc0_3 = fma(val1_51,val2_3,acc0_3);
      acc0_3 = fma(val1_52,val2_4,acc0_3);
      acc0_3 = fma(val1_53,val2_5,acc0_3);
      acc0_3 = fma(val1_54,val2_6,acc0_3);
      acc0_3 = fma(val1_55,val2_7,acc0_3);
      acc0_3 = fma(val1_56,val2_8,acc0_3);
      acc0_3 = fma(val1_57,val2_9,acc0_3);
      acc0_3 = fma(val1_58,val2_10,acc0_3);
      acc0_3 = fma(val1_59,val2_11,acc0_3);
      acc0_3 = fma(val1_60,val2_12,acc0_3);
      acc0_3 = fma(val1_61,val2_13,acc0_3);
      acc0_3 = fma(val1_62,val2_14,acc0_3);
      acc0_3 = fma(val1_63,val2_15,acc0_3);
      acc0_4 = fma(val1_0,val2_16,acc0_4);
      acc0_4 = fma(val1_1,val2_17,acc0_4);
      acc0_4 = fma(val1_2,val2_18,acc0_4);
      acc0_4 = fma(val1_3,val2_19,acc0_4);
      acc0_4 = fma(val1_4,val2_20,acc0_4);
      acc0_4 = fma(val1_5,val2_21,acc0_4);
      acc0_4 = fma(val1_6,val2_22,acc0_4);
      acc0_4 = fma(val1_7,val2_23,acc0_4);
      acc0_4 = fma(val1_8,val2_24,acc0_4);
      acc0_4 = fma(val1_9,val2_25,acc0_4);
      acc0_4 = fma(val1_10,val2_26,acc0_4);
      acc0_4 = fma(val1_11,val2_27,acc0_4);
      acc0_4 = fma(val1_12,val2_28,acc0_4);
      acc0_4 = fma(val1_13,val2_29,acc0_4);
      acc0_4 = fma(val1_14,val2_30,acc0_4);
      acc0_4 = fma(val1_15,val2_31,acc0_4);
      acc0_5 = fma(val1_16,val2_16,acc0_5);
      acc0_5 = fma(val1_17,val2_17,acc0_5);
      acc0_5 = fma(val1_18,val2_18,acc0_5);
      acc0_5 = fma(val1_19,val2_19,acc0_5);
      acc0_5 = fma(val1_20,val2_20,acc0_5);
      acc0_5 = fma(val1_21,val2_21,acc0_5);
      acc0_5 = fma(val1_22,val2_22,acc0_5);
      acc0_5 = fma(val1_23,val2_23,acc0_5);
      acc0_5 = fma(val1_24,val2_24,acc0_5);
      acc0_5 = fma(val1_25,val2_25,acc0_5);
      acc0_5 = fma(val1_26,val2_26,acc0_5);
      acc0_5 = fma(val1_27,val2_27,acc0_5);
      acc0_5 = fma(val1_28,val2_28,acc0_5);
      acc0_5 = fma(val1_29,val2_29,acc0_5);
      acc0_5 = fma(val1_30,val2_30,acc0_5);
      acc0_5 = fma(val1_31,val2_31,acc0_5);
      acc0_6 = fma(val1_32,val2_16,acc0_6);
      acc0_6 = fma(val1_33,val2_17,acc0_6);
      acc0_6 = fma(val1_34,val2_18,acc0_6);
      acc0_6 = fma(val1_35,val2_19,acc0_6);
      acc0_6 = fma(val1_36,val2_20,acc0_6);
      acc0_6 = fma(val1_37,val2_21,acc0_6);
      acc0_6 = fma(val1_38,val2_22,acc0_6);
      acc0_6 = fma(val1_39,val2_23,acc0_6);
      acc0_6 = fma(val1_40,val2_24,acc0_6);
      acc0_6 = fma(val1_41,val2_25,acc0_6);
      acc0_6 = fma(val1_42,val2_26,acc0_6);
      acc0_6 = fma(val1_43,val2_27,acc0_6);
      acc0_6 = fma(val1_44,val2_28,acc0_6);
      acc0_6 = fma(val1_45,val2_29,acc0_6);
      acc0_6 = fma(val1_46,val2_30,acc0_6);
      acc0_6 = fma(val1_47,val2_31,acc0_6);
      acc0_7 = fma(val1_48,val2_16,acc0_7);
      acc0_7 = fma(val1_49,val2_17,acc0_7);
      acc0_7 = fma(val1_50,val2_18,acc0_7);
      acc0_7 = fma(val1_51,val2_19,acc0_7);
      acc0_7 = fma(val1_52,val2_20,acc0_7);
      acc0_7 = fma(val1_53,val2_21,acc0_7);
      acc0_7 = fma(val1_54,val2_22,acc0_7);
      acc0_7 = fma(val1_55,val2_23,acc0_7);
      acc0_7 = fma(val1_56,val2_24,acc0_7);
      acc0_7 = fma(val1_57,val2_25,acc0_7);
      acc0_7 = fma(val1_58,val2_26,acc0_7);
      acc0_7 = fma(val1_59,val2_27,acc0_7);
      acc0_7 = fma(val1_60,val2_28,acc0_7);
      acc0_7 = fma(val1_61,val2_29,acc0_7);
      acc0_7 = fma(val1_62,val2_30,acc0_7);
      acc0_7 = fma(val1_63,val2_31,acc0_7);
      acc0_8 = fma(val1_0,val2_32,acc0_8);
      acc0_8 = fma(val1_1,val2_33,acc0_8);
      acc0_8 = fma(val1_2,val2_34,acc0_8);
      acc0_8 = fma(val1_3,val2_35,acc0_8);
      acc0_8 = fma(val1_4,val2_36,acc0_8);
      acc0_8 = fma(val1_5,val2_37,acc0_8);
      acc0_8 = fma(val1_6,val2_38,acc0_8);
      acc0_8 = fma(val1_7,val2_39,acc0_8);
      acc0_8 = fma(val1_8,val2_40,acc0_8);
      acc0_8 = fma(val1_9,val2_41,acc0_8);
      acc0_8 = fma(val1_10,val2_42,acc0_8);
      acc0_8 = fma(val1_11,val2_43,acc0_8);
      acc0_8 = fma(val1_12,val2_44,acc0_8);
      acc0_8 = fma(val1_13,val2_45,acc0_8);
      acc0_8 = fma(val1_14,val2_46,acc0_8);
      acc0_8 = fma(val1_15,val2_47,acc0_8);
      acc0_9 = fma(val1_16,val2_32,acc0_9);
      acc0_9 = fma(val1_17,val2_33,acc0_9);
      acc0_9 = fma(val1_18,val2_34,acc0_9);
      acc0_9 = fma(val1_19,val2_35,acc0_9);
      acc0_9 = fma(val1_20,val2_36,acc0_9);
      acc0_9 = fma(val1_21,val2_37,acc0_9);
      acc0_9 = fma(val1_22,val2_38,acc0_9);
      acc0_9 = fma(val1_23,val2_39,acc0_9);
      acc0_9 = fma(val1_24,val2_40,acc0_9);
      acc0_9 = fma(val1_25,val2_41,acc0_9);
      acc0_9 = fma(val1_26,val2_42,acc0_9);
      acc0_9 = fma(val1_27,val2_43,acc0_9);
      acc0_9 = fma(val1_28,val2_44,acc0_9);
      acc0_9 = fma(val1_29,val2_45,acc0_9);
      acc0_9 = fma(val1_30,val2_46,acc0_9);
      acc0_9 = fma(val1_31,val2_47,acc0_9);
      acc0_10 = fma(val1_32,val2_32,acc0_10);
      acc0_10 = fma(val1_33,val2_33,acc0_10);
      acc0_10 = fma(val1_34,val2_34,acc0_10);
      acc0_10 = fma(val1_35,val2_35,acc0_10);
      acc0_10 = fma(val1_36,val2_36,acc0_10);
      acc0_10 = fma(val1_37,val2_37,acc0_10);
      acc0_10 = fma(val1_38,val2_38,acc0_10);
      acc0_10 = fma(val1_39,val2_39,acc0_10);
      acc0_10 = fma(val1_40,val2_40,acc0_10);
      acc0_10 = fma(val1_41,val2_41,acc0_10);
      acc0_10 = fma(val1_42,val2_42,acc0_10);
      acc0_10 = fma(val1_43,val2_43,acc0_10);
      acc0_10 = fma(val1_44,val2_44,acc0_10);
      acc0_10 = fma(val1_45,val2_45,acc0_10);
      acc0_10 = fma(val1_46,val2_46,acc0_10);
      acc0_10 = fma(val1_47,val2_47,acc0_10);
      acc0_11 = fma(val1_48,val2_32,acc0_11);
      acc0_11 = fma(val1_49,val2_33,acc0_11);
      acc0_11 = fma(val1_50,val2_34,acc0_11);
      acc0_11 = fma(val1_51,val2_35,acc0_11);
      acc0_11 = fma(val1_52,val2_36,acc0_11);
      acc0_11 = fma(val1_53,val2_37,acc0_11);
      acc0_11 = fma(val1_54,val2_38,acc0_11);
      acc0_11 = fma(val1_55,val2_39,acc0_11);
      acc0_11 = fma(val1_56,val2_40,acc0_11);
      acc0_11 = fma(val1_57,val2_41,acc0_11);
      acc0_11 = fma(val1_58,val2_42,acc0_11);
      acc0_11 = fma(val1_59,val2_43,acc0_11);
      acc0_11 = fma(val1_60,val2_44,acc0_11);
      acc0_11 = fma(val1_61,val2_45,acc0_11);
      acc0_11 = fma(val1_62,val2_46,acc0_11);
      acc0_11 = fma(val1_63,val2_47,acc0_11);
     /* reduce */
    var val3_0 = f32(data3[((gidx0*24)+(lidx2*3))]);
    var val3_1 = f32(data3[((gidx0*24)+(lidx2*3)+1)]);
    var val3_2 = f32(data3[((gidx0*24)+(lidx2*3)+2)]);
    var val4_0 = f32(data4[((gidx0*24)+(lidx2*3))]);
    var val4_1 = f32(data4[((gidx0*24)+(lidx2*3)+1)]);
    var val4_2 = f32(data4[((gidx0*24)+(lidx2*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*24)+(lidx2*3))]);
    var val6_1 = f32(data6[((gidx0*24)+(lidx2*3)+1)]);
    var val6_2 = f32(data6[((gidx0*24)+(lidx2*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*24)+(lidx2*3))]);
    var val8_1 = f32(data8[((gidx0*24)+(lidx2*3)+1)]);
    var val8_2 = f32(data8[((gidx0*24)+(lidx2*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (alu0*val4_0);
    var alu13 = (alu1*val4_0);
    var alu14 = (alu2*val4_0);
    var alu15 = (alu3*val4_0);
    var alu16 = (alu4*val4_1);
    var alu17 = (alu5*val4_1);
    var alu18 = (alu6*val4_1);
    var alu19 = (alu7*val4_1);
    var alu20 = (alu8*val4_2);
    var alu21 = (alu9*val4_2);
    var alu22 = (alu10*val4_2);
    var alu23 = (alu11*val4_2);
    var alu24 = (val7_0+val6_0);
    var alu25 = (val7_0+val6_0);
    var alu26 = (val7_0+val6_0);
    var alu27 = (val7_0+val6_0);
    var alu28 = (val7_0+val6_1);
    var alu29 = (val7_0+val6_1);
    var alu30 = (val7_0+val6_1);
    var alu31 = (val7_0+val6_1);
    var alu32 = (val7_0+val6_2);
    var alu33 = (val7_0+val6_2);
    var alu34 = (val7_0+val6_2);
    var alu35 = (val7_0+val6_2);
    var alu36 = (val5_0/alu24);
    var alu37 = (val5_0/alu25);
    var alu38 = (val5_0/alu26);
    var alu39 = (val5_0/alu27);
    var alu40 = (val5_0/alu28);
    var alu41 = (val5_0/alu29);
    var alu42 = (val5_0/alu30);
    var alu43 = (val5_0/alu31);
    var alu44 = (val5_0/alu32);
    var alu45 = (val5_0/alu33);
    var alu46 = (val5_0/alu34);
    var alu47 = (val5_0/alu35);
    var alu48 = sqrt(alu36);
    var alu49 = sqrt(alu37);
    var alu50 = sqrt(alu38);
    var alu51 = sqrt(alu39);
    var alu52 = sqrt(alu40);
    var alu53 = sqrt(alu41);
    var alu54 = sqrt(alu42);
    var alu55 = sqrt(alu43);
    var alu56 = sqrt(alu44);
    var alu57 = sqrt(alu45);
    var alu58 = sqrt(alu46);
    var alu59 = sqrt(alu47);
    var alu60 = (alu12*alu48);
    var alu61 = (alu13*alu49);
    var alu62 = (alu14*alu50);
    var alu63 = (alu15*alu51);
    var alu64 = (alu16*alu52);
    var alu65 = (alu17*alu53);
    var alu66 = (alu18*alu54);
    var alu67 = (alu19*alu55);
    var alu68 = (alu20*alu56);
    var alu69 = (alu21*alu57);
    var alu70 = (alu22*alu58);
    var alu71 = (alu23*alu59);
    var alu72 = (alu60+val8_0);
    var alu73 = (alu61+val8_0);
    var alu74 = (alu62+val8_0);
    var alu75 = (alu63+val8_0);
    var alu76 = (alu64+val8_1);
    var alu77 = (alu65+val8_1);
    var alu78 = (alu66+val8_1);
    var alu79 = (alu67+val8_1);
    var alu80 = (alu68+val8_2);
    var alu81 = (alu69+val8_2);
    var alu82 = (alu70+val8_2);
    var alu83 = (alu71+val8_2);
    var alu84 = (val5_0/alu24);
    var alu85 = (val5_0/alu25);
    var alu86 = (val5_0/alu26);
    var alu87 = (val5_0/alu27);
    var alu88 = (val5_0/alu28);
    var alu89 = (val5_0/alu29);
    var alu90 = (val5_0/alu30);
    var alu91 = (val5_0/alu31);
    var alu92 = (val5_0/alu32);
    var alu93 = (val5_0/alu33);
    var alu94 = (val5_0/alu34);
    var alu95 = (val5_0/alu35);
    var alu96 = sqrt(alu84);
    var alu97 = sqrt(alu85);
    var alu98 = sqrt(alu86);
    var alu99 = sqrt(alu87);
    var alu100 = sqrt(alu88);
    var alu101 = sqrt(alu89);
    var alu102 = sqrt(alu90);
    var alu103 = sqrt(alu91);
    var alu104 = sqrt(alu92);
    var alu105 = sqrt(alu93);
    var alu106 = sqrt(alu94);
    var alu107 = sqrt(alu95);
    var alu108 = (alu12*alu96);
    var alu109 = (alu13*alu97);
    var alu110 = (alu14*alu98);
    var alu111 = (alu15*alu99);
    var alu112 = (alu16*alu100);
    var alu113 = (alu17*alu101);
    var alu114 = (alu18*alu102);
    var alu115 = (alu19*alu103);
    var alu116 = (alu20*alu104);
    var alu117 = (alu21*alu105);
    var alu118 = (alu22*alu106);
    var alu119 = (alu23*alu107);
    var alu120 = (alu108+val8_0);
    var alu121 = (alu109+val8_0);
    var alu122 = (alu110+val8_0);
    var alu123 = (alu111+val8_0);
    var alu124 = (alu112+val8_1);
    var alu125 = (alu113+val8_1);
    var alu126 = (alu114+val8_1);
    var alu127 = (alu115+val8_1);
    var alu128 = (alu116+val8_2);
    var alu129 = (alu117+val8_2);
    var alu130 = (alu118+val8_2);
    var alu131 = (alu119+val8_2);
    var alu132 = (alu120*val11_0);
    var alu133 = (alu121*val11_0);
    var alu134 = (alu122*val11_0);
    var alu135 = (alu123*val11_0);
    var alu136 = (alu124*val11_0);
    var alu137 = (alu125*val11_0);
    var alu138 = (alu126*val11_0);
    var alu139 = (alu127*val11_0);
    var alu140 = (alu128*val11_0);
    var alu141 = (alu129*val11_0);
    var alu142 = (alu130*val11_0);
    var alu143 = (alu131*val11_0);
    var alu144 = exp2(alu132);
    var alu145 = exp2(alu133);
    var alu146 = exp2(alu134);
    var alu147 = exp2(alu135);
    var alu148 = exp2(alu136);
    var alu149 = exp2(alu137);
    var alu150 = exp2(alu138);
    var alu151 = exp2(alu139);
    var alu152 = exp2(alu140);
    var alu153 = exp2(alu141);
    var alu154 = exp2(alu142);
    var alu155 = exp2(alu143);
    var alu156 = (val10_0+alu144);
    var alu157 = (val10_0+alu145);
    var alu158 = (val10_0+alu146);
    var alu159 = (val10_0+alu147);
    var alu160 = (val10_0+alu148);
    var alu161 = (val10_0+alu149);
    var alu162 = (val10_0+alu150);
    var alu163 = (val10_0+alu151);
    var alu164 = (val10_0+alu152);
    var alu165 = (val10_0+alu153);
    var alu166 = (val10_0+alu154);
    var alu167 = (val10_0+alu155);
    var alu168 = (val9_0/alu156);
    var alu169 = (val9_0/alu157);
    var alu170 = (val9_0/alu158);
    var alu171 = (val9_0/alu159);
    var alu172 = (val9_0/alu160);
    var alu173 = (val9_0/alu161);
    var alu174 = (val9_0/alu162);
    var alu175 = (val9_0/alu163);
    var alu176 = (val9_0/alu164);
    var alu177 = (val9_0/alu165);
    var alu178 = (val9_0/alu166);
    var alu179 = (val9_0/alu167);
    var alu180 = (alu72*alu168);
    var alu181 = (alu73*alu169);
    var alu182 = (alu74*alu170);
    var alu183 = (alu75*alu171);
    var alu184 = (alu76*alu172);
    var alu185 = (alu77*alu173);
    var alu186 = (alu78*alu174);
    var alu187 = (alu79*alu175);
    var alu188 = (alu80*alu176);
    var alu189 = (alu81*alu177);
    var alu190 = (alu82*alu178);
    var alu191 = (alu83*alu179);
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4))] = alu180;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+1)] = alu181;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+2)] = alu182;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+3)] = alu183;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+12544)] = alu184;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+12545)] = alu185;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+12546)] = alu186;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+12547)] = alu187;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+25088)] = alu188;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+25089)] = alu189;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+25090)] = alu190;
    data0[((gidx0*301056)+(gidx1*64)+(lidx2*37632)+(lidx3*4)+25091)] = alu191;
  }}}} /* global+local */
}`;

const r_96_7_14_8_3_3_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(8) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 96 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.x);  /* 8 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
      var val1_0 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224))]);
      var val1_1 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+112)]);
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+224)]), bool((((gidx1*16)+(lidx3*2)+2)<112)));
      var val1_3 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+1)]);
      var val1_4 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+113)]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+225)]), bool((((gidx1*16)+(lidx3*2)+2)<112)));
      var val1_6 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+2)]);
      var val1_7 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+114)]);
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+226)]), bool((((gidx1*16)+(lidx3*2)+2)<112)));
      var val1_9 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+3)]);
      var val1_10 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+115)]);
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+227)]), bool((((gidx1*16)+(lidx3*2)+2)<112)));
      var val1_12 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+4)]);
      var val1_13 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+116)]);
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+228)]), bool((((gidx1*16)+(lidx3*2)+2)<112)));
      var val1_15 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+5)]);
      var val1_16 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+117)]);
      var val1_17 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+229)]), bool((((gidx1*16)+(lidx3*2)+2)<112)));
      var val1_18 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+6)]);
      var val1_19 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+118)]);
      var val1_20 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+230)]), bool((((gidx1*16)+(lidx3*2)+2)<112)));
      var val1_21 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+7)]);
      var val1_22 = f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+119)]);
      var val1_23 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+231)]), bool((((gidx1*16)+(lidx3*2)+2)<112)));
      var val1_24 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+8)]), bool((((gidx2*8)+8)<112)));
      var val1_25 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+120)]), bool((((gidx2*8)+8)<112)));
      var val1_26 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*1792)+(gidx2*8)+(lidx3*224)+232)]), bool(((((gidx1*16)+(lidx3*2)+2)<112)&&(((gidx2*8)+8)<112))));
      var val2_0 = f32(data2[(gidx0*9)]);
      var val2_1 = f32(data2[((gidx0*9)+3)]);
      var val2_2 = f32(data2[((gidx0*9)+6)]);
      var val2_3 = f32(data2[((gidx0*9)+1)]);
      var val2_4 = f32(data2[((gidx0*9)+4)]);
      var val2_5 = f32(data2[((gidx0*9)+7)]);
      var val2_6 = f32(data2[((gidx0*9)+2)]);
      var val2_7 = f32(data2[((gidx0*9)+5)]);
      var val2_8 = f32(data2[((gidx0*9)+8)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_1 = fma(val1_6,val2_0,acc0_1);
      acc0_1 = fma(val1_7,val2_1,acc0_1);
      acc0_1 = fma(val1_8,val2_2,acc0_1);
      acc0_1 = fma(val1_9,val2_3,acc0_1);
      acc0_1 = fma(val1_10,val2_4,acc0_1);
      acc0_1 = fma(val1_11,val2_5,acc0_1);
      acc0_1 = fma(val1_12,val2_6,acc0_1);
      acc0_1 = fma(val1_13,val2_7,acc0_1);
      acc0_1 = fma(val1_14,val2_8,acc0_1);
      acc0_2 = fma(val1_12,val2_0,acc0_2);
      acc0_2 = fma(val1_13,val2_1,acc0_2);
      acc0_2 = fma(val1_14,val2_2,acc0_2);
      acc0_2 = fma(val1_15,val2_3,acc0_2);
      acc0_2 = fma(val1_16,val2_4,acc0_2);
      acc0_2 = fma(val1_17,val2_5,acc0_2);
      acc0_2 = fma(val1_18,val2_6,acc0_2);
      acc0_2 = fma(val1_19,val2_7,acc0_2);
      acc0_2 = fma(val1_20,val2_8,acc0_2);
      acc0_3 = fma(val1_18,val2_0,acc0_3);
      acc0_3 = fma(val1_19,val2_1,acc0_3);
      acc0_3 = fma(val1_20,val2_2,acc0_3);
      acc0_3 = fma(val1_21,val2_3,acc0_3);
      acc0_3 = fma(val1_22,val2_4,acc0_3);
      acc0_3 = fma(val1_23,val2_5,acc0_3);
      acc0_3 = fma(val1_24,val2_6,acc0_3);
      acc0_3 = fma(val1_25,val2_7,acc0_3);
      acc0_3 = fma(val1_26,val2_8,acc0_3);
     /* reduce */
    data0[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56))] = acc0_0;
    data0[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+1)] = acc0_1;
    data0[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+2)] = acc0_2;
    data0[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+3)] = acc0_3;
  }}}} /* global+local */
}`;

const r_96_16_196 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 96 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 195; ridx2++) {
      var val1_0 = f32(data1[((gidx0*3136)+(lidx1*196)+ridx2)]);
      var val2_0 = f32(data2[gidx0]);
      var val3_0 = f32(data3[gidx0]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[gidx0]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[gidx0]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (alu0*val3_0);
      var alu2 = (val6_0+val5_0);
      var alu3 = (val4_0/alu2);
      var alu4 = sqrt(alu3);
      var alu5 = (alu1*alu4);
      var alu6 = (alu5+val7_0);
      var alu7 = (alu6*val10_0);
      var alu8 = exp2(alu7);
      var alu9 = (val9_0+alu8);
      var alu10 = (val8_0/alu9);
      acc0_0 = fma(alu6,alu10,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val11_0 = 0.00031887755102040814f;
    var alu11 = (accm1_0*val11_0);
    data0[gidx0] = alu11;
  }} /* local */
} /* global */
}`;

const r_4_16_6 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 4 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 5; ridx2++) {
      var val1_0 = f32(data1[((lidx1*6)+ridx2)]);
      var val2_0 = f32(data2[((gidx0*96)+(lidx1*6)+ridx2)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val3_0 = f32(data3[gidx0]);
    var val4_0 = 1.0f;
    var val5_0 = 1.0f;
    var val6_0 = -1.4426950408889634f;
    var alu0 = (accm1_0+val3_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val5_0+alu2);
    var alu4 = (val4_0/alu3);
    var alu5 = (alu0*alu4);
    data0[gidx0] = alu5;
  }} /* local */
} /* global */
}`;

const r_3_32_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data3: array<f32>;
@group(0) @binding(2) var<storage,read_write> data4: array<f32>;
@group(0) @binding(3) var<storage,read_write> data5: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 3 */
  { let lidx1 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
      var val3_0 = f32(data3[0]);
      var val3_1 = f32(data3[1]);
      var val3_2 = f32(data3[2]);
      var val3_3 = f32(data3[3]);
      var val4_0 = f32(data4[((gidx0*128)+(lidx1*4))]);
      var val4_1 = f32(data4[((gidx0*128)+(lidx1*4)+1)]);
      var val4_2 = f32(data4[((gidx0*128)+(lidx1*4)+2)]);
      var val4_3 = f32(data4[((gidx0*128)+(lidx1*4)+3)]);
      acc0_0 = fma(val3_0,val4_0,acc0_0);
      acc0_0 = fma(val3_1,val4_1,acc0_0);
      acc0_0 = fma(val3_2,val4_2,acc0_0);
      acc0_0 = fma(val3_3,val4_3,acc0_0);
     /* reduce */
    var val1_0 = 1.0f;
    var val2_0 = 1.0f;
    var val5_0 = f32(data5[((gidx0*32)+lidx1)]);
    var val6_0 = -1.4426950408889634f;
    var alu0 = (acc0_0+val5_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val2_0+alu2);
    var alu4 = (val1_0/alu3);
    data0[((gidx0*32)+lidx1)] = alu4;
  }} /* global+local */
}`;

const r_6_7_14_16_8_3_3_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 6 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.y);  /* 16 */
  { let lidx4 = i32(lindex.x);  /* 8 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
      var val1_0 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224))]);
      var val1_1 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+112)]);
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+224)]), bool((((gidx1*16)+(lidx4*2)+2)<112)));
      var val1_3 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+1)]);
      var val1_4 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+113)]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+225)]), bool((((gidx1*16)+(lidx4*2)+2)<112)));
      var val1_6 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+2)]);
      var val1_7 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+114)]);
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+226)]), bool((((gidx1*16)+(lidx4*2)+2)<112)));
      var val1_9 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+3)]);
      var val1_10 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+115)]);
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+227)]), bool((((gidx1*16)+(lidx4*2)+2)<112)));
      var val1_12 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+4)]);
      var val1_13 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+116)]);
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+228)]), bool((((gidx1*16)+(lidx4*2)+2)<112)));
      var val1_15 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+5)]);
      var val1_16 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+117)]);
      var val1_17 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+229)]), bool((((gidx1*16)+(lidx4*2)+2)<112)));
      var val1_18 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+6)]);
      var val1_19 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+118)]);
      var val1_20 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+230)]), bool((((gidx1*16)+(lidx4*2)+2)<112)));
      var val1_21 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+7)]);
      var val1_22 = f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+119)]);
      var val1_23 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+231)]), bool((((gidx1*16)+(lidx4*2)+2)<112)));
      var val1_24 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+8)]), bool((((gidx2*8)+8)<112)));
      var val1_25 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+120)]), bool((((gidx2*8)+8)<112)));
      var val1_26 = select(f32(0.0f), f32(data1[((gidx0*200704)+(gidx1*1792)+(gidx2*8)+(lidx3*12544)+(lidx4*224)+232)]), bool(((((gidx1*16)+(lidx4*2)+2)<112)&&(((gidx2*8)+8)<112))));
      var val2_0 = f32(data2[((gidx0*144)+(lidx3*9))]);
      var val2_1 = f32(data2[((gidx0*144)+(lidx3*9)+3)]);
      var val2_2 = f32(data2[((gidx0*144)+(lidx3*9)+6)]);
      var val2_3 = f32(data2[((gidx0*144)+(lidx3*9)+1)]);
      var val2_4 = f32(data2[((gidx0*144)+(lidx3*9)+4)]);
      var val2_5 = f32(data2[((gidx0*144)+(lidx3*9)+7)]);
      var val2_6 = f32(data2[((gidx0*144)+(lidx3*9)+2)]);
      var val2_7 = f32(data2[((gidx0*144)+(lidx3*9)+5)]);
      var val2_8 = f32(data2[((gidx0*144)+(lidx3*9)+8)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_1 = fma(val1_6,val2_0,acc0_1);
      acc0_1 = fma(val1_7,val2_1,acc0_1);
      acc0_1 = fma(val1_8,val2_2,acc0_1);
      acc0_1 = fma(val1_9,val2_3,acc0_1);
      acc0_1 = fma(val1_10,val2_4,acc0_1);
      acc0_1 = fma(val1_11,val2_5,acc0_1);
      acc0_1 = fma(val1_12,val2_6,acc0_1);
      acc0_1 = fma(val1_13,val2_7,acc0_1);
      acc0_1 = fma(val1_14,val2_8,acc0_1);
      acc0_2 = fma(val1_12,val2_0,acc0_2);
      acc0_2 = fma(val1_13,val2_1,acc0_2);
      acc0_2 = fma(val1_14,val2_2,acc0_2);
      acc0_2 = fma(val1_15,val2_3,acc0_2);
      acc0_2 = fma(val1_16,val2_4,acc0_2);
      acc0_2 = fma(val1_17,val2_5,acc0_2);
      acc0_2 = fma(val1_18,val2_6,acc0_2);
      acc0_2 = fma(val1_19,val2_7,acc0_2);
      acc0_2 = fma(val1_20,val2_8,acc0_2);
      acc0_3 = fma(val1_18,val2_0,acc0_3);
      acc0_3 = fma(val1_19,val2_1,acc0_3);
      acc0_3 = fma(val1_20,val2_2,acc0_3);
      acc0_3 = fma(val1_21,val2_3,acc0_3);
      acc0_3 = fma(val1_22,val2_4,acc0_3);
      acc0_3 = fma(val1_23,val2_5,acc0_3);
      acc0_3 = fma(val1_24,val2_6,acc0_3);
      acc0_3 = fma(val1_25,val2_7,acc0_3);
      acc0_3 = fma(val1_26,val2_8,acc0_3);
     /* reduce */
    var val3_0 = f32(data3[((gidx0*16)+lidx3)]);
    var val4_0 = f32(data4[((gidx0*16)+lidx3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*16)+lidx3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*16)+lidx3)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*16)+lidx3)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (alu0*val4_0);
    var alu5 = (alu1*val4_0);
    var alu6 = (alu2*val4_0);
    var alu7 = (alu3*val4_0);
    var alu8 = (val7_0+val6_0);
    var alu9 = (val7_0+val6_0);
    var alu10 = (val7_0+val6_0);
    var alu11 = (val7_0+val6_0);
    var alu12 = (val5_0/alu8);
    var alu13 = (val5_0/alu9);
    var alu14 = (val5_0/alu10);
    var alu15 = (val5_0/alu11);
    var alu16 = sqrt(alu12);
    var alu17 = sqrt(alu13);
    var alu18 = sqrt(alu14);
    var alu19 = sqrt(alu15);
    var alu20 = (alu4*alu16);
    var alu21 = (alu5*alu17);
    var alu22 = (alu6*alu18);
    var alu23 = (alu7*alu19);
    var alu24 = (alu20+val8_0);
    var alu25 = (alu21+val8_0);
    var alu26 = (alu22+val8_0);
    var alu27 = (alu23+val8_0);
    var alu28 = (val5_0/alu8);
    var alu29 = (val5_0/alu9);
    var alu30 = (val5_0/alu10);
    var alu31 = (val5_0/alu11);
    var alu32 = sqrt(alu28);
    var alu33 = sqrt(alu29);
    var alu34 = sqrt(alu30);
    var alu35 = sqrt(alu31);
    var alu36 = (alu4*alu32);
    var alu37 = (alu5*alu33);
    var alu38 = (alu6*alu34);
    var alu39 = (alu7*alu35);
    var alu40 = (alu36+val8_0);
    var alu41 = (alu37+val8_0);
    var alu42 = (alu38+val8_0);
    var alu43 = (alu39+val8_0);
    var alu44 = (alu40*val11_0);
    var alu45 = (alu41*val11_0);
    var alu46 = (alu42*val11_0);
    var alu47 = (alu43*val11_0);
    var alu48 = exp2(alu44);
    var alu49 = exp2(alu45);
    var alu50 = exp2(alu46);
    var alu51 = exp2(alu47);
    var alu52 = (val10_0+alu48);
    var alu53 = (val10_0+alu49);
    var alu54 = (val10_0+alu50);
    var alu55 = (val10_0+alu51);
    var alu56 = (val9_0/alu52);
    var alu57 = (val9_0/alu53);
    var alu58 = (val9_0/alu54);
    var alu59 = (val9_0/alu55);
    var alu60 = (alu24*alu56);
    var alu61 = (alu25*alu57);
    var alu62 = (alu26*alu58);
    var alu63 = (alu27*alu59);
    var alu64 = (alu60*val12_0);
    var alu65 = (alu61*val12_0);
    var alu66 = (alu62*val12_0);
    var alu67 = (alu63*val12_0);
    data0[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56))] = alu64;
    data0[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+1)] = alu65;
    data0[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+2)] = alu66;
    data0[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+3)] = alu67;
  }}}}} /* global+local */
}`;

const r_49_8_16_24_4_4_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 49 */
  { let lidx1 = i32(lindex.y);  /* 8 */
  { let lidx2 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 23; ridx3++) {
      var val1_0 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544))]);
      var val1_1 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+3136)]);
      var val1_2 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+6272)]);
      var val1_3 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+9408)]);
      var val1_4 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+1)]);
      var val1_5 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+3137)]);
      var val1_6 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+6273)]);
      var val1_7 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+9409)]);
      var val1_8 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+2)]);
      var val1_9 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+3138)]);
      var val1_10 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+6274)]);
      var val1_11 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+9410)]);
      var val1_12 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+3)]);
      var val1_13 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+3139)]);
      var val1_14 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+6275)]);
      var val1_15 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+9411)]);
      var val2_0 = f32(data2[((lidx1*288)+(ridx3*4))]);
      var val2_1 = f32(data2[((lidx1*288)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((lidx1*288)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((lidx1*288)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((lidx1*288)+(ridx3*4)+96)]);
      var val2_5 = f32(data2[((lidx1*288)+(ridx3*4)+97)]);
      var val2_6 = f32(data2[((lidx1*288)+(ridx3*4)+98)]);
      var val2_7 = f32(data2[((lidx1*288)+(ridx3*4)+99)]);
      var val2_8 = f32(data2[((lidx1*288)+(ridx3*4)+192)]);
      var val2_9 = f32(data2[((lidx1*288)+(ridx3*4)+193)]);
      var val2_10 = f32(data2[((lidx1*288)+(ridx3*4)+194)]);
      var val2_11 = f32(data2[((lidx1*288)+(ridx3*4)+195)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
    } /* reduce */
    var val3_0 = f32(data3[(lidx1*3)]);
    var val3_1 = f32(data3[((lidx1*3)+1)]);
    var val3_2 = f32(data3[((lidx1*3)+2)]);
    var val4_0 = f32(data4[(lidx1*3)]);
    var val4_1 = f32(data4[((lidx1*3)+1)]);
    var val4_2 = f32(data4[((lidx1*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[(lidx1*3)]);
    var val6_1 = f32(data6[((lidx1*3)+1)]);
    var val6_2 = f32(data6[((lidx1*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[(lidx1*3)]);
    var val8_1 = f32(data8[((lidx1*3)+1)]);
    var val8_2 = f32(data8[((lidx1*3)+2)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (alu0*val4_0);
    var alu13 = (alu1*val4_0);
    var alu14 = (alu2*val4_0);
    var alu15 = (alu3*val4_0);
    var alu16 = (alu4*val4_1);
    var alu17 = (alu5*val4_1);
    var alu18 = (alu6*val4_1);
    var alu19 = (alu7*val4_1);
    var alu20 = (alu8*val4_2);
    var alu21 = (alu9*val4_2);
    var alu22 = (alu10*val4_2);
    var alu23 = (alu11*val4_2);
    var alu24 = (val7_0+val6_0);
    var alu25 = (val7_0+val6_0);
    var alu26 = (val7_0+val6_0);
    var alu27 = (val7_0+val6_0);
    var alu28 = (val7_0+val6_1);
    var alu29 = (val7_0+val6_1);
    var alu30 = (val7_0+val6_1);
    var alu31 = (val7_0+val6_1);
    var alu32 = (val7_0+val6_2);
    var alu33 = (val7_0+val6_2);
    var alu34 = (val7_0+val6_2);
    var alu35 = (val7_0+val6_2);
    var alu36 = (val5_0/alu24);
    var alu37 = (val5_0/alu25);
    var alu38 = (val5_0/alu26);
    var alu39 = (val5_0/alu27);
    var alu40 = (val5_0/alu28);
    var alu41 = (val5_0/alu29);
    var alu42 = (val5_0/alu30);
    var alu43 = (val5_0/alu31);
    var alu44 = (val5_0/alu32);
    var alu45 = (val5_0/alu33);
    var alu46 = (val5_0/alu34);
    var alu47 = (val5_0/alu35);
    var alu48 = sqrt(alu36);
    var alu49 = sqrt(alu37);
    var alu50 = sqrt(alu38);
    var alu51 = sqrt(alu39);
    var alu52 = sqrt(alu40);
    var alu53 = sqrt(alu41);
    var alu54 = sqrt(alu42);
    var alu55 = sqrt(alu43);
    var alu56 = sqrt(alu44);
    var alu57 = sqrt(alu45);
    var alu58 = sqrt(alu46);
    var alu59 = sqrt(alu47);
    var alu60 = (alu12*alu48);
    var alu61 = (alu13*alu49);
    var alu62 = (alu14*alu50);
    var alu63 = (alu15*alu51);
    var alu64 = (alu16*alu52);
    var alu65 = (alu17*alu53);
    var alu66 = (alu18*alu54);
    var alu67 = (alu19*alu55);
    var alu68 = (alu20*alu56);
    var alu69 = (alu21*alu57);
    var alu70 = (alu22*alu58);
    var alu71 = (alu23*alu59);
    var alu72 = (alu60+val8_0);
    var alu73 = (alu61+val8_0);
    var alu74 = (alu62+val8_0);
    var alu75 = (alu63+val8_0);
    var alu76 = (alu64+val8_1);
    var alu77 = (alu65+val8_1);
    var alu78 = (alu66+val8_1);
    var alu79 = (alu67+val8_1);
    var alu80 = (alu68+val8_2);
    var alu81 = (alu69+val8_2);
    var alu82 = (alu70+val8_2);
    var alu83 = (alu71+val8_2);
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4))] = alu72;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+1)] = alu73;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+2)] = alu74;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3)] = alu75;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3136)] = alu76;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3137)] = alu77;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3138)] = alu78;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3139)] = alu79;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6272)] = alu80;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6273)] = alu81;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6274)] = alu82;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6275)] = alu83;
  }}} /* global+local */
}`;

const r_6_49_8_16_24_4_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 6 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.y);  /* 8 */
  { let lidx3 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
      var val1_0 = f32(data1[((gidx1*64)+(lidx3*4))]);
      var val1_1 = f32(data1[((gidx1*64)+(lidx3*4)+3136)]);
      var val1_2 = f32(data1[((gidx1*64)+(lidx3*4)+6272)]);
      var val1_3 = f32(data1[((gidx1*64)+(lidx3*4)+9408)]);
      var val1_4 = f32(data1[((gidx1*64)+(lidx3*4)+12544)]);
      var val1_5 = f32(data1[((gidx1*64)+(lidx3*4)+15680)]);
      var val1_6 = f32(data1[((gidx1*64)+(lidx3*4)+18816)]);
      var val1_7 = f32(data1[((gidx1*64)+(lidx3*4)+21952)]);
      var val1_8 = f32(data1[((gidx1*64)+(lidx3*4)+25088)]);
      var val1_9 = f32(data1[((gidx1*64)+(lidx3*4)+28224)]);
      var val1_10 = f32(data1[((gidx1*64)+(lidx3*4)+31360)]);
      var val1_11 = f32(data1[((gidx1*64)+(lidx3*4)+34496)]);
      var val1_12 = f32(data1[((gidx1*64)+(lidx3*4)+37632)]);
      var val1_13 = f32(data1[((gidx1*64)+(lidx3*4)+40768)]);
      var val1_14 = f32(data1[((gidx1*64)+(lidx3*4)+43904)]);
      var val1_15 = f32(data1[((gidx1*64)+(lidx3*4)+47040)]);
      var val1_16 = f32(data1[((gidx1*64)+(lidx3*4)+50176)]);
      var val1_17 = f32(data1[((gidx1*64)+(lidx3*4)+53312)]);
      var val1_18 = f32(data1[((gidx1*64)+(lidx3*4)+56448)]);
      var val1_19 = f32(data1[((gidx1*64)+(lidx3*4)+59584)]);
      var val1_20 = f32(data1[((gidx1*64)+(lidx3*4)+62720)]);
      var val1_21 = f32(data1[((gidx1*64)+(lidx3*4)+65856)]);
      var val1_22 = f32(data1[((gidx1*64)+(lidx3*4)+68992)]);
      var val1_23 = f32(data1[((gidx1*64)+(lidx3*4)+72128)]);
      var val1_24 = f32(data1[((gidx1*64)+(lidx3*4)+1)]);
      var val1_25 = f32(data1[((gidx1*64)+(lidx3*4)+3137)]);
      var val1_26 = f32(data1[((gidx1*64)+(lidx3*4)+6273)]);
      var val1_27 = f32(data1[((gidx1*64)+(lidx3*4)+9409)]);
      var val1_28 = f32(data1[((gidx1*64)+(lidx3*4)+12545)]);
      var val1_29 = f32(data1[((gidx1*64)+(lidx3*4)+15681)]);
      var val1_30 = f32(data1[((gidx1*64)+(lidx3*4)+18817)]);
      var val1_31 = f32(data1[((gidx1*64)+(lidx3*4)+21953)]);
      var val1_32 = f32(data1[((gidx1*64)+(lidx3*4)+25089)]);
      var val1_33 = f32(data1[((gidx1*64)+(lidx3*4)+28225)]);
      var val1_34 = f32(data1[((gidx1*64)+(lidx3*4)+31361)]);
      var val1_35 = f32(data1[((gidx1*64)+(lidx3*4)+34497)]);
      var val1_36 = f32(data1[((gidx1*64)+(lidx3*4)+37633)]);
      var val1_37 = f32(data1[((gidx1*64)+(lidx3*4)+40769)]);
      var val1_38 = f32(data1[((gidx1*64)+(lidx3*4)+43905)]);
      var val1_39 = f32(data1[((gidx1*64)+(lidx3*4)+47041)]);
      var val1_40 = f32(data1[((gidx1*64)+(lidx3*4)+50177)]);
      var val1_41 = f32(data1[((gidx1*64)+(lidx3*4)+53313)]);
      var val1_42 = f32(data1[((gidx1*64)+(lidx3*4)+56449)]);
      var val1_43 = f32(data1[((gidx1*64)+(lidx3*4)+59585)]);
      var val1_44 = f32(data1[((gidx1*64)+(lidx3*4)+62721)]);
      var val1_45 = f32(data1[((gidx1*64)+(lidx3*4)+65857)]);
      var val1_46 = f32(data1[((gidx1*64)+(lidx3*4)+68993)]);
      var val1_47 = f32(data1[((gidx1*64)+(lidx3*4)+72129)]);
      var val1_48 = f32(data1[((gidx1*64)+(lidx3*4)+2)]);
      var val1_49 = f32(data1[((gidx1*64)+(lidx3*4)+3138)]);
      var val1_50 = f32(data1[((gidx1*64)+(lidx3*4)+6274)]);
      var val1_51 = f32(data1[((gidx1*64)+(lidx3*4)+9410)]);
      var val1_52 = f32(data1[((gidx1*64)+(lidx3*4)+12546)]);
      var val1_53 = f32(data1[((gidx1*64)+(lidx3*4)+15682)]);
      var val1_54 = f32(data1[((gidx1*64)+(lidx3*4)+18818)]);
      var val1_55 = f32(data1[((gidx1*64)+(lidx3*4)+21954)]);
      var val1_56 = f32(data1[((gidx1*64)+(lidx3*4)+25090)]);
      var val1_57 = f32(data1[((gidx1*64)+(lidx3*4)+28226)]);
      var val1_58 = f32(data1[((gidx1*64)+(lidx3*4)+31362)]);
      var val1_59 = f32(data1[((gidx1*64)+(lidx3*4)+34498)]);
      var val1_60 = f32(data1[((gidx1*64)+(lidx3*4)+37634)]);
      var val1_61 = f32(data1[((gidx1*64)+(lidx3*4)+40770)]);
      var val1_62 = f32(data1[((gidx1*64)+(lidx3*4)+43906)]);
      var val1_63 = f32(data1[((gidx1*64)+(lidx3*4)+47042)]);
      var val1_64 = f32(data1[((gidx1*64)+(lidx3*4)+50178)]);
      var val1_65 = f32(data1[((gidx1*64)+(lidx3*4)+53314)]);
      var val1_66 = f32(data1[((gidx1*64)+(lidx3*4)+56450)]);
      var val1_67 = f32(data1[((gidx1*64)+(lidx3*4)+59586)]);
      var val1_68 = f32(data1[((gidx1*64)+(lidx3*4)+62722)]);
      var val1_69 = f32(data1[((gidx1*64)+(lidx3*4)+65858)]);
      var val1_70 = f32(data1[((gidx1*64)+(lidx3*4)+68994)]);
      var val1_71 = f32(data1[((gidx1*64)+(lidx3*4)+72130)]);
      var val1_72 = f32(data1[((gidx1*64)+(lidx3*4)+3)]);
      var val1_73 = f32(data1[((gidx1*64)+(lidx3*4)+3139)]);
      var val1_74 = f32(data1[((gidx1*64)+(lidx3*4)+6275)]);
      var val1_75 = f32(data1[((gidx1*64)+(lidx3*4)+9411)]);
      var val1_76 = f32(data1[((gidx1*64)+(lidx3*4)+12547)]);
      var val1_77 = f32(data1[((gidx1*64)+(lidx3*4)+15683)]);
      var val1_78 = f32(data1[((gidx1*64)+(lidx3*4)+18819)]);
      var val1_79 = f32(data1[((gidx1*64)+(lidx3*4)+21955)]);
      var val1_80 = f32(data1[((gidx1*64)+(lidx3*4)+25091)]);
      var val1_81 = f32(data1[((gidx1*64)+(lidx3*4)+28227)]);
      var val1_82 = f32(data1[((gidx1*64)+(lidx3*4)+31363)]);
      var val1_83 = f32(data1[((gidx1*64)+(lidx3*4)+34499)]);
      var val1_84 = f32(data1[((gidx1*64)+(lidx3*4)+37635)]);
      var val1_85 = f32(data1[((gidx1*64)+(lidx3*4)+40771)]);
      var val1_86 = f32(data1[((gidx1*64)+(lidx3*4)+43907)]);
      var val1_87 = f32(data1[((gidx1*64)+(lidx3*4)+47043)]);
      var val1_88 = f32(data1[((gidx1*64)+(lidx3*4)+50179)]);
      var val1_89 = f32(data1[((gidx1*64)+(lidx3*4)+53315)]);
      var val1_90 = f32(data1[((gidx1*64)+(lidx3*4)+56451)]);
      var val1_91 = f32(data1[((gidx1*64)+(lidx3*4)+59587)]);
      var val1_92 = f32(data1[((gidx1*64)+(lidx3*4)+62723)]);
      var val1_93 = f32(data1[((gidx1*64)+(lidx3*4)+65859)]);
      var val1_94 = f32(data1[((gidx1*64)+(lidx3*4)+68995)]);
      var val1_95 = f32(data1[((gidx1*64)+(lidx3*4)+72131)]);
      var val2_0 = f32(data2[((gidx0*576)+(lidx2*72))]);
      var val2_1 = f32(data2[((gidx0*576)+(lidx2*72)+1)]);
      var val2_2 = f32(data2[((gidx0*576)+(lidx2*72)+2)]);
      var val2_3 = f32(data2[((gidx0*576)+(lidx2*72)+3)]);
      var val2_4 = f32(data2[((gidx0*576)+(lidx2*72)+4)]);
      var val2_5 = f32(data2[((gidx0*576)+(lidx2*72)+5)]);
      var val2_6 = f32(data2[((gidx0*576)+(lidx2*72)+6)]);
      var val2_7 = f32(data2[((gidx0*576)+(lidx2*72)+7)]);
      var val2_8 = f32(data2[((gidx0*576)+(lidx2*72)+8)]);
      var val2_9 = f32(data2[((gidx0*576)+(lidx2*72)+9)]);
      var val2_10 = f32(data2[((gidx0*576)+(lidx2*72)+10)]);
      var val2_11 = f32(data2[((gidx0*576)+(lidx2*72)+11)]);
      var val2_12 = f32(data2[((gidx0*576)+(lidx2*72)+12)]);
      var val2_13 = f32(data2[((gidx0*576)+(lidx2*72)+13)]);
      var val2_14 = f32(data2[((gidx0*576)+(lidx2*72)+14)]);
      var val2_15 = f32(data2[((gidx0*576)+(lidx2*72)+15)]);
      var val2_16 = f32(data2[((gidx0*576)+(lidx2*72)+16)]);
      var val2_17 = f32(data2[((gidx0*576)+(lidx2*72)+17)]);
      var val2_18 = f32(data2[((gidx0*576)+(lidx2*72)+18)]);
      var val2_19 = f32(data2[((gidx0*576)+(lidx2*72)+19)]);
      var val2_20 = f32(data2[((gidx0*576)+(lidx2*72)+20)]);
      var val2_21 = f32(data2[((gidx0*576)+(lidx2*72)+21)]);
      var val2_22 = f32(data2[((gidx0*576)+(lidx2*72)+22)]);
      var val2_23 = f32(data2[((gidx0*576)+(lidx2*72)+23)]);
      var val2_24 = f32(data2[((gidx0*576)+(lidx2*72)+24)]);
      var val2_25 = f32(data2[((gidx0*576)+(lidx2*72)+25)]);
      var val2_26 = f32(data2[((gidx0*576)+(lidx2*72)+26)]);
      var val2_27 = f32(data2[((gidx0*576)+(lidx2*72)+27)]);
      var val2_28 = f32(data2[((gidx0*576)+(lidx2*72)+28)]);
      var val2_29 = f32(data2[((gidx0*576)+(lidx2*72)+29)]);
      var val2_30 = f32(data2[((gidx0*576)+(lidx2*72)+30)]);
      var val2_31 = f32(data2[((gidx0*576)+(lidx2*72)+31)]);
      var val2_32 = f32(data2[((gidx0*576)+(lidx2*72)+32)]);
      var val2_33 = f32(data2[((gidx0*576)+(lidx2*72)+33)]);
      var val2_34 = f32(data2[((gidx0*576)+(lidx2*72)+34)]);
      var val2_35 = f32(data2[((gidx0*576)+(lidx2*72)+35)]);
      var val2_36 = f32(data2[((gidx0*576)+(lidx2*72)+36)]);
      var val2_37 = f32(data2[((gidx0*576)+(lidx2*72)+37)]);
      var val2_38 = f32(data2[((gidx0*576)+(lidx2*72)+38)]);
      var val2_39 = f32(data2[((gidx0*576)+(lidx2*72)+39)]);
      var val2_40 = f32(data2[((gidx0*576)+(lidx2*72)+40)]);
      var val2_41 = f32(data2[((gidx0*576)+(lidx2*72)+41)]);
      var val2_42 = f32(data2[((gidx0*576)+(lidx2*72)+42)]);
      var val2_43 = f32(data2[((gidx0*576)+(lidx2*72)+43)]);
      var val2_44 = f32(data2[((gidx0*576)+(lidx2*72)+44)]);
      var val2_45 = f32(data2[((gidx0*576)+(lidx2*72)+45)]);
      var val2_46 = f32(data2[((gidx0*576)+(lidx2*72)+46)]);
      var val2_47 = f32(data2[((gidx0*576)+(lidx2*72)+47)]);
      var val2_48 = f32(data2[((gidx0*576)+(lidx2*72)+48)]);
      var val2_49 = f32(data2[((gidx0*576)+(lidx2*72)+49)]);
      var val2_50 = f32(data2[((gidx0*576)+(lidx2*72)+50)]);
      var val2_51 = f32(data2[((gidx0*576)+(lidx2*72)+51)]);
      var val2_52 = f32(data2[((gidx0*576)+(lidx2*72)+52)]);
      var val2_53 = f32(data2[((gidx0*576)+(lidx2*72)+53)]);
      var val2_54 = f32(data2[((gidx0*576)+(lidx2*72)+54)]);
      var val2_55 = f32(data2[((gidx0*576)+(lidx2*72)+55)]);
      var val2_56 = f32(data2[((gidx0*576)+(lidx2*72)+56)]);
      var val2_57 = f32(data2[((gidx0*576)+(lidx2*72)+57)]);
      var val2_58 = f32(data2[((gidx0*576)+(lidx2*72)+58)]);
      var val2_59 = f32(data2[((gidx0*576)+(lidx2*72)+59)]);
      var val2_60 = f32(data2[((gidx0*576)+(lidx2*72)+60)]);
      var val2_61 = f32(data2[((gidx0*576)+(lidx2*72)+61)]);
      var val2_62 = f32(data2[((gidx0*576)+(lidx2*72)+62)]);
      var val2_63 = f32(data2[((gidx0*576)+(lidx2*72)+63)]);
      var val2_64 = f32(data2[((gidx0*576)+(lidx2*72)+64)]);
      var val2_65 = f32(data2[((gidx0*576)+(lidx2*72)+65)]);
      var val2_66 = f32(data2[((gidx0*576)+(lidx2*72)+66)]);
      var val2_67 = f32(data2[((gidx0*576)+(lidx2*72)+67)]);
      var val2_68 = f32(data2[((gidx0*576)+(lidx2*72)+68)]);
      var val2_69 = f32(data2[((gidx0*576)+(lidx2*72)+69)]);
      var val2_70 = f32(data2[((gidx0*576)+(lidx2*72)+70)]);
      var val2_71 = f32(data2[((gidx0*576)+(lidx2*72)+71)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_0 = fma(val1_9,val2_9,acc0_0);
      acc0_0 = fma(val1_10,val2_10,acc0_0);
      acc0_0 = fma(val1_11,val2_11,acc0_0);
      acc0_0 = fma(val1_12,val2_12,acc0_0);
      acc0_0 = fma(val1_13,val2_13,acc0_0);
      acc0_0 = fma(val1_14,val2_14,acc0_0);
      acc0_0 = fma(val1_15,val2_15,acc0_0);
      acc0_0 = fma(val1_16,val2_16,acc0_0);
      acc0_0 = fma(val1_17,val2_17,acc0_0);
      acc0_0 = fma(val1_18,val2_18,acc0_0);
      acc0_0 = fma(val1_19,val2_19,acc0_0);
      acc0_0 = fma(val1_20,val2_20,acc0_0);
      acc0_0 = fma(val1_21,val2_21,acc0_0);
      acc0_0 = fma(val1_22,val2_22,acc0_0);
      acc0_0 = fma(val1_23,val2_23,acc0_0);
      acc0_1 = fma(val1_24,val2_0,acc0_1);
      acc0_1 = fma(val1_25,val2_1,acc0_1);
      acc0_1 = fma(val1_26,val2_2,acc0_1);
      acc0_1 = fma(val1_27,val2_3,acc0_1);
      acc0_1 = fma(val1_28,val2_4,acc0_1);
      acc0_1 = fma(val1_29,val2_5,acc0_1);
      acc0_1 = fma(val1_30,val2_6,acc0_1);
      acc0_1 = fma(val1_31,val2_7,acc0_1);
      acc0_1 = fma(val1_32,val2_8,acc0_1);
      acc0_1 = fma(val1_33,val2_9,acc0_1);
      acc0_1 = fma(val1_34,val2_10,acc0_1);
      acc0_1 = fma(val1_35,val2_11,acc0_1);
      acc0_1 = fma(val1_36,val2_12,acc0_1);
      acc0_1 = fma(val1_37,val2_13,acc0_1);
      acc0_1 = fma(val1_38,val2_14,acc0_1);
      acc0_1 = fma(val1_39,val2_15,acc0_1);
      acc0_1 = fma(val1_40,val2_16,acc0_1);
      acc0_1 = fma(val1_41,val2_17,acc0_1);
      acc0_1 = fma(val1_42,val2_18,acc0_1);
      acc0_1 = fma(val1_43,val2_19,acc0_1);
      acc0_1 = fma(val1_44,val2_20,acc0_1);
      acc0_1 = fma(val1_45,val2_21,acc0_1);
      acc0_1 = fma(val1_46,val2_22,acc0_1);
      acc0_1 = fma(val1_47,val2_23,acc0_1);
      acc0_2 = fma(val1_48,val2_0,acc0_2);
      acc0_2 = fma(val1_49,val2_1,acc0_2);
      acc0_2 = fma(val1_50,val2_2,acc0_2);
      acc0_2 = fma(val1_51,val2_3,acc0_2);
      acc0_2 = fma(val1_52,val2_4,acc0_2);
      acc0_2 = fma(val1_53,val2_5,acc0_2);
      acc0_2 = fma(val1_54,val2_6,acc0_2);
      acc0_2 = fma(val1_55,val2_7,acc0_2);
      acc0_2 = fma(val1_56,val2_8,acc0_2);
      acc0_2 = fma(val1_57,val2_9,acc0_2);
      acc0_2 = fma(val1_58,val2_10,acc0_2);
      acc0_2 = fma(val1_59,val2_11,acc0_2);
      acc0_2 = fma(val1_60,val2_12,acc0_2);
      acc0_2 = fma(val1_61,val2_13,acc0_2);
      acc0_2 = fma(val1_62,val2_14,acc0_2);
      acc0_2 = fma(val1_63,val2_15,acc0_2);
      acc0_2 = fma(val1_64,val2_16,acc0_2);
      acc0_2 = fma(val1_65,val2_17,acc0_2);
      acc0_2 = fma(val1_66,val2_18,acc0_2);
      acc0_2 = fma(val1_67,val2_19,acc0_2);
      acc0_2 = fma(val1_68,val2_20,acc0_2);
      acc0_2 = fma(val1_69,val2_21,acc0_2);
      acc0_2 = fma(val1_70,val2_22,acc0_2);
      acc0_2 = fma(val1_71,val2_23,acc0_2);
      acc0_3 = fma(val1_72,val2_0,acc0_3);
      acc0_3 = fma(val1_73,val2_1,acc0_3);
      acc0_3 = fma(val1_74,val2_2,acc0_3);
      acc0_3 = fma(val1_75,val2_3,acc0_3);
      acc0_3 = fma(val1_76,val2_4,acc0_3);
      acc0_3 = fma(val1_77,val2_5,acc0_3);
      acc0_3 = fma(val1_78,val2_6,acc0_3);
      acc0_3 = fma(val1_79,val2_7,acc0_3);
      acc0_3 = fma(val1_80,val2_8,acc0_3);
      acc0_3 = fma(val1_81,val2_9,acc0_3);
      acc0_3 = fma(val1_82,val2_10,acc0_3);
      acc0_3 = fma(val1_83,val2_11,acc0_3);
      acc0_3 = fma(val1_84,val2_12,acc0_3);
      acc0_3 = fma(val1_85,val2_13,acc0_3);
      acc0_3 = fma(val1_86,val2_14,acc0_3);
      acc0_3 = fma(val1_87,val2_15,acc0_3);
      acc0_3 = fma(val1_88,val2_16,acc0_3);
      acc0_3 = fma(val1_89,val2_17,acc0_3);
      acc0_3 = fma(val1_90,val2_18,acc0_3);
      acc0_3 = fma(val1_91,val2_19,acc0_3);
      acc0_3 = fma(val1_92,val2_20,acc0_3);
      acc0_3 = fma(val1_93,val2_21,acc0_3);
      acc0_3 = fma(val1_94,val2_22,acc0_3);
      acc0_3 = fma(val1_95,val2_23,acc0_3);
      acc0_4 = fma(val1_0,val2_24,acc0_4);
      acc0_4 = fma(val1_1,val2_25,acc0_4);
      acc0_4 = fma(val1_2,val2_26,acc0_4);
      acc0_4 = fma(val1_3,val2_27,acc0_4);
      acc0_4 = fma(val1_4,val2_28,acc0_4);
      acc0_4 = fma(val1_5,val2_29,acc0_4);
      acc0_4 = fma(val1_6,val2_30,acc0_4);
      acc0_4 = fma(val1_7,val2_31,acc0_4);
      acc0_4 = fma(val1_8,val2_32,acc0_4);
      acc0_4 = fma(val1_9,val2_33,acc0_4);
      acc0_4 = fma(val1_10,val2_34,acc0_4);
      acc0_4 = fma(val1_11,val2_35,acc0_4);
      acc0_4 = fma(val1_12,val2_36,acc0_4);
      acc0_4 = fma(val1_13,val2_37,acc0_4);
      acc0_4 = fma(val1_14,val2_38,acc0_4);
      acc0_4 = fma(val1_15,val2_39,acc0_4);
      acc0_4 = fma(val1_16,val2_40,acc0_4);
      acc0_4 = fma(val1_17,val2_41,acc0_4);
      acc0_4 = fma(val1_18,val2_42,acc0_4);
      acc0_4 = fma(val1_19,val2_43,acc0_4);
      acc0_4 = fma(val1_20,val2_44,acc0_4);
      acc0_4 = fma(val1_21,val2_45,acc0_4);
      acc0_4 = fma(val1_22,val2_46,acc0_4);
      acc0_4 = fma(val1_23,val2_47,acc0_4);
      acc0_5 = fma(val1_24,val2_24,acc0_5);
      acc0_5 = fma(val1_25,val2_25,acc0_5);
      acc0_5 = fma(val1_26,val2_26,acc0_5);
      acc0_5 = fma(val1_27,val2_27,acc0_5);
      acc0_5 = fma(val1_28,val2_28,acc0_5);
      acc0_5 = fma(val1_29,val2_29,acc0_5);
      acc0_5 = fma(val1_30,val2_30,acc0_5);
      acc0_5 = fma(val1_31,val2_31,acc0_5);
      acc0_5 = fma(val1_32,val2_32,acc0_5);
      acc0_5 = fma(val1_33,val2_33,acc0_5);
      acc0_5 = fma(val1_34,val2_34,acc0_5);
      acc0_5 = fma(val1_35,val2_35,acc0_5);
      acc0_5 = fma(val1_36,val2_36,acc0_5);
      acc0_5 = fma(val1_37,val2_37,acc0_5);
      acc0_5 = fma(val1_38,val2_38,acc0_5);
      acc0_5 = fma(val1_39,val2_39,acc0_5);
      acc0_5 = fma(val1_40,val2_40,acc0_5);
      acc0_5 = fma(val1_41,val2_41,acc0_5);
      acc0_5 = fma(val1_42,val2_42,acc0_5);
      acc0_5 = fma(val1_43,val2_43,acc0_5);
      acc0_5 = fma(val1_44,val2_44,acc0_5);
      acc0_5 = fma(val1_45,val2_45,acc0_5);
      acc0_5 = fma(val1_46,val2_46,acc0_5);
      acc0_5 = fma(val1_47,val2_47,acc0_5);
      acc0_6 = fma(val1_48,val2_24,acc0_6);
      acc0_6 = fma(val1_49,val2_25,acc0_6);
      acc0_6 = fma(val1_50,val2_26,acc0_6);
      acc0_6 = fma(val1_51,val2_27,acc0_6);
      acc0_6 = fma(val1_52,val2_28,acc0_6);
      acc0_6 = fma(val1_53,val2_29,acc0_6);
      acc0_6 = fma(val1_54,val2_30,acc0_6);
      acc0_6 = fma(val1_55,val2_31,acc0_6);
      acc0_6 = fma(val1_56,val2_32,acc0_6);
      acc0_6 = fma(val1_57,val2_33,acc0_6);
      acc0_6 = fma(val1_58,val2_34,acc0_6);
      acc0_6 = fma(val1_59,val2_35,acc0_6);
      acc0_6 = fma(val1_60,val2_36,acc0_6);
      acc0_6 = fma(val1_61,val2_37,acc0_6);
      acc0_6 = fma(val1_62,val2_38,acc0_6);
      acc0_6 = fma(val1_63,val2_39,acc0_6);
      acc0_6 = fma(val1_64,val2_40,acc0_6);
      acc0_6 = fma(val1_65,val2_41,acc0_6);
      acc0_6 = fma(val1_66,val2_42,acc0_6);
      acc0_6 = fma(val1_67,val2_43,acc0_6);
      acc0_6 = fma(val1_68,val2_44,acc0_6);
      acc0_6 = fma(val1_69,val2_45,acc0_6);
      acc0_6 = fma(val1_70,val2_46,acc0_6);
      acc0_6 = fma(val1_71,val2_47,acc0_6);
      acc0_7 = fma(val1_72,val2_24,acc0_7);
      acc0_7 = fma(val1_73,val2_25,acc0_7);
      acc0_7 = fma(val1_74,val2_26,acc0_7);
      acc0_7 = fma(val1_75,val2_27,acc0_7);
      acc0_7 = fma(val1_76,val2_28,acc0_7);
      acc0_7 = fma(val1_77,val2_29,acc0_7);
      acc0_7 = fma(val1_78,val2_30,acc0_7);
      acc0_7 = fma(val1_79,val2_31,acc0_7);
      acc0_7 = fma(val1_80,val2_32,acc0_7);
      acc0_7 = fma(val1_81,val2_33,acc0_7);
      acc0_7 = fma(val1_82,val2_34,acc0_7);
      acc0_7 = fma(val1_83,val2_35,acc0_7);
      acc0_7 = fma(val1_84,val2_36,acc0_7);
      acc0_7 = fma(val1_85,val2_37,acc0_7);
      acc0_7 = fma(val1_86,val2_38,acc0_7);
      acc0_7 = fma(val1_87,val2_39,acc0_7);
      acc0_7 = fma(val1_88,val2_40,acc0_7);
      acc0_7 = fma(val1_89,val2_41,acc0_7);
      acc0_7 = fma(val1_90,val2_42,acc0_7);
      acc0_7 = fma(val1_91,val2_43,acc0_7);
      acc0_7 = fma(val1_92,val2_44,acc0_7);
      acc0_7 = fma(val1_93,val2_45,acc0_7);
      acc0_7 = fma(val1_94,val2_46,acc0_7);
      acc0_7 = fma(val1_95,val2_47,acc0_7);
      acc0_8 = fma(val1_0,val2_48,acc0_8);
      acc0_8 = fma(val1_1,val2_49,acc0_8);
      acc0_8 = fma(val1_2,val2_50,acc0_8);
      acc0_8 = fma(val1_3,val2_51,acc0_8);
      acc0_8 = fma(val1_4,val2_52,acc0_8);
      acc0_8 = fma(val1_5,val2_53,acc0_8);
      acc0_8 = fma(val1_6,val2_54,acc0_8);
      acc0_8 = fma(val1_7,val2_55,acc0_8);
      acc0_8 = fma(val1_8,val2_56,acc0_8);
      acc0_8 = fma(val1_9,val2_57,acc0_8);
      acc0_8 = fma(val1_10,val2_58,acc0_8);
      acc0_8 = fma(val1_11,val2_59,acc0_8);
      acc0_8 = fma(val1_12,val2_60,acc0_8);
      acc0_8 = fma(val1_13,val2_61,acc0_8);
      acc0_8 = fma(val1_14,val2_62,acc0_8);
      acc0_8 = fma(val1_15,val2_63,acc0_8);
      acc0_8 = fma(val1_16,val2_64,acc0_8);
      acc0_8 = fma(val1_17,val2_65,acc0_8);
      acc0_8 = fma(val1_18,val2_66,acc0_8);
      acc0_8 = fma(val1_19,val2_67,acc0_8);
      acc0_8 = fma(val1_20,val2_68,acc0_8);
      acc0_8 = fma(val1_21,val2_69,acc0_8);
      acc0_8 = fma(val1_22,val2_70,acc0_8);
      acc0_8 = fma(val1_23,val2_71,acc0_8);
      acc0_9 = fma(val1_24,val2_48,acc0_9);
      acc0_9 = fma(val1_25,val2_49,acc0_9);
      acc0_9 = fma(val1_26,val2_50,acc0_9);
      acc0_9 = fma(val1_27,val2_51,acc0_9);
      acc0_9 = fma(val1_28,val2_52,acc0_9);
      acc0_9 = fma(val1_29,val2_53,acc0_9);
      acc0_9 = fma(val1_30,val2_54,acc0_9);
      acc0_9 = fma(val1_31,val2_55,acc0_9);
      acc0_9 = fma(val1_32,val2_56,acc0_9);
      acc0_9 = fma(val1_33,val2_57,acc0_9);
      acc0_9 = fma(val1_34,val2_58,acc0_9);
      acc0_9 = fma(val1_35,val2_59,acc0_9);
      acc0_9 = fma(val1_36,val2_60,acc0_9);
      acc0_9 = fma(val1_37,val2_61,acc0_9);
      acc0_9 = fma(val1_38,val2_62,acc0_9);
      acc0_9 = fma(val1_39,val2_63,acc0_9);
      acc0_9 = fma(val1_40,val2_64,acc0_9);
      acc0_9 = fma(val1_41,val2_65,acc0_9);
      acc0_9 = fma(val1_42,val2_66,acc0_9);
      acc0_9 = fma(val1_43,val2_67,acc0_9);
      acc0_9 = fma(val1_44,val2_68,acc0_9);
      acc0_9 = fma(val1_45,val2_69,acc0_9);
      acc0_9 = fma(val1_46,val2_70,acc0_9);
      acc0_9 = fma(val1_47,val2_71,acc0_9);
      acc0_10 = fma(val1_48,val2_48,acc0_10);
      acc0_10 = fma(val1_49,val2_49,acc0_10);
      acc0_10 = fma(val1_50,val2_50,acc0_10);
      acc0_10 = fma(val1_51,val2_51,acc0_10);
      acc0_10 = fma(val1_52,val2_52,acc0_10);
      acc0_10 = fma(val1_53,val2_53,acc0_10);
      acc0_10 = fma(val1_54,val2_54,acc0_10);
      acc0_10 = fma(val1_55,val2_55,acc0_10);
      acc0_10 = fma(val1_56,val2_56,acc0_10);
      acc0_10 = fma(val1_57,val2_57,acc0_10);
      acc0_10 = fma(val1_58,val2_58,acc0_10);
      acc0_10 = fma(val1_59,val2_59,acc0_10);
      acc0_10 = fma(val1_60,val2_60,acc0_10);
      acc0_10 = fma(val1_61,val2_61,acc0_10);
      acc0_10 = fma(val1_62,val2_62,acc0_10);
      acc0_10 = fma(val1_63,val2_63,acc0_10);
      acc0_10 = fma(val1_64,val2_64,acc0_10);
      acc0_10 = fma(val1_65,val2_65,acc0_10);
      acc0_10 = fma(val1_66,val2_66,acc0_10);
      acc0_10 = fma(val1_67,val2_67,acc0_10);
      acc0_10 = fma(val1_68,val2_68,acc0_10);
      acc0_10 = fma(val1_69,val2_69,acc0_10);
      acc0_10 = fma(val1_70,val2_70,acc0_10);
      acc0_10 = fma(val1_71,val2_71,acc0_10);
      acc0_11 = fma(val1_72,val2_48,acc0_11);
      acc0_11 = fma(val1_73,val2_49,acc0_11);
      acc0_11 = fma(val1_74,val2_50,acc0_11);
      acc0_11 = fma(val1_75,val2_51,acc0_11);
      acc0_11 = fma(val1_76,val2_52,acc0_11);
      acc0_11 = fma(val1_77,val2_53,acc0_11);
      acc0_11 = fma(val1_78,val2_54,acc0_11);
      acc0_11 = fma(val1_79,val2_55,acc0_11);
      acc0_11 = fma(val1_80,val2_56,acc0_11);
      acc0_11 = fma(val1_81,val2_57,acc0_11);
      acc0_11 = fma(val1_82,val2_58,acc0_11);
      acc0_11 = fma(val1_83,val2_59,acc0_11);
      acc0_11 = fma(val1_84,val2_60,acc0_11);
      acc0_11 = fma(val1_85,val2_61,acc0_11);
      acc0_11 = fma(val1_86,val2_62,acc0_11);
      acc0_11 = fma(val1_87,val2_63,acc0_11);
      acc0_11 = fma(val1_88,val2_64,acc0_11);
      acc0_11 = fma(val1_89,val2_65,acc0_11);
      acc0_11 = fma(val1_90,val2_66,acc0_11);
      acc0_11 = fma(val1_91,val2_67,acc0_11);
      acc0_11 = fma(val1_92,val2_68,acc0_11);
      acc0_11 = fma(val1_93,val2_69,acc0_11);
      acc0_11 = fma(val1_94,val2_70,acc0_11);
      acc0_11 = fma(val1_95,val2_71,acc0_11);
     /* reduce */
    var val3_0 = f32(data3[((gidx0*24)+(lidx2*3))]);
    var val3_1 = f32(data3[((gidx0*24)+(lidx2*3)+1)]);
    var val3_2 = f32(data3[((gidx0*24)+(lidx2*3)+2)]);
    var val4_0 = f32(data4[((gidx0*24)+(lidx2*3))]);
    var val4_1 = f32(data4[((gidx0*24)+(lidx2*3)+1)]);
    var val4_2 = f32(data4[((gidx0*24)+(lidx2*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*24)+(lidx2*3))]);
    var val6_1 = f32(data6[((gidx0*24)+(lidx2*3)+1)]);
    var val6_2 = f32(data6[((gidx0*24)+(lidx2*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*24)+(lidx2*3))]);
    var val8_1 = f32(data8[((gidx0*24)+(lidx2*3)+1)]);
    var val8_2 = f32(data8[((gidx0*24)+(lidx2*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (alu0*val4_0);
    var alu13 = (alu1*val4_0);
    var alu14 = (alu2*val4_0);
    var alu15 = (alu3*val4_0);
    var alu16 = (alu4*val4_1);
    var alu17 = (alu5*val4_1);
    var alu18 = (alu6*val4_1);
    var alu19 = (alu7*val4_1);
    var alu20 = (alu8*val4_2);
    var alu21 = (alu9*val4_2);
    var alu22 = (alu10*val4_2);
    var alu23 = (alu11*val4_2);
    var alu24 = (val7_0+val6_0);
    var alu25 = (val7_0+val6_0);
    var alu26 = (val7_0+val6_0);
    var alu27 = (val7_0+val6_0);
    var alu28 = (val7_0+val6_1);
    var alu29 = (val7_0+val6_1);
    var alu30 = (val7_0+val6_1);
    var alu31 = (val7_0+val6_1);
    var alu32 = (val7_0+val6_2);
    var alu33 = (val7_0+val6_2);
    var alu34 = (val7_0+val6_2);
    var alu35 = (val7_0+val6_2);
    var alu36 = (val5_0/alu24);
    var alu37 = (val5_0/alu25);
    var alu38 = (val5_0/alu26);
    var alu39 = (val5_0/alu27);
    var alu40 = (val5_0/alu28);
    var alu41 = (val5_0/alu29);
    var alu42 = (val5_0/alu30);
    var alu43 = (val5_0/alu31);
    var alu44 = (val5_0/alu32);
    var alu45 = (val5_0/alu33);
    var alu46 = (val5_0/alu34);
    var alu47 = (val5_0/alu35);
    var alu48 = sqrt(alu36);
    var alu49 = sqrt(alu37);
    var alu50 = sqrt(alu38);
    var alu51 = sqrt(alu39);
    var alu52 = sqrt(alu40);
    var alu53 = sqrt(alu41);
    var alu54 = sqrt(alu42);
    var alu55 = sqrt(alu43);
    var alu56 = sqrt(alu44);
    var alu57 = sqrt(alu45);
    var alu58 = sqrt(alu46);
    var alu59 = sqrt(alu47);
    var alu60 = (alu12*alu48);
    var alu61 = (alu13*alu49);
    var alu62 = (alu14*alu50);
    var alu63 = (alu15*alu51);
    var alu64 = (alu16*alu52);
    var alu65 = (alu17*alu53);
    var alu66 = (alu18*alu54);
    var alu67 = (alu19*alu55);
    var alu68 = (alu20*alu56);
    var alu69 = (alu21*alu57);
    var alu70 = (alu22*alu58);
    var alu71 = (alu23*alu59);
    var alu72 = (alu60+val8_0);
    var alu73 = (alu61+val8_0);
    var alu74 = (alu62+val8_0);
    var alu75 = (alu63+val8_0);
    var alu76 = (alu64+val8_1);
    var alu77 = (alu65+val8_1);
    var alu78 = (alu66+val8_1);
    var alu79 = (alu67+val8_1);
    var alu80 = (alu68+val8_2);
    var alu81 = (alu69+val8_2);
    var alu82 = (alu70+val8_2);
    var alu83 = (alu71+val8_2);
    var alu84 = (val5_0/alu24);
    var alu85 = (val5_0/alu25);
    var alu86 = (val5_0/alu26);
    var alu87 = (val5_0/alu27);
    var alu88 = (val5_0/alu28);
    var alu89 = (val5_0/alu29);
    var alu90 = (val5_0/alu30);
    var alu91 = (val5_0/alu31);
    var alu92 = (val5_0/alu32);
    var alu93 = (val5_0/alu33);
    var alu94 = (val5_0/alu34);
    var alu95 = (val5_0/alu35);
    var alu96 = sqrt(alu84);
    var alu97 = sqrt(alu85);
    var alu98 = sqrt(alu86);
    var alu99 = sqrt(alu87);
    var alu100 = sqrt(alu88);
    var alu101 = sqrt(alu89);
    var alu102 = sqrt(alu90);
    var alu103 = sqrt(alu91);
    var alu104 = sqrt(alu92);
    var alu105 = sqrt(alu93);
    var alu106 = sqrt(alu94);
    var alu107 = sqrt(alu95);
    var alu108 = (alu12*alu96);
    var alu109 = (alu13*alu97);
    var alu110 = (alu14*alu98);
    var alu111 = (alu15*alu99);
    var alu112 = (alu16*alu100);
    var alu113 = (alu17*alu101);
    var alu114 = (alu18*alu102);
    var alu115 = (alu19*alu103);
    var alu116 = (alu20*alu104);
    var alu117 = (alu21*alu105);
    var alu118 = (alu22*alu106);
    var alu119 = (alu23*alu107);
    var alu120 = (alu108+val8_0);
    var alu121 = (alu109+val8_0);
    var alu122 = (alu110+val8_0);
    var alu123 = (alu111+val8_0);
    var alu124 = (alu112+val8_1);
    var alu125 = (alu113+val8_1);
    var alu126 = (alu114+val8_1);
    var alu127 = (alu115+val8_1);
    var alu128 = (alu116+val8_2);
    var alu129 = (alu117+val8_2);
    var alu130 = (alu118+val8_2);
    var alu131 = (alu119+val8_2);
    var alu132 = (alu120*val11_0);
    var alu133 = (alu121*val11_0);
    var alu134 = (alu122*val11_0);
    var alu135 = (alu123*val11_0);
    var alu136 = (alu124*val11_0);
    var alu137 = (alu125*val11_0);
    var alu138 = (alu126*val11_0);
    var alu139 = (alu127*val11_0);
    var alu140 = (alu128*val11_0);
    var alu141 = (alu129*val11_0);
    var alu142 = (alu130*val11_0);
    var alu143 = (alu131*val11_0);
    var alu144 = exp2(alu132);
    var alu145 = exp2(alu133);
    var alu146 = exp2(alu134);
    var alu147 = exp2(alu135);
    var alu148 = exp2(alu136);
    var alu149 = exp2(alu137);
    var alu150 = exp2(alu138);
    var alu151 = exp2(alu139);
    var alu152 = exp2(alu140);
    var alu153 = exp2(alu141);
    var alu154 = exp2(alu142);
    var alu155 = exp2(alu143);
    var alu156 = (val10_0+alu144);
    var alu157 = (val10_0+alu145);
    var alu158 = (val10_0+alu146);
    var alu159 = (val10_0+alu147);
    var alu160 = (val10_0+alu148);
    var alu161 = (val10_0+alu149);
    var alu162 = (val10_0+alu150);
    var alu163 = (val10_0+alu151);
    var alu164 = (val10_0+alu152);
    var alu165 = (val10_0+alu153);
    var alu166 = (val10_0+alu154);
    var alu167 = (val10_0+alu155);
    var alu168 = (val9_0/alu156);
    var alu169 = (val9_0/alu157);
    var alu170 = (val9_0/alu158);
    var alu171 = (val9_0/alu159);
    var alu172 = (val9_0/alu160);
    var alu173 = (val9_0/alu161);
    var alu174 = (val9_0/alu162);
    var alu175 = (val9_0/alu163);
    var alu176 = (val9_0/alu164);
    var alu177 = (val9_0/alu165);
    var alu178 = (val9_0/alu166);
    var alu179 = (val9_0/alu167);
    var alu180 = (alu72*alu168);
    var alu181 = (alu73*alu169);
    var alu182 = (alu74*alu170);
    var alu183 = (alu75*alu171);
    var alu184 = (alu76*alu172);
    var alu185 = (alu77*alu173);
    var alu186 = (alu78*alu174);
    var alu187 = (alu79*alu175);
    var alu188 = (alu80*alu176);
    var alu189 = (alu81*alu177);
    var alu190 = (alu82*alu178);
    var alu191 = (alu83*alu179);
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4))] = alu180;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+1)] = alu181;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+2)] = alu182;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+3)] = alu183;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+3136)] = alu184;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+3137)] = alu185;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+3138)] = alu186;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+3139)] = alu187;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+6272)] = alu188;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+6273)] = alu189;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+6274)] = alu190;
    data0[((gidx0*75264)+(gidx1*64)+(lidx2*9408)+(lidx3*4)+6275)] = alu191;
  }}}} /* global+local */
}`;

const r_144_7_14_8_3_3_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(8) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 144 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.x);  /* 8 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+-57)]), bool(((((gidx1*-8)+(lidx3*-1))<0)&&((gidx2*-4)<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+-1)]), bool(((gidx2*-4)<0)));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+55)]), bool(((((gidx1*8)+2+lidx3)<57)&&((gidx2*-4)<0))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+-56)]), bool((((gidx1*-8)+(lidx3*-1))<0)));
      var val1_4 = f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56))]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+56)]), bool((((gidx1*8)+2+lidx3)<57)));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+-55)]), bool((((gidx1*-8)+(lidx3*-1))<0)));
      var val1_7 = f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+1)]);
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+57)]), bool((((gidx1*8)+2+lidx3)<57)));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+-54)]), bool((((gidx1*-8)+(lidx3*-1))<0)));
      var val1_10 = f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+2)]);
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+58)]), bool((((gidx1*8)+2+lidx3)<57)));
      var val1_12 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+-53)]), bool((((gidx1*-8)+(lidx3*-1))<0)));
      var val1_13 = f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+3)]);
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+59)]), bool((((gidx1*8)+2+lidx3)<57)));
      var val1_15 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+-52)]), bool(((((gidx1*-8)+(lidx3*-1))<0)&&(((gidx2*4)+5)<57))));
      var val1_16 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+4)]), bool((((gidx2*4)+5)<57)));
      var val1_17 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+60)]), bool(((((gidx1*8)+2+lidx3)<57)&&(((gidx2*4)+5)<57))));
      var val2_0 = f32(data2[(gidx0*9)]);
      var val2_1 = f32(data2[((gidx0*9)+3)]);
      var val2_2 = f32(data2[((gidx0*9)+6)]);
      var val2_3 = f32(data2[((gidx0*9)+1)]);
      var val2_4 = f32(data2[((gidx0*9)+4)]);
      var val2_5 = f32(data2[((gidx0*9)+7)]);
      var val2_6 = f32(data2[((gidx0*9)+2)]);
      var val2_7 = f32(data2[((gidx0*9)+5)]);
      var val2_8 = f32(data2[((gidx0*9)+8)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_1 = fma(val1_3,val2_0,acc0_1);
      acc0_1 = fma(val1_4,val2_1,acc0_1);
      acc0_1 = fma(val1_5,val2_2,acc0_1);
      acc0_1 = fma(val1_6,val2_3,acc0_1);
      acc0_1 = fma(val1_7,val2_4,acc0_1);
      acc0_1 = fma(val1_8,val2_5,acc0_1);
      acc0_1 = fma(val1_9,val2_6,acc0_1);
      acc0_1 = fma(val1_10,val2_7,acc0_1);
      acc0_1 = fma(val1_11,val2_8,acc0_1);
      acc0_2 = fma(val1_6,val2_0,acc0_2);
      acc0_2 = fma(val1_7,val2_1,acc0_2);
      acc0_2 = fma(val1_8,val2_2,acc0_2);
      acc0_2 = fma(val1_9,val2_3,acc0_2);
      acc0_2 = fma(val1_10,val2_4,acc0_2);
      acc0_2 = fma(val1_11,val2_5,acc0_2);
      acc0_2 = fma(val1_12,val2_6,acc0_2);
      acc0_2 = fma(val1_13,val2_7,acc0_2);
      acc0_2 = fma(val1_14,val2_8,acc0_2);
      acc0_3 = fma(val1_9,val2_0,acc0_3);
      acc0_3 = fma(val1_10,val2_1,acc0_3);
      acc0_3 = fma(val1_11,val2_2,acc0_3);
      acc0_3 = fma(val1_12,val2_3,acc0_3);
      acc0_3 = fma(val1_13,val2_4,acc0_3);
      acc0_3 = fma(val1_14,val2_5,acc0_3);
      acc0_3 = fma(val1_15,val2_6,acc0_3);
      acc0_3 = fma(val1_16,val2_7,acc0_3);
      acc0_3 = fma(val1_17,val2_8,acc0_3);
     /* reduce */
    data0[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56))] = acc0_0;
    data0[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+1)] = acc0_1;
    data0[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+2)] = acc0_2;
    data0[((gidx0*3136)+(gidx1*448)+(gidx2*4)+(lidx3*56)+3)] = acc0_3;
  }}}} /* global+local */
}`;

const r_144_16_196 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 144 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 195; ridx2++) {
      var val1_0 = f32(data1[((gidx0*3136)+(lidx1*196)+ridx2)]);
      var val2_0 = f32(data2[gidx0]);
      var val3_0 = f32(data3[gidx0]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[gidx0]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[gidx0]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (alu0*val3_0);
      var alu2 = (val6_0+val5_0);
      var alu3 = (val4_0/alu2);
      var alu4 = sqrt(alu3);
      var alu5 = (alu1*alu4);
      var alu6 = (alu5+val7_0);
      var alu7 = (alu6*val10_0);
      var alu8 = exp2(alu7);
      var alu9 = (val9_0+alu8);
      var alu10 = (val8_0/alu9);
      acc0_0 = fma(alu6,alu10,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val11_0 = 0.00031887755102040814f;
    var alu11 = (accm1_0*val11_0);
    data0[gidx0] = alu11;
  }} /* local */
} /* global */
}`;

const r_6_16_9 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 6 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 8; ridx2++) {
      var val1_0 = f32(data1[((lidx1*9)+ridx2)]);
      var val2_0 = f32(data2[((gidx0*144)+(lidx1*9)+ridx2)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val3_0 = f32(data3[gidx0]);
    var val4_0 = 1.0f;
    var val5_0 = 1.0f;
    var val6_0 = -1.4426950408889634f;
    var alu0 = (accm1_0+val3_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val5_0+alu2);
    var alu4 = (val4_0/alu3);
    var alu5 = (alu0*alu4);
    data0[gidx0] = alu5;
  }} /* local */
} /* global */
}`;

const r_9_16_6 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data3: array<f32>;
@group(0) @binding(2) var<storage,read_write> data4: array<f32>;
@group(0) @binding(3) var<storage,read_write> data5: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 9 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
      var val3_0 = f32(data3[0]);
      var val3_1 = f32(data3[1]);
      var val3_2 = f32(data3[2]);
      var val3_3 = f32(data3[3]);
      var val3_4 = f32(data3[4]);
      var val3_5 = f32(data3[5]);
      var val4_0 = f32(data4[((gidx0*96)+(lidx1*6))]);
      var val4_1 = f32(data4[((gidx0*96)+(lidx1*6)+1)]);
      var val4_2 = f32(data4[((gidx0*96)+(lidx1*6)+2)]);
      var val4_3 = f32(data4[((gidx0*96)+(lidx1*6)+3)]);
      var val4_4 = f32(data4[((gidx0*96)+(lidx1*6)+4)]);
      var val4_5 = f32(data4[((gidx0*96)+(lidx1*6)+5)]);
      acc0_0 = fma(val3_0,val4_0,acc0_0);
      acc0_0 = fma(val3_1,val4_1,acc0_0);
      acc0_0 = fma(val3_2,val4_2,acc0_0);
      acc0_0 = fma(val3_3,val4_3,acc0_0);
      acc0_0 = fma(val3_4,val4_4,acc0_0);
      acc0_0 = fma(val3_5,val4_5,acc0_0);
     /* reduce */
    var val1_0 = 1.0f;
    var val2_0 = 1.0f;
    var val5_0 = f32(data5[((gidx0*16)+lidx1)]);
    var val6_0 = -1.4426950408889634f;
    var alu0 = (acc0_0+val5_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val2_0+alu2);
    var alu4 = (val1_0/alu3);
    data0[((gidx0*16)+lidx1)] = alu4;
  }} /* global+local */
}`;

const r_9_7_14_16_8_3_3_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 9 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.y);  /* 16 */
  { let lidx4 = i32(lindex.x);  /* 8 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+-57)]), bool(((((gidx1*-8)+(lidx4*-1))<0)&&((gidx2*-4)<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+-1)]), bool(((gidx2*-4)<0)));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+55)]), bool(((((gidx1*8)+2+lidx4)<57)&&((gidx2*-4)<0))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+-56)]), bool((((gidx1*-8)+(lidx4*-1))<0)));
      var val1_4 = f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56))]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+56)]), bool((((gidx1*8)+2+lidx4)<57)));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+-55)]), bool((((gidx1*-8)+(lidx4*-1))<0)));
      var val1_7 = f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+1)]);
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+57)]), bool((((gidx1*8)+2+lidx4)<57)));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+-54)]), bool((((gidx1*-8)+(lidx4*-1))<0)));
      var val1_10 = f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+2)]);
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+58)]), bool((((gidx1*8)+2+lidx4)<57)));
      var val1_12 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+-53)]), bool((((gidx1*-8)+(lidx4*-1))<0)));
      var val1_13 = f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+3)]);
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+59)]), bool((((gidx1*8)+2+lidx4)<57)));
      var val1_15 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+-52)]), bool(((((gidx1*-8)+(lidx4*-1))<0)&&(((gidx2*4)+5)<57))));
      var val1_16 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+4)]), bool((((gidx2*4)+5)<57)));
      var val1_17 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+60)]), bool(((((gidx1*8)+2+lidx4)<57)&&(((gidx2*4)+5)<57))));
      var val2_0 = f32(data2[((gidx0*144)+(lidx3*9))]);
      var val2_1 = f32(data2[((gidx0*144)+(lidx3*9)+3)]);
      var val2_2 = f32(data2[((gidx0*144)+(lidx3*9)+6)]);
      var val2_3 = f32(data2[((gidx0*144)+(lidx3*9)+1)]);
      var val2_4 = f32(data2[((gidx0*144)+(lidx3*9)+4)]);
      var val2_5 = f32(data2[((gidx0*144)+(lidx3*9)+7)]);
      var val2_6 = f32(data2[((gidx0*144)+(lidx3*9)+2)]);
      var val2_7 = f32(data2[((gidx0*144)+(lidx3*9)+5)]);
      var val2_8 = f32(data2[((gidx0*144)+(lidx3*9)+8)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_1 = fma(val1_3,val2_0,acc0_1);
      acc0_1 = fma(val1_4,val2_1,acc0_1);
      acc0_1 = fma(val1_5,val2_2,acc0_1);
      acc0_1 = fma(val1_6,val2_3,acc0_1);
      acc0_1 = fma(val1_7,val2_4,acc0_1);
      acc0_1 = fma(val1_8,val2_5,acc0_1);
      acc0_1 = fma(val1_9,val2_6,acc0_1);
      acc0_1 = fma(val1_10,val2_7,acc0_1);
      acc0_1 = fma(val1_11,val2_8,acc0_1);
      acc0_2 = fma(val1_6,val2_0,acc0_2);
      acc0_2 = fma(val1_7,val2_1,acc0_2);
      acc0_2 = fma(val1_8,val2_2,acc0_2);
      acc0_2 = fma(val1_9,val2_3,acc0_2);
      acc0_2 = fma(val1_10,val2_4,acc0_2);
      acc0_2 = fma(val1_11,val2_5,acc0_2);
      acc0_2 = fma(val1_12,val2_6,acc0_2);
      acc0_2 = fma(val1_13,val2_7,acc0_2);
      acc0_2 = fma(val1_14,val2_8,acc0_2);
      acc0_3 = fma(val1_9,val2_0,acc0_3);
      acc0_3 = fma(val1_10,val2_1,acc0_3);
      acc0_3 = fma(val1_11,val2_2,acc0_3);
      acc0_3 = fma(val1_12,val2_3,acc0_3);
      acc0_3 = fma(val1_13,val2_4,acc0_3);
      acc0_3 = fma(val1_14,val2_5,acc0_3);
      acc0_3 = fma(val1_15,val2_6,acc0_3);
      acc0_3 = fma(val1_16,val2_7,acc0_3);
      acc0_3 = fma(val1_17,val2_8,acc0_3);
     /* reduce */
    var val3_0 = f32(data3[((gidx0*16)+lidx3)]);
    var val4_0 = f32(data4[((gidx0*16)+lidx3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*16)+lidx3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*16)+lidx3)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*16)+lidx3)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (alu0*val4_0);
    var alu5 = (alu1*val4_0);
    var alu6 = (alu2*val4_0);
    var alu7 = (alu3*val4_0);
    var alu8 = (val7_0+val6_0);
    var alu9 = (val7_0+val6_0);
    var alu10 = (val7_0+val6_0);
    var alu11 = (val7_0+val6_0);
    var alu12 = (val5_0/alu8);
    var alu13 = (val5_0/alu9);
    var alu14 = (val5_0/alu10);
    var alu15 = (val5_0/alu11);
    var alu16 = sqrt(alu12);
    var alu17 = sqrt(alu13);
    var alu18 = sqrt(alu14);
    var alu19 = sqrt(alu15);
    var alu20 = (alu4*alu16);
    var alu21 = (alu5*alu17);
    var alu22 = (alu6*alu18);
    var alu23 = (alu7*alu19);
    var alu24 = (alu20+val8_0);
    var alu25 = (alu21+val8_0);
    var alu26 = (alu22+val8_0);
    var alu27 = (alu23+val8_0);
    var alu28 = (val5_0/alu8);
    var alu29 = (val5_0/alu9);
    var alu30 = (val5_0/alu10);
    var alu31 = (val5_0/alu11);
    var alu32 = sqrt(alu28);
    var alu33 = sqrt(alu29);
    var alu34 = sqrt(alu30);
    var alu35 = sqrt(alu31);
    var alu36 = (alu4*alu32);
    var alu37 = (alu5*alu33);
    var alu38 = (alu6*alu34);
    var alu39 = (alu7*alu35);
    var alu40 = (alu36+val8_0);
    var alu41 = (alu37+val8_0);
    var alu42 = (alu38+val8_0);
    var alu43 = (alu39+val8_0);
    var alu44 = (alu40*val11_0);
    var alu45 = (alu41*val11_0);
    var alu46 = (alu42*val11_0);
    var alu47 = (alu43*val11_0);
    var alu48 = exp2(alu44);
    var alu49 = exp2(alu45);
    var alu50 = exp2(alu46);
    var alu51 = exp2(alu47);
    var alu52 = (val10_0+alu48);
    var alu53 = (val10_0+alu49);
    var alu54 = (val10_0+alu50);
    var alu55 = (val10_0+alu51);
    var alu56 = (val9_0/alu52);
    var alu57 = (val9_0/alu53);
    var alu58 = (val9_0/alu54);
    var alu59 = (val9_0/alu55);
    var alu60 = (alu24*alu56);
    var alu61 = (alu25*alu57);
    var alu62 = (alu26*alu58);
    var alu63 = (alu27*alu59);
    var alu64 = (alu60*val12_0);
    var alu65 = (alu61*val12_0);
    var alu66 = (alu62*val12_0);
    var alu67 = (alu63*val12_0);
    data0[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56))] = alu64;
    data0[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+1)] = alu65;
    data0[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+2)] = alu66;
    data0[((gidx0*50176)+(gidx1*448)+(gidx2*4)+(lidx3*3136)+(lidx4*56)+3)] = alu67;
  }}}}} /* global+local */
}`;

const r_49_8_16_36_4_4_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data9: array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 49 */
  { let lidx1 = i32(lindex.y);  /* 8 */
  { let lidx2 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 35; ridx3++) {
      var val1_0 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544))]);
      var val1_1 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+3136)]);
      var val1_2 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+6272)]);
      var val1_3 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+9408)]);
      var val1_4 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+1)]);
      var val1_5 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+3137)]);
      var val1_6 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+6273)]);
      var val1_7 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+9409)]);
      var val1_8 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+2)]);
      var val1_9 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+3138)]);
      var val1_10 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+6274)]);
      var val1_11 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+9410)]);
      var val1_12 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+3)]);
      var val1_13 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+3139)]);
      var val1_14 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+6275)]);
      var val1_15 = f32(data1[((gidx0*64)+(lidx2*4)+(ridx3*12544)+9411)]);
      var val2_0 = f32(data2[((lidx1*432)+(ridx3*4))]);
      var val2_1 = f32(data2[((lidx1*432)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((lidx1*432)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((lidx1*432)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((lidx1*432)+(ridx3*4)+144)]);
      var val2_5 = f32(data2[((lidx1*432)+(ridx3*4)+145)]);
      var val2_6 = f32(data2[((lidx1*432)+(ridx3*4)+146)]);
      var val2_7 = f32(data2[((lidx1*432)+(ridx3*4)+147)]);
      var val2_8 = f32(data2[((lidx1*432)+(ridx3*4)+288)]);
      var val2_9 = f32(data2[((lidx1*432)+(ridx3*4)+289)]);
      var val2_10 = f32(data2[((lidx1*432)+(ridx3*4)+290)]);
      var val2_11 = f32(data2[((lidx1*432)+(ridx3*4)+291)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
    } /* reduce */
    var val3_0 = f32(data3[(lidx1*3)]);
    var val3_1 = f32(data3[((lidx1*3)+1)]);
    var val3_2 = f32(data3[((lidx1*3)+2)]);
    var val4_0 = f32(data4[(lidx1*3)]);
    var val4_1 = f32(data4[((lidx1*3)+1)]);
    var val4_2 = f32(data4[((lidx1*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[(lidx1*3)]);
    var val6_1 = f32(data6[((lidx1*3)+1)]);
    var val6_2 = f32(data6[((lidx1*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[(lidx1*3)]);
    var val8_1 = f32(data8[((lidx1*3)+1)]);
    var val8_2 = f32(data8[((lidx1*3)+2)]);
    var val9_0 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4))]);
    var val9_1 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+1)]);
    var val9_2 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+2)]);
    var val9_3 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3)]);
    var val9_4 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3136)]);
    var val9_5 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3137)]);
    var val9_6 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3138)]);
    var val9_7 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3139)]);
    var val9_8 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6272)]);
    var val9_9 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6273)]);
    var val9_10 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6274)]);
    var val9_11 = f32(data9[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6275)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (alu0*val4_0);
    var alu13 = (alu1*val4_0);
    var alu14 = (alu2*val4_0);
    var alu15 = (alu3*val4_0);
    var alu16 = (alu4*val4_1);
    var alu17 = (alu5*val4_1);
    var alu18 = (alu6*val4_1);
    var alu19 = (alu7*val4_1);
    var alu20 = (alu8*val4_2);
    var alu21 = (alu9*val4_2);
    var alu22 = (alu10*val4_2);
    var alu23 = (alu11*val4_2);
    var alu24 = (val7_0+val6_0);
    var alu25 = (val7_0+val6_0);
    var alu26 = (val7_0+val6_0);
    var alu27 = (val7_0+val6_0);
    var alu28 = (val7_0+val6_1);
    var alu29 = (val7_0+val6_1);
    var alu30 = (val7_0+val6_1);
    var alu31 = (val7_0+val6_1);
    var alu32 = (val7_0+val6_2);
    var alu33 = (val7_0+val6_2);
    var alu34 = (val7_0+val6_2);
    var alu35 = (val7_0+val6_2);
    var alu36 = (val5_0/alu24);
    var alu37 = (val5_0/alu25);
    var alu38 = (val5_0/alu26);
    var alu39 = (val5_0/alu27);
    var alu40 = (val5_0/alu28);
    var alu41 = (val5_0/alu29);
    var alu42 = (val5_0/alu30);
    var alu43 = (val5_0/alu31);
    var alu44 = (val5_0/alu32);
    var alu45 = (val5_0/alu33);
    var alu46 = (val5_0/alu34);
    var alu47 = (val5_0/alu35);
    var alu48 = sqrt(alu36);
    var alu49 = sqrt(alu37);
    var alu50 = sqrt(alu38);
    var alu51 = sqrt(alu39);
    var alu52 = sqrt(alu40);
    var alu53 = sqrt(alu41);
    var alu54 = sqrt(alu42);
    var alu55 = sqrt(alu43);
    var alu56 = sqrt(alu44);
    var alu57 = sqrt(alu45);
    var alu58 = sqrt(alu46);
    var alu59 = sqrt(alu47);
    var alu60 = (alu12*alu48);
    var alu61 = (alu13*alu49);
    var alu62 = (alu14*alu50);
    var alu63 = (alu15*alu51);
    var alu64 = (alu16*alu52);
    var alu65 = (alu17*alu53);
    var alu66 = (alu18*alu54);
    var alu67 = (alu19*alu55);
    var alu68 = (alu20*alu56);
    var alu69 = (alu21*alu57);
    var alu70 = (alu22*alu58);
    var alu71 = (alu23*alu59);
    var alu72 = (alu60+val8_0);
    var alu73 = (alu61+val8_0);
    var alu74 = (alu62+val8_0);
    var alu75 = (alu63+val8_0);
    var alu76 = (alu64+val8_1);
    var alu77 = (alu65+val8_1);
    var alu78 = (alu66+val8_1);
    var alu79 = (alu67+val8_1);
    var alu80 = (alu68+val8_2);
    var alu81 = (alu69+val8_2);
    var alu82 = (alu70+val8_2);
    var alu83 = (alu71+val8_2);
    var alu84 = (alu72+val9_0);
    var alu85 = (alu73+val9_1);
    var alu86 = (alu74+val9_2);
    var alu87 = (alu75+val9_3);
    var alu88 = (alu76+val9_4);
    var alu89 = (alu77+val9_5);
    var alu90 = (alu78+val9_6);
    var alu91 = (alu79+val9_7);
    var alu92 = (alu80+val9_8);
    var alu93 = (alu81+val9_9);
    var alu94 = (alu82+val9_10);
    var alu95 = (alu83+val9_11);
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4))] = alu84;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+1)] = alu85;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+2)] = alu86;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3)] = alu87;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3136)] = alu88;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3137)] = alu89;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3138)] = alu90;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+3139)] = alu91;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6272)] = alu92;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6273)] = alu93;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6274)] = alu94;
    data0[((gidx0*64)+(lidx1*9408)+(lidx2*4)+6275)] = alu95;
  }}} /* global+local */
}`;

const r_144_7_7_4_5_5_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(4) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 144 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 4; ridx4++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-57)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57)&&((gidx2*-8)<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-56)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-55)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-54)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-53)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57))));
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-52)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57))));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-51)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-50)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57))));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-49)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57))));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-48)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57)&&(((gidx2*8)+9)<57))));
      var val1_10 = select(f32(0.0f), f32(data1[((gidx0*3136)+(gidx1*448)+(gidx2*8)+(lidx3*112)+(ridx4*56)+-47)]), bool(((((gidx1*-8)+(lidx3*-2)+(ridx4*-1))<0)&&(((gidx1*8)+(lidx3*2)+ridx4)<57)&&(((gidx2*8)+10)<57))));
      var val2_0 = f32(data2[((gidx0*25)+(ridx4*5))]);
      var val2_1 = f32(data2[((gidx0*25)+(ridx4*5)+1)]);
      var val2_2 = f32(data2[((gidx0*25)+(ridx4*5)+2)]);
      var val2_3 = f32(data2[((gidx0*25)+(ridx4*5)+3)]);
      var val2_4 = f32(data2[((gidx0*25)+(ridx4*5)+4)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_1 = fma(val1_2,val2_0,acc0_1);
      acc0_1 = fma(val1_3,val2_1,acc0_1);
      acc0_1 = fma(val1_4,val2_2,acc0_1);
      acc0_1 = fma(val1_5,val2_3,acc0_1);
      acc0_1 = fma(val1_6,val2_4,acc0_1);
      acc0_2 = fma(val1_4,val2_0,acc0_2);
      acc0_2 = fma(val1_5,val2_1,acc0_2);
      acc0_2 = fma(val1_6,val2_2,acc0_2);
      acc0_2 = fma(val1_7,val2_3,acc0_2);
      acc0_2 = fma(val1_8,val2_4,acc0_2);
      acc0_3 = fma(val1_6,val2_0,acc0_3);
      acc0_3 = fma(val1_7,val2_1,acc0_3);
      acc0_3 = fma(val1_8,val2_2,acc0_3);
      acc0_3 = fma(val1_9,val2_3,acc0_3);
      acc0_3 = fma(val1_10,val2_4,acc0_3);
    } /* reduce */
    data0[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28))] = acc0_0;
    data0[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+1)] = acc0_1;
    data0[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+2)] = acc0_2;
    data0[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+3)] = acc0_3;
  }}}} /* global+local */
}`;

const r_144_16_49 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 144 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 48; ridx2++) {
      var val1_0 = f32(data1[((gidx0*784)+(lidx1*49)+ridx2)]);
      var val2_0 = f32(data2[gidx0]);
      var val3_0 = f32(data3[gidx0]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[gidx0]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[gidx0]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (alu0*val3_0);
      var alu2 = (val6_0+val5_0);
      var alu3 = (val4_0/alu2);
      var alu4 = sqrt(alu3);
      var alu5 = (alu1*alu4);
      var alu6 = (alu5+val7_0);
      var alu7 = (alu6*val10_0);
      var alu8 = exp2(alu7);
      var alu9 = (val9_0+alu8);
      var alu10 = (val8_0/alu9);
      acc0_0 = fma(alu6,alu10,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val11_0 = 0.0012755102040816326f;
    var alu11 = (accm1_0*val11_0);
    data0[gidx0] = alu11;
  }} /* local */
} /* global */
}`;

const r_9_7_7_16_4_5_5_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 9 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.y);  /* 16 */
  { let lidx4 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    for(var ridx5 = 0; ridx5 <= 4; ridx5++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-57)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57)&&((gidx2*-8)<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-56)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-55)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-54)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-53)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57))));
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-52)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57))));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-51)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-50)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57))));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-49)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57))));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-48)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57)&&(((gidx2*8)+9)<57))));
      var val1_10 = select(f32(0.0f), f32(data1[((gidx0*50176)+(gidx1*448)+(gidx2*8)+(lidx3*3136)+(lidx4*112)+(ridx5*56)+-47)]), bool(((((gidx1*-8)+(lidx4*-2)+(ridx5*-1))<0)&&(((gidx1*8)+(lidx4*2)+ridx5)<57)&&(((gidx2*8)+10)<57))));
      var val2_0 = f32(data2[((gidx0*400)+(lidx3*25)+(ridx5*5))]);
      var val2_1 = f32(data2[((gidx0*400)+(lidx3*25)+(ridx5*5)+1)]);
      var val2_2 = f32(data2[((gidx0*400)+(lidx3*25)+(ridx5*5)+2)]);
      var val2_3 = f32(data2[((gidx0*400)+(lidx3*25)+(ridx5*5)+3)]);
      var val2_4 = f32(data2[((gidx0*400)+(lidx3*25)+(ridx5*5)+4)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_1 = fma(val1_2,val2_0,acc0_1);
      acc0_1 = fma(val1_3,val2_1,acc0_1);
      acc0_1 = fma(val1_4,val2_2,acc0_1);
      acc0_1 = fma(val1_5,val2_3,acc0_1);
      acc0_1 = fma(val1_6,val2_4,acc0_1);
      acc0_2 = fma(val1_4,val2_0,acc0_2);
      acc0_2 = fma(val1_5,val2_1,acc0_2);
      acc0_2 = fma(val1_6,val2_2,acc0_2);
      acc0_2 = fma(val1_7,val2_3,acc0_2);
      acc0_2 = fma(val1_8,val2_4,acc0_2);
      acc0_3 = fma(val1_6,val2_0,acc0_3);
      acc0_3 = fma(val1_7,val2_1,acc0_3);
      acc0_3 = fma(val1_8,val2_2,acc0_3);
      acc0_3 = fma(val1_9,val2_3,acc0_3);
      acc0_3 = fma(val1_10,val2_4,acc0_3);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*16)+lidx3)]);
    var val4_0 = f32(data4[((gidx0*16)+lidx3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*16)+lidx3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*16)+lidx3)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*16)+lidx3)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (alu0*val4_0);
    var alu5 = (alu1*val4_0);
    var alu6 = (alu2*val4_0);
    var alu7 = (alu3*val4_0);
    var alu8 = (val7_0+val6_0);
    var alu9 = (val7_0+val6_0);
    var alu10 = (val7_0+val6_0);
    var alu11 = (val7_0+val6_0);
    var alu12 = (val5_0/alu8);
    var alu13 = (val5_0/alu9);
    var alu14 = (val5_0/alu10);
    var alu15 = (val5_0/alu11);
    var alu16 = sqrt(alu12);
    var alu17 = sqrt(alu13);
    var alu18 = sqrt(alu14);
    var alu19 = sqrt(alu15);
    var alu20 = (alu4*alu16);
    var alu21 = (alu5*alu17);
    var alu22 = (alu6*alu18);
    var alu23 = (alu7*alu19);
    var alu24 = (alu20+val8_0);
    var alu25 = (alu21+val8_0);
    var alu26 = (alu22+val8_0);
    var alu27 = (alu23+val8_0);
    var alu28 = (val5_0/alu8);
    var alu29 = (val5_0/alu9);
    var alu30 = (val5_0/alu10);
    var alu31 = (val5_0/alu11);
    var alu32 = sqrt(alu28);
    var alu33 = sqrt(alu29);
    var alu34 = sqrt(alu30);
    var alu35 = sqrt(alu31);
    var alu36 = (alu4*alu32);
    var alu37 = (alu5*alu33);
    var alu38 = (alu6*alu34);
    var alu39 = (alu7*alu35);
    var alu40 = (alu36+val8_0);
    var alu41 = (alu37+val8_0);
    var alu42 = (alu38+val8_0);
    var alu43 = (alu39+val8_0);
    var alu44 = (alu40*val11_0);
    var alu45 = (alu41*val11_0);
    var alu46 = (alu42*val11_0);
    var alu47 = (alu43*val11_0);
    var alu48 = exp2(alu44);
    var alu49 = exp2(alu45);
    var alu50 = exp2(alu46);
    var alu51 = exp2(alu47);
    var alu52 = (val10_0+alu48);
    var alu53 = (val10_0+alu49);
    var alu54 = (val10_0+alu50);
    var alu55 = (val10_0+alu51);
    var alu56 = (val9_0/alu52);
    var alu57 = (val9_0/alu53);
    var alu58 = (val9_0/alu54);
    var alu59 = (val9_0/alu55);
    var alu60 = (alu24*alu56);
    var alu61 = (alu25*alu57);
    var alu62 = (alu26*alu58);
    var alu63 = (alu27*alu59);
    var alu64 = (alu60*val12_0);
    var alu65 = (alu61*val12_0);
    var alu66 = (alu62*val12_0);
    var alu67 = (alu63*val12_0);
    data0[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28))] = alu64;
    data0[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+1)] = alu65;
    data0[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+2)] = alu66;
    data0[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+3)] = alu67;
  }}}}} /* global+local */
}`;

const r_10_49_4_36_4_4_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(4) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 10 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    var acc0_12 = 0.0f;
    var acc0_13 = 0.0f;
    var acc0_14 = 0.0f;
    var acc0_15 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 35; ridx3++) {
      var val1_0 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136))]);
      var val1_1 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+784)]);
      var val1_2 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+1568)]);
      var val1_3 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+2352)]);
      var val1_4 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+1)]);
      var val1_5 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+785)]);
      var val1_6 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+1569)]);
      var val1_7 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+2353)]);
      var val1_8 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+2)]);
      var val1_9 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+786)]);
      var val1_10 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+1570)]);
      var val1_11 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+2354)]);
      var val1_12 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+3)]);
      var val1_13 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+787)]);
      var val1_14 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+1571)]);
      var val1_15 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+2355)]);
      var val2_0 = f32(data2[((gidx0*576)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*576)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*576)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*576)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*576)+(ridx3*4)+144)]);
      var val2_5 = f32(data2[((gidx0*576)+(ridx3*4)+145)]);
      var val2_6 = f32(data2[((gidx0*576)+(ridx3*4)+146)]);
      var val2_7 = f32(data2[((gidx0*576)+(ridx3*4)+147)]);
      var val2_8 = f32(data2[((gidx0*576)+(ridx3*4)+288)]);
      var val2_9 = f32(data2[((gidx0*576)+(ridx3*4)+289)]);
      var val2_10 = f32(data2[((gidx0*576)+(ridx3*4)+290)]);
      var val2_11 = f32(data2[((gidx0*576)+(ridx3*4)+291)]);
      var val2_12 = f32(data2[((gidx0*576)+(ridx3*4)+432)]);
      var val2_13 = f32(data2[((gidx0*576)+(ridx3*4)+433)]);
      var val2_14 = f32(data2[((gidx0*576)+(ridx3*4)+434)]);
      var val2_15 = f32(data2[((gidx0*576)+(ridx3*4)+435)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
      acc0_12 = fma(val1_0,val2_12,acc0_12);
      acc0_12 = fma(val1_1,val2_13,acc0_12);
      acc0_12 = fma(val1_2,val2_14,acc0_12);
      acc0_12 = fma(val1_3,val2_15,acc0_12);
      acc0_13 = fma(val1_4,val2_12,acc0_13);
      acc0_13 = fma(val1_5,val2_13,acc0_13);
      acc0_13 = fma(val1_6,val2_14,acc0_13);
      acc0_13 = fma(val1_7,val2_15,acc0_13);
      acc0_14 = fma(val1_8,val2_12,acc0_14);
      acc0_14 = fma(val1_9,val2_13,acc0_14);
      acc0_14 = fma(val1_10,val2_14,acc0_14);
      acc0_14 = fma(val1_11,val2_15,acc0_14);
      acc0_15 = fma(val1_12,val2_12,acc0_15);
      acc0_15 = fma(val1_13,val2_13,acc0_15);
      acc0_15 = fma(val1_14,val2_14,acc0_15);
      acc0_15 = fma(val1_15,val2_15,acc0_15);
    } /* reduce */
    var val3_0 = f32(data3[(gidx0*4)]);
    var val3_1 = f32(data3[((gidx0*4)+1)]);
    var val3_2 = f32(data3[((gidx0*4)+2)]);
    var val3_3 = f32(data3[((gidx0*4)+3)]);
    var val4_0 = f32(data4[(gidx0*4)]);
    var val4_1 = f32(data4[((gidx0*4)+1)]);
    var val4_2 = f32(data4[((gidx0*4)+2)]);
    var val4_3 = f32(data4[((gidx0*4)+3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[(gidx0*4)]);
    var val6_1 = f32(data6[((gidx0*4)+1)]);
    var val6_2 = f32(data6[((gidx0*4)+2)]);
    var val6_3 = f32(data6[((gidx0*4)+3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[(gidx0*4)]);
    var val8_1 = f32(data8[((gidx0*4)+1)]);
    var val8_2 = f32(data8[((gidx0*4)+2)]);
    var val8_3 = f32(data8[((gidx0*4)+3)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (acc0_12-val3_3);
    var alu13 = (acc0_13-val3_3);
    var alu14 = (acc0_14-val3_3);
    var alu15 = (acc0_15-val3_3);
    var alu16 = (alu0*val4_0);
    var alu17 = (alu1*val4_0);
    var alu18 = (alu2*val4_0);
    var alu19 = (alu3*val4_0);
    var alu20 = (alu4*val4_1);
    var alu21 = (alu5*val4_1);
    var alu22 = (alu6*val4_1);
    var alu23 = (alu7*val4_1);
    var alu24 = (alu8*val4_2);
    var alu25 = (alu9*val4_2);
    var alu26 = (alu10*val4_2);
    var alu27 = (alu11*val4_2);
    var alu28 = (alu12*val4_3);
    var alu29 = (alu13*val4_3);
    var alu30 = (alu14*val4_3);
    var alu31 = (alu15*val4_3);
    var alu32 = (val7_0+val6_0);
    var alu33 = (val7_0+val6_0);
    var alu34 = (val7_0+val6_0);
    var alu35 = (val7_0+val6_0);
    var alu36 = (val7_0+val6_1);
    var alu37 = (val7_0+val6_1);
    var alu38 = (val7_0+val6_1);
    var alu39 = (val7_0+val6_1);
    var alu40 = (val7_0+val6_2);
    var alu41 = (val7_0+val6_2);
    var alu42 = (val7_0+val6_2);
    var alu43 = (val7_0+val6_2);
    var alu44 = (val7_0+val6_3);
    var alu45 = (val7_0+val6_3);
    var alu46 = (val7_0+val6_3);
    var alu47 = (val7_0+val6_3);
    var alu48 = (val5_0/alu32);
    var alu49 = (val5_0/alu33);
    var alu50 = (val5_0/alu34);
    var alu51 = (val5_0/alu35);
    var alu52 = (val5_0/alu36);
    var alu53 = (val5_0/alu37);
    var alu54 = (val5_0/alu38);
    var alu55 = (val5_0/alu39);
    var alu56 = (val5_0/alu40);
    var alu57 = (val5_0/alu41);
    var alu58 = (val5_0/alu42);
    var alu59 = (val5_0/alu43);
    var alu60 = (val5_0/alu44);
    var alu61 = (val5_0/alu45);
    var alu62 = (val5_0/alu46);
    var alu63 = (val5_0/alu47);
    var alu64 = sqrt(alu48);
    var alu65 = sqrt(alu49);
    var alu66 = sqrt(alu50);
    var alu67 = sqrt(alu51);
    var alu68 = sqrt(alu52);
    var alu69 = sqrt(alu53);
    var alu70 = sqrt(alu54);
    var alu71 = sqrt(alu55);
    var alu72 = sqrt(alu56);
    var alu73 = sqrt(alu57);
    var alu74 = sqrt(alu58);
    var alu75 = sqrt(alu59);
    var alu76 = sqrt(alu60);
    var alu77 = sqrt(alu61);
    var alu78 = sqrt(alu62);
    var alu79 = sqrt(alu63);
    var alu80 = (alu16*alu64);
    var alu81 = (alu17*alu65);
    var alu82 = (alu18*alu66);
    var alu83 = (alu19*alu67);
    var alu84 = (alu20*alu68);
    var alu85 = (alu21*alu69);
    var alu86 = (alu22*alu70);
    var alu87 = (alu23*alu71);
    var alu88 = (alu24*alu72);
    var alu89 = (alu25*alu73);
    var alu90 = (alu26*alu74);
    var alu91 = (alu27*alu75);
    var alu92 = (alu28*alu76);
    var alu93 = (alu29*alu77);
    var alu94 = (alu30*alu78);
    var alu95 = (alu31*alu79);
    var alu96 = (alu80+val8_0);
    var alu97 = (alu81+val8_0);
    var alu98 = (alu82+val8_0);
    var alu99 = (alu83+val8_0);
    var alu100 = (alu84+val8_1);
    var alu101 = (alu85+val8_1);
    var alu102 = (alu86+val8_1);
    var alu103 = (alu87+val8_1);
    var alu104 = (alu88+val8_2);
    var alu105 = (alu89+val8_2);
    var alu106 = (alu90+val8_2);
    var alu107 = (alu91+val8_2);
    var alu108 = (alu92+val8_3);
    var alu109 = (alu93+val8_3);
    var alu110 = (alu94+val8_3);
    var alu111 = (alu95+val8_3);
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4))] = alu96;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1)] = alu97;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2)] = alu98;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+3)] = alu99;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+784)] = alu100;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+785)] = alu101;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+786)] = alu102;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+787)] = alu103;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1568)] = alu104;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1569)] = alu105;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1570)] = alu106;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1571)] = alu107;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2352)] = alu108;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2353)] = alu109;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2354)] = alu110;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2355)] = alu111;
  }}} /* global+local */
}`;

const r_5_49_16_4_10_4_4_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 5 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.y);  /* 16 */
  { let lidx3 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 9; ridx4++) {
      var val1_0 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136))]);
      var val1_1 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+784)]);
      var val1_2 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+1568)]);
      var val1_3 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+2352)]);
      var val1_4 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+1)]);
      var val1_5 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+785)]);
      var val1_6 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+1569)]);
      var val1_7 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+2353)]);
      var val1_8 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+2)]);
      var val1_9 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+786)]);
      var val1_10 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+1570)]);
      var val1_11 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+2354)]);
      var val1_12 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+3)]);
      var val1_13 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+787)]);
      var val1_14 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+1571)]);
      var val1_15 = f32(data1[((gidx1*16)+(lidx3*4)+(ridx4*3136)+2355)]);
      var val2_0 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4))]);
      var val2_1 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+1)]);
      var val2_2 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+2)]);
      var val2_3 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+3)]);
      var val2_4 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+40)]);
      var val2_5 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+41)]);
      var val2_6 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+42)]);
      var val2_7 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+43)]);
      var val2_8 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+80)]);
      var val2_9 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+81)]);
      var val2_10 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+82)]);
      var val2_11 = f32(data2[((gidx0*1920)+(lidx2*120)+(ridx4*4)+83)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*48)+(lidx2*3))]);
    var val3_1 = f32(data3[((gidx0*48)+(lidx2*3)+1)]);
    var val3_2 = f32(data3[((gidx0*48)+(lidx2*3)+2)]);
    var val4_0 = f32(data4[((gidx0*48)+(lidx2*3))]);
    var val4_1 = f32(data4[((gidx0*48)+(lidx2*3)+1)]);
    var val4_2 = f32(data4[((gidx0*48)+(lidx2*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*48)+(lidx2*3))]);
    var val6_1 = f32(data6[((gidx0*48)+(lidx2*3)+1)]);
    var val6_2 = f32(data6[((gidx0*48)+(lidx2*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*48)+(lidx2*3))]);
    var val8_1 = f32(data8[((gidx0*48)+(lidx2*3)+1)]);
    var val8_2 = f32(data8[((gidx0*48)+(lidx2*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (alu0*val4_0);
    var alu13 = (alu1*val4_0);
    var alu14 = (alu2*val4_0);
    var alu15 = (alu3*val4_0);
    var alu16 = (alu4*val4_1);
    var alu17 = (alu5*val4_1);
    var alu18 = (alu6*val4_1);
    var alu19 = (alu7*val4_1);
    var alu20 = (alu8*val4_2);
    var alu21 = (alu9*val4_2);
    var alu22 = (alu10*val4_2);
    var alu23 = (alu11*val4_2);
    var alu24 = (val7_0+val6_0);
    var alu25 = (val7_0+val6_0);
    var alu26 = (val7_0+val6_0);
    var alu27 = (val7_0+val6_0);
    var alu28 = (val7_0+val6_1);
    var alu29 = (val7_0+val6_1);
    var alu30 = (val7_0+val6_1);
    var alu31 = (val7_0+val6_1);
    var alu32 = (val7_0+val6_2);
    var alu33 = (val7_0+val6_2);
    var alu34 = (val7_0+val6_2);
    var alu35 = (val7_0+val6_2);
    var alu36 = (val5_0/alu24);
    var alu37 = (val5_0/alu25);
    var alu38 = (val5_0/alu26);
    var alu39 = (val5_0/alu27);
    var alu40 = (val5_0/alu28);
    var alu41 = (val5_0/alu29);
    var alu42 = (val5_0/alu30);
    var alu43 = (val5_0/alu31);
    var alu44 = (val5_0/alu32);
    var alu45 = (val5_0/alu33);
    var alu46 = (val5_0/alu34);
    var alu47 = (val5_0/alu35);
    var alu48 = sqrt(alu36);
    var alu49 = sqrt(alu37);
    var alu50 = sqrt(alu38);
    var alu51 = sqrt(alu39);
    var alu52 = sqrt(alu40);
    var alu53 = sqrt(alu41);
    var alu54 = sqrt(alu42);
    var alu55 = sqrt(alu43);
    var alu56 = sqrt(alu44);
    var alu57 = sqrt(alu45);
    var alu58 = sqrt(alu46);
    var alu59 = sqrt(alu47);
    var alu60 = (alu12*alu48);
    var alu61 = (alu13*alu49);
    var alu62 = (alu14*alu50);
    var alu63 = (alu15*alu51);
    var alu64 = (alu16*alu52);
    var alu65 = (alu17*alu53);
    var alu66 = (alu18*alu54);
    var alu67 = (alu19*alu55);
    var alu68 = (alu20*alu56);
    var alu69 = (alu21*alu57);
    var alu70 = (alu22*alu58);
    var alu71 = (alu23*alu59);
    var alu72 = (alu60+val8_0);
    var alu73 = (alu61+val8_0);
    var alu74 = (alu62+val8_0);
    var alu75 = (alu63+val8_0);
    var alu76 = (alu64+val8_1);
    var alu77 = (alu65+val8_1);
    var alu78 = (alu66+val8_1);
    var alu79 = (alu67+val8_1);
    var alu80 = (alu68+val8_2);
    var alu81 = (alu69+val8_2);
    var alu82 = (alu70+val8_2);
    var alu83 = (alu71+val8_2);
    var alu84 = (val5_0/alu24);
    var alu85 = (val5_0/alu25);
    var alu86 = (val5_0/alu26);
    var alu87 = (val5_0/alu27);
    var alu88 = (val5_0/alu28);
    var alu89 = (val5_0/alu29);
    var alu90 = (val5_0/alu30);
    var alu91 = (val5_0/alu31);
    var alu92 = (val5_0/alu32);
    var alu93 = (val5_0/alu33);
    var alu94 = (val5_0/alu34);
    var alu95 = (val5_0/alu35);
    var alu96 = sqrt(alu84);
    var alu97 = sqrt(alu85);
    var alu98 = sqrt(alu86);
    var alu99 = sqrt(alu87);
    var alu100 = sqrt(alu88);
    var alu101 = sqrt(alu89);
    var alu102 = sqrt(alu90);
    var alu103 = sqrt(alu91);
    var alu104 = sqrt(alu92);
    var alu105 = sqrt(alu93);
    var alu106 = sqrt(alu94);
    var alu107 = sqrt(alu95);
    var alu108 = (alu12*alu96);
    var alu109 = (alu13*alu97);
    var alu110 = (alu14*alu98);
    var alu111 = (alu15*alu99);
    var alu112 = (alu16*alu100);
    var alu113 = (alu17*alu101);
    var alu114 = (alu18*alu102);
    var alu115 = (alu19*alu103);
    var alu116 = (alu20*alu104);
    var alu117 = (alu21*alu105);
    var alu118 = (alu22*alu106);
    var alu119 = (alu23*alu107);
    var alu120 = (alu108+val8_0);
    var alu121 = (alu109+val8_0);
    var alu122 = (alu110+val8_0);
    var alu123 = (alu111+val8_0);
    var alu124 = (alu112+val8_1);
    var alu125 = (alu113+val8_1);
    var alu126 = (alu114+val8_1);
    var alu127 = (alu115+val8_1);
    var alu128 = (alu116+val8_2);
    var alu129 = (alu117+val8_2);
    var alu130 = (alu118+val8_2);
    var alu131 = (alu119+val8_2);
    var alu132 = (alu120*val11_0);
    var alu133 = (alu121*val11_0);
    var alu134 = (alu122*val11_0);
    var alu135 = (alu123*val11_0);
    var alu136 = (alu124*val11_0);
    var alu137 = (alu125*val11_0);
    var alu138 = (alu126*val11_0);
    var alu139 = (alu127*val11_0);
    var alu140 = (alu128*val11_0);
    var alu141 = (alu129*val11_0);
    var alu142 = (alu130*val11_0);
    var alu143 = (alu131*val11_0);
    var alu144 = exp2(alu132);
    var alu145 = exp2(alu133);
    var alu146 = exp2(alu134);
    var alu147 = exp2(alu135);
    var alu148 = exp2(alu136);
    var alu149 = exp2(alu137);
    var alu150 = exp2(alu138);
    var alu151 = exp2(alu139);
    var alu152 = exp2(alu140);
    var alu153 = exp2(alu141);
    var alu154 = exp2(alu142);
    var alu155 = exp2(alu143);
    var alu156 = (val10_0+alu144);
    var alu157 = (val10_0+alu145);
    var alu158 = (val10_0+alu146);
    var alu159 = (val10_0+alu147);
    var alu160 = (val10_0+alu148);
    var alu161 = (val10_0+alu149);
    var alu162 = (val10_0+alu150);
    var alu163 = (val10_0+alu151);
    var alu164 = (val10_0+alu152);
    var alu165 = (val10_0+alu153);
    var alu166 = (val10_0+alu154);
    var alu167 = (val10_0+alu155);
    var alu168 = (val9_0/alu156);
    var alu169 = (val9_0/alu157);
    var alu170 = (val9_0/alu158);
    var alu171 = (val9_0/alu159);
    var alu172 = (val9_0/alu160);
    var alu173 = (val9_0/alu161);
    var alu174 = (val9_0/alu162);
    var alu175 = (val9_0/alu163);
    var alu176 = (val9_0/alu164);
    var alu177 = (val9_0/alu165);
    var alu178 = (val9_0/alu166);
    var alu179 = (val9_0/alu167);
    var alu180 = (alu72*alu168);
    var alu181 = (alu73*alu169);
    var alu182 = (alu74*alu170);
    var alu183 = (alu75*alu171);
    var alu184 = (alu76*alu172);
    var alu185 = (alu77*alu173);
    var alu186 = (alu78*alu174);
    var alu187 = (alu79*alu175);
    var alu188 = (alu80*alu176);
    var alu189 = (alu81*alu177);
    var alu190 = (alu82*alu178);
    var alu191 = (alu83*alu179);
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4))] = alu180;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+1)] = alu181;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+2)] = alu182;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+3)] = alu183;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+784)] = alu184;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+785)] = alu185;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+786)] = alu186;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+787)] = alu187;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+1568)] = alu188;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+1569)] = alu189;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+1570)] = alu190;
    data0[((gidx0*37632)+(gidx1*16)+(lidx2*2352)+(lidx3*4)+1571)] = alu191;
  }}}} /* global+local */
}`;

const r_240_7_7_4_5_5_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(4) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 240 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 4; ridx4++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+(ridx4*28)+-58)]), bool(((((gidx1*-4)+(lidx3*-1)+(ridx4*-1))<-1)&&(((gidx1*4)+lidx3+ridx4)<30)&&((gidx2*-4)<-1))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+(ridx4*28)+-57)]), bool(((((gidx1*-4)+(lidx3*-1)+(ridx4*-1))<-1)&&(((gidx1*4)+lidx3+ridx4)<30)&&(((gidx2*-4)+-1)<-1))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+(ridx4*28)+-56)]), bool(((((gidx1*-4)+(lidx3*-1)+(ridx4*-1))<-1)&&(((gidx1*4)+lidx3+ridx4)<30))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+(ridx4*28)+-55)]), bool(((((gidx1*-4)+(lidx3*-1)+(ridx4*-1))<-1)&&(((gidx1*4)+lidx3+ridx4)<30))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+(ridx4*28)+-54)]), bool(((((gidx1*-4)+(lidx3*-1)+(ridx4*-1))<-1)&&(((gidx1*4)+lidx3+ridx4)<30))));
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+(ridx4*28)+-53)]), bool(((((gidx1*-4)+(lidx3*-1)+(ridx4*-1))<-1)&&(((gidx1*4)+lidx3+ridx4)<30))));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+(ridx4*28)+-52)]), bool(((((gidx1*-4)+(lidx3*-1)+(ridx4*-1))<-1)&&(((gidx1*4)+lidx3+ridx4)<30)&&(((gidx2*4)+6)<30))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+(ridx4*28)+-51)]), bool(((((gidx1*-4)+(lidx3*-1)+(ridx4*-1))<-1)&&(((gidx1*4)+lidx3+ridx4)<30)&&(((gidx2*4)+7)<30))));
      var val2_0 = f32(data2[((gidx0*25)+(ridx4*5))]);
      var val2_1 = f32(data2[((gidx0*25)+(ridx4*5)+1)]);
      var val2_2 = f32(data2[((gidx0*25)+(ridx4*5)+2)]);
      var val2_3 = f32(data2[((gidx0*25)+(ridx4*5)+3)]);
      var val2_4 = f32(data2[((gidx0*25)+(ridx4*5)+4)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_1 = fma(val1_1,val2_0,acc0_1);
      acc0_1 = fma(val1_2,val2_1,acc0_1);
      acc0_1 = fma(val1_3,val2_2,acc0_1);
      acc0_1 = fma(val1_4,val2_3,acc0_1);
      acc0_1 = fma(val1_5,val2_4,acc0_1);
      acc0_2 = fma(val1_2,val2_0,acc0_2);
      acc0_2 = fma(val1_3,val2_1,acc0_2);
      acc0_2 = fma(val1_4,val2_2,acc0_2);
      acc0_2 = fma(val1_5,val2_3,acc0_2);
      acc0_2 = fma(val1_6,val2_4,acc0_2);
      acc0_3 = fma(val1_3,val2_0,acc0_3);
      acc0_3 = fma(val1_4,val2_1,acc0_3);
      acc0_3 = fma(val1_5,val2_2,acc0_3);
      acc0_3 = fma(val1_6,val2_3,acc0_3);
      acc0_3 = fma(val1_7,val2_4,acc0_3);
    } /* reduce */
    data0[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28))] = acc0_0;
    data0[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+1)] = acc0_1;
    data0[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+2)] = acc0_2;
    data0[((gidx0*784)+(gidx1*112)+(gidx2*4)+(lidx3*28)+3)] = acc0_3;
  }}}} /* global+local */
}`;

const r_240_16_49 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 240 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 48; ridx2++) {
      var val1_0 = f32(data1[((gidx0*784)+(lidx1*49)+ridx2)]);
      var val2_0 = f32(data2[gidx0]);
      var val3_0 = f32(data3[gidx0]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[gidx0]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[gidx0]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (alu0*val3_0);
      var alu2 = (val6_0+val5_0);
      var alu3 = (val4_0/alu2);
      var alu4 = sqrt(alu3);
      var alu5 = (alu1*alu4);
      var alu6 = (alu5+val7_0);
      var alu7 = (alu6*val10_0);
      var alu8 = exp2(alu7);
      var alu9 = (val9_0+alu8);
      var alu10 = (val8_0/alu9);
      acc0_0 = fma(alu6,alu10,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val11_0 = 0.0012755102040816326f;
    var alu11 = (accm1_0*val11_0);
    data0[gidx0] = alu11;
  }} /* local */
} /* global */
}`;

const r_10_16_15 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 10 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 14; ridx2++) {
      var val1_0 = f32(data1[((lidx1*15)+ridx2)]);
      var val2_0 = f32(data2[((gidx0*240)+(lidx1*15)+ridx2)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val3_0 = f32(data3[gidx0]);
    var val4_0 = 1.0f;
    var val5_0 = 1.0f;
    var val6_0 = -1.4426950408889634f;
    var alu0 = (accm1_0+val3_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val5_0+alu2);
    var alu4 = (val4_0/alu3);
    var alu5 = (alu0*alu4);
    data0[gidx0] = alu5;
  }} /* local */
} /* global */
}`;

const r_15_16_10 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data3: array<f32>;
@group(0) @binding(2) var<storage,read_write> data4: array<f32>;
@group(0) @binding(3) var<storage,read_write> data5: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 15 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
      var val3_0 = f32(data3[0]);
      var val3_1 = f32(data3[1]);
      var val3_2 = f32(data3[2]);
      var val3_3 = f32(data3[3]);
      var val3_4 = f32(data3[4]);
      var val3_5 = f32(data3[5]);
      var val3_6 = f32(data3[6]);
      var val3_7 = f32(data3[7]);
      var val3_8 = f32(data3[8]);
      var val3_9 = f32(data3[9]);
      var val4_0 = f32(data4[((gidx0*160)+(lidx1*10))]);
      var val4_1 = f32(data4[((gidx0*160)+(lidx1*10)+1)]);
      var val4_2 = f32(data4[((gidx0*160)+(lidx1*10)+2)]);
      var val4_3 = f32(data4[((gidx0*160)+(lidx1*10)+3)]);
      var val4_4 = f32(data4[((gidx0*160)+(lidx1*10)+4)]);
      var val4_5 = f32(data4[((gidx0*160)+(lidx1*10)+5)]);
      var val4_6 = f32(data4[((gidx0*160)+(lidx1*10)+6)]);
      var val4_7 = f32(data4[((gidx0*160)+(lidx1*10)+7)]);
      var val4_8 = f32(data4[((gidx0*160)+(lidx1*10)+8)]);
      var val4_9 = f32(data4[((gidx0*160)+(lidx1*10)+9)]);
      acc0_0 = fma(val3_0,val4_0,acc0_0);
      acc0_0 = fma(val3_1,val4_1,acc0_0);
      acc0_0 = fma(val3_2,val4_2,acc0_0);
      acc0_0 = fma(val3_3,val4_3,acc0_0);
      acc0_0 = fma(val3_4,val4_4,acc0_0);
      acc0_0 = fma(val3_5,val4_5,acc0_0);
      acc0_0 = fma(val3_6,val4_6,acc0_0);
      acc0_0 = fma(val3_7,val4_7,acc0_0);
      acc0_0 = fma(val3_8,val4_8,acc0_0);
      acc0_0 = fma(val3_9,val4_9,acc0_0);
     /* reduce */
    var val1_0 = 1.0f;
    var val2_0 = 1.0f;
    var val5_0 = f32(data5[((gidx0*16)+lidx1)]);
    var val6_0 = -1.4426950408889634f;
    var alu0 = (acc0_0+val5_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val2_0+alu2);
    var alu4 = (val1_0/alu3);
    data0[((gidx0*16)+lidx1)] = alu4;
  }} /* global+local */
}`;

const r_15_7_7_16_4_5_5_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 15 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.y);  /* 16 */
  { let lidx4 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    for(var ridx5 = 0; ridx5 <= 4; ridx5++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+(ridx5*28)+-58)]), bool(((((gidx1*-4)+(lidx4*-1)+(ridx5*-1))<-1)&&(((gidx1*4)+lidx4+ridx5)<30)&&((gidx2*-4)<-1))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+(ridx5*28)+-57)]), bool(((((gidx1*-4)+(lidx4*-1)+(ridx5*-1))<-1)&&(((gidx1*4)+lidx4+ridx5)<30)&&(((gidx2*-4)+-1)<-1))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+(ridx5*28)+-56)]), bool(((((gidx1*-4)+(lidx4*-1)+(ridx5*-1))<-1)&&(((gidx1*4)+lidx4+ridx5)<30))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+(ridx5*28)+-55)]), bool(((((gidx1*-4)+(lidx4*-1)+(ridx5*-1))<-1)&&(((gidx1*4)+lidx4+ridx5)<30))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+(ridx5*28)+-54)]), bool(((((gidx1*-4)+(lidx4*-1)+(ridx5*-1))<-1)&&(((gidx1*4)+lidx4+ridx5)<30))));
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+(ridx5*28)+-53)]), bool(((((gidx1*-4)+(lidx4*-1)+(ridx5*-1))<-1)&&(((gidx1*4)+lidx4+ridx5)<30))));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+(ridx5*28)+-52)]), bool(((((gidx1*-4)+(lidx4*-1)+(ridx5*-1))<-1)&&(((gidx1*4)+lidx4+ridx5)<30)&&(((gidx2*4)+6)<30))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+(ridx5*28)+-51)]), bool(((((gidx1*-4)+(lidx4*-1)+(ridx5*-1))<-1)&&(((gidx1*4)+lidx4+ridx5)<30)&&(((gidx2*4)+7)<30))));
      var val2_0 = f32(data2[((gidx0*400)+(lidx3*25)+(ridx5*5))]);
      var val2_1 = f32(data2[((gidx0*400)+(lidx3*25)+(ridx5*5)+1)]);
      var val2_2 = f32(data2[((gidx0*400)+(lidx3*25)+(ridx5*5)+2)]);
      var val2_3 = f32(data2[((gidx0*400)+(lidx3*25)+(ridx5*5)+3)]);
      var val2_4 = f32(data2[((gidx0*400)+(lidx3*25)+(ridx5*5)+4)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_1 = fma(val1_1,val2_0,acc0_1);
      acc0_1 = fma(val1_2,val2_1,acc0_1);
      acc0_1 = fma(val1_3,val2_2,acc0_1);
      acc0_1 = fma(val1_4,val2_3,acc0_1);
      acc0_1 = fma(val1_5,val2_4,acc0_1);
      acc0_2 = fma(val1_2,val2_0,acc0_2);
      acc0_2 = fma(val1_3,val2_1,acc0_2);
      acc0_2 = fma(val1_4,val2_2,acc0_2);
      acc0_2 = fma(val1_5,val2_3,acc0_2);
      acc0_2 = fma(val1_6,val2_4,acc0_2);
      acc0_3 = fma(val1_3,val2_0,acc0_3);
      acc0_3 = fma(val1_4,val2_1,acc0_3);
      acc0_3 = fma(val1_5,val2_2,acc0_3);
      acc0_3 = fma(val1_6,val2_3,acc0_3);
      acc0_3 = fma(val1_7,val2_4,acc0_3);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*16)+lidx3)]);
    var val4_0 = f32(data4[((gidx0*16)+lidx3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*16)+lidx3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*16)+lidx3)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*16)+lidx3)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (alu0*val4_0);
    var alu5 = (alu1*val4_0);
    var alu6 = (alu2*val4_0);
    var alu7 = (alu3*val4_0);
    var alu8 = (val7_0+val6_0);
    var alu9 = (val7_0+val6_0);
    var alu10 = (val7_0+val6_0);
    var alu11 = (val7_0+val6_0);
    var alu12 = (val5_0/alu8);
    var alu13 = (val5_0/alu9);
    var alu14 = (val5_0/alu10);
    var alu15 = (val5_0/alu11);
    var alu16 = sqrt(alu12);
    var alu17 = sqrt(alu13);
    var alu18 = sqrt(alu14);
    var alu19 = sqrt(alu15);
    var alu20 = (alu4*alu16);
    var alu21 = (alu5*alu17);
    var alu22 = (alu6*alu18);
    var alu23 = (alu7*alu19);
    var alu24 = (alu20+val8_0);
    var alu25 = (alu21+val8_0);
    var alu26 = (alu22+val8_0);
    var alu27 = (alu23+val8_0);
    var alu28 = (val5_0/alu8);
    var alu29 = (val5_0/alu9);
    var alu30 = (val5_0/alu10);
    var alu31 = (val5_0/alu11);
    var alu32 = sqrt(alu28);
    var alu33 = sqrt(alu29);
    var alu34 = sqrt(alu30);
    var alu35 = sqrt(alu31);
    var alu36 = (alu4*alu32);
    var alu37 = (alu5*alu33);
    var alu38 = (alu6*alu34);
    var alu39 = (alu7*alu35);
    var alu40 = (alu36+val8_0);
    var alu41 = (alu37+val8_0);
    var alu42 = (alu38+val8_0);
    var alu43 = (alu39+val8_0);
    var alu44 = (alu40*val11_0);
    var alu45 = (alu41*val11_0);
    var alu46 = (alu42*val11_0);
    var alu47 = (alu43*val11_0);
    var alu48 = exp2(alu44);
    var alu49 = exp2(alu45);
    var alu50 = exp2(alu46);
    var alu51 = exp2(alu47);
    var alu52 = (val10_0+alu48);
    var alu53 = (val10_0+alu49);
    var alu54 = (val10_0+alu50);
    var alu55 = (val10_0+alu51);
    var alu56 = (val9_0/alu52);
    var alu57 = (val9_0/alu53);
    var alu58 = (val9_0/alu54);
    var alu59 = (val9_0/alu55);
    var alu60 = (alu24*alu56);
    var alu61 = (alu25*alu57);
    var alu62 = (alu26*alu58);
    var alu63 = (alu27*alu59);
    var alu64 = (alu60*val12_0);
    var alu65 = (alu61*val12_0);
    var alu66 = (alu62*val12_0);
    var alu67 = (alu63*val12_0);
    data0[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28))] = alu64;
    data0[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+1)] = alu65;
    data0[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+2)] = alu66;
    data0[((gidx0*12544)+(gidx1*112)+(gidx2*4)+(lidx3*784)+(lidx4*28)+3)] = alu67;
  }}}}} /* global+local */
}`;

const r_10_49_4_60_4_4_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data9: array<f32>;
@compute @workgroup_size(4) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 10 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    var acc0_12 = 0.0f;
    var acc0_13 = 0.0f;
    var acc0_14 = 0.0f;
    var acc0_15 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 59; ridx3++) {
      var val1_0 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136))]);
      var val1_1 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+784)]);
      var val1_2 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+1568)]);
      var val1_3 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+2352)]);
      var val1_4 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+1)]);
      var val1_5 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+785)]);
      var val1_6 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+1569)]);
      var val1_7 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+2353)]);
      var val1_8 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+2)]);
      var val1_9 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+786)]);
      var val1_10 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+1570)]);
      var val1_11 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+2354)]);
      var val1_12 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+3)]);
      var val1_13 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+787)]);
      var val1_14 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+1571)]);
      var val1_15 = f32(data1[((gidx1*16)+(lidx2*4)+(ridx3*3136)+2355)]);
      var val2_0 = f32(data2[((gidx0*960)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*960)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*960)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*960)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*960)+(ridx3*4)+240)]);
      var val2_5 = f32(data2[((gidx0*960)+(ridx3*4)+241)]);
      var val2_6 = f32(data2[((gidx0*960)+(ridx3*4)+242)]);
      var val2_7 = f32(data2[((gidx0*960)+(ridx3*4)+243)]);
      var val2_8 = f32(data2[((gidx0*960)+(ridx3*4)+480)]);
      var val2_9 = f32(data2[((gidx0*960)+(ridx3*4)+481)]);
      var val2_10 = f32(data2[((gidx0*960)+(ridx3*4)+482)]);
      var val2_11 = f32(data2[((gidx0*960)+(ridx3*4)+483)]);
      var val2_12 = f32(data2[((gidx0*960)+(ridx3*4)+720)]);
      var val2_13 = f32(data2[((gidx0*960)+(ridx3*4)+721)]);
      var val2_14 = f32(data2[((gidx0*960)+(ridx3*4)+722)]);
      var val2_15 = f32(data2[((gidx0*960)+(ridx3*4)+723)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
      acc0_12 = fma(val1_0,val2_12,acc0_12);
      acc0_12 = fma(val1_1,val2_13,acc0_12);
      acc0_12 = fma(val1_2,val2_14,acc0_12);
      acc0_12 = fma(val1_3,val2_15,acc0_12);
      acc0_13 = fma(val1_4,val2_12,acc0_13);
      acc0_13 = fma(val1_5,val2_13,acc0_13);
      acc0_13 = fma(val1_6,val2_14,acc0_13);
      acc0_13 = fma(val1_7,val2_15,acc0_13);
      acc0_14 = fma(val1_8,val2_12,acc0_14);
      acc0_14 = fma(val1_9,val2_13,acc0_14);
      acc0_14 = fma(val1_10,val2_14,acc0_14);
      acc0_14 = fma(val1_11,val2_15,acc0_14);
      acc0_15 = fma(val1_12,val2_12,acc0_15);
      acc0_15 = fma(val1_13,val2_13,acc0_15);
      acc0_15 = fma(val1_14,val2_14,acc0_15);
      acc0_15 = fma(val1_15,val2_15,acc0_15);
    } /* reduce */
    var val3_0 = f32(data3[(gidx0*4)]);
    var val3_1 = f32(data3[((gidx0*4)+1)]);
    var val3_2 = f32(data3[((gidx0*4)+2)]);
    var val3_3 = f32(data3[((gidx0*4)+3)]);
    var val4_0 = f32(data4[(gidx0*4)]);
    var val4_1 = f32(data4[((gidx0*4)+1)]);
    var val4_2 = f32(data4[((gidx0*4)+2)]);
    var val4_3 = f32(data4[((gidx0*4)+3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[(gidx0*4)]);
    var val6_1 = f32(data6[((gidx0*4)+1)]);
    var val6_2 = f32(data6[((gidx0*4)+2)]);
    var val6_3 = f32(data6[((gidx0*4)+3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[(gidx0*4)]);
    var val8_1 = f32(data8[((gidx0*4)+1)]);
    var val8_2 = f32(data8[((gidx0*4)+2)]);
    var val8_3 = f32(data8[((gidx0*4)+3)]);
    var val9_0 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4))]);
    var val9_1 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1)]);
    var val9_2 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2)]);
    var val9_3 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+3)]);
    var val9_4 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+784)]);
    var val9_5 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+785)]);
    var val9_6 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+786)]);
    var val9_7 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+787)]);
    var val9_8 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1568)]);
    var val9_9 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1569)]);
    var val9_10 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1570)]);
    var val9_11 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1571)]);
    var val9_12 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2352)]);
    var val9_13 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2353)]);
    var val9_14 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2354)]);
    var val9_15 = f32(data9[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2355)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (acc0_12-val3_3);
    var alu13 = (acc0_13-val3_3);
    var alu14 = (acc0_14-val3_3);
    var alu15 = (acc0_15-val3_3);
    var alu16 = (alu0*val4_0);
    var alu17 = (alu1*val4_0);
    var alu18 = (alu2*val4_0);
    var alu19 = (alu3*val4_0);
    var alu20 = (alu4*val4_1);
    var alu21 = (alu5*val4_1);
    var alu22 = (alu6*val4_1);
    var alu23 = (alu7*val4_1);
    var alu24 = (alu8*val4_2);
    var alu25 = (alu9*val4_2);
    var alu26 = (alu10*val4_2);
    var alu27 = (alu11*val4_2);
    var alu28 = (alu12*val4_3);
    var alu29 = (alu13*val4_3);
    var alu30 = (alu14*val4_3);
    var alu31 = (alu15*val4_3);
    var alu32 = (val7_0+val6_0);
    var alu33 = (val7_0+val6_0);
    var alu34 = (val7_0+val6_0);
    var alu35 = (val7_0+val6_0);
    var alu36 = (val7_0+val6_1);
    var alu37 = (val7_0+val6_1);
    var alu38 = (val7_0+val6_1);
    var alu39 = (val7_0+val6_1);
    var alu40 = (val7_0+val6_2);
    var alu41 = (val7_0+val6_2);
    var alu42 = (val7_0+val6_2);
    var alu43 = (val7_0+val6_2);
    var alu44 = (val7_0+val6_3);
    var alu45 = (val7_0+val6_3);
    var alu46 = (val7_0+val6_3);
    var alu47 = (val7_0+val6_3);
    var alu48 = (val5_0/alu32);
    var alu49 = (val5_0/alu33);
    var alu50 = (val5_0/alu34);
    var alu51 = (val5_0/alu35);
    var alu52 = (val5_0/alu36);
    var alu53 = (val5_0/alu37);
    var alu54 = (val5_0/alu38);
    var alu55 = (val5_0/alu39);
    var alu56 = (val5_0/alu40);
    var alu57 = (val5_0/alu41);
    var alu58 = (val5_0/alu42);
    var alu59 = (val5_0/alu43);
    var alu60 = (val5_0/alu44);
    var alu61 = (val5_0/alu45);
    var alu62 = (val5_0/alu46);
    var alu63 = (val5_0/alu47);
    var alu64 = sqrt(alu48);
    var alu65 = sqrt(alu49);
    var alu66 = sqrt(alu50);
    var alu67 = sqrt(alu51);
    var alu68 = sqrt(alu52);
    var alu69 = sqrt(alu53);
    var alu70 = sqrt(alu54);
    var alu71 = sqrt(alu55);
    var alu72 = sqrt(alu56);
    var alu73 = sqrt(alu57);
    var alu74 = sqrt(alu58);
    var alu75 = sqrt(alu59);
    var alu76 = sqrt(alu60);
    var alu77 = sqrt(alu61);
    var alu78 = sqrt(alu62);
    var alu79 = sqrt(alu63);
    var alu80 = (alu16*alu64);
    var alu81 = (alu17*alu65);
    var alu82 = (alu18*alu66);
    var alu83 = (alu19*alu67);
    var alu84 = (alu20*alu68);
    var alu85 = (alu21*alu69);
    var alu86 = (alu22*alu70);
    var alu87 = (alu23*alu71);
    var alu88 = (alu24*alu72);
    var alu89 = (alu25*alu73);
    var alu90 = (alu26*alu74);
    var alu91 = (alu27*alu75);
    var alu92 = (alu28*alu76);
    var alu93 = (alu29*alu77);
    var alu94 = (alu30*alu78);
    var alu95 = (alu31*alu79);
    var alu96 = (alu80+val8_0);
    var alu97 = (alu81+val8_0);
    var alu98 = (alu82+val8_0);
    var alu99 = (alu83+val8_0);
    var alu100 = (alu84+val8_1);
    var alu101 = (alu85+val8_1);
    var alu102 = (alu86+val8_1);
    var alu103 = (alu87+val8_1);
    var alu104 = (alu88+val8_2);
    var alu105 = (alu89+val8_2);
    var alu106 = (alu90+val8_2);
    var alu107 = (alu91+val8_2);
    var alu108 = (alu92+val8_3);
    var alu109 = (alu93+val8_3);
    var alu110 = (alu94+val8_3);
    var alu111 = (alu95+val8_3);
    var alu112 = (alu96+val9_0);
    var alu113 = (alu97+val9_1);
    var alu114 = (alu98+val9_2);
    var alu115 = (alu99+val9_3);
    var alu116 = (alu100+val9_4);
    var alu117 = (alu101+val9_5);
    var alu118 = (alu102+val9_6);
    var alu119 = (alu103+val9_7);
    var alu120 = (alu104+val9_8);
    var alu121 = (alu105+val9_9);
    var alu122 = (alu106+val9_10);
    var alu123 = (alu107+val9_11);
    var alu124 = (alu108+val9_12);
    var alu125 = (alu109+val9_13);
    var alu126 = (alu110+val9_14);
    var alu127 = (alu111+val9_15);
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4))] = alu112;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1)] = alu113;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2)] = alu114;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+3)] = alu115;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+784)] = alu116;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+785)] = alu117;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+786)] = alu118;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+787)] = alu119;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1568)] = alu120;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1569)] = alu121;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1570)] = alu122;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+1571)] = alu123;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2352)] = alu124;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2353)] = alu125;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2354)] = alu126;
    data0[((gidx0*3136)+(gidx1*16)+(lidx2*4)+2355)] = alu127;
  }}} /* global+local */
}`;

const r_15_14_14_16_3_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 15 */
{ let gidx1 = i32(gindex.y);  /* 14 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
      var val1_0 = f32(data1[((gidx0*12544)+(gidx1*56)+(gidx2*2)+(lidx3*784))]);
      var val1_1 = f32(data1[((gidx0*12544)+(gidx1*56)+(gidx2*2)+(lidx3*784)+28)]);
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*56)+(gidx2*2)+(lidx3*784)+56)]), bool((((gidx1*2)+2)<28)));
      var val1_3 = f32(data1[((gidx0*12544)+(gidx1*56)+(gidx2*2)+(lidx3*784)+1)]);
      var val1_4 = f32(data1[((gidx0*12544)+(gidx1*56)+(gidx2*2)+(lidx3*784)+29)]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*56)+(gidx2*2)+(lidx3*784)+57)]), bool((((gidx1*2)+2)<28)));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*56)+(gidx2*2)+(lidx3*784)+2)]), bool((((gidx2*2)+2)<28)));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*56)+(gidx2*2)+(lidx3*784)+30)]), bool((((gidx2*2)+2)<28)));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*12544)+(gidx1*56)+(gidx2*2)+(lidx3*784)+58)]), bool(((((gidx1*2)+2)<28)&&(((gidx2*2)+2)<28))));
      var val2_0 = f32(data2[((gidx0*144)+(lidx3*9))]);
      var val2_1 = f32(data2[((gidx0*144)+(lidx3*9)+3)]);
      var val2_2 = f32(data2[((gidx0*144)+(lidx3*9)+6)]);
      var val2_3 = f32(data2[((gidx0*144)+(lidx3*9)+1)]);
      var val2_4 = f32(data2[((gidx0*144)+(lidx3*9)+4)]);
      var val2_5 = f32(data2[((gidx0*144)+(lidx3*9)+7)]);
      var val2_6 = f32(data2[((gidx0*144)+(lidx3*9)+2)]);
      var val2_7 = f32(data2[((gidx0*144)+(lidx3*9)+5)]);
      var val2_8 = f32(data2[((gidx0*144)+(lidx3*9)+8)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
     /* reduce */
    data0[((gidx0*3136)+(gidx1*14)+(lidx3*196)+gidx2)] = acc0_0;
  }}}} /* global+local */
}`;

const r_15_16_49_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 15 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 48; ridx2++) {
      var val1_0 = f32(data1[((gidx0*3136)+(lidx1*196)+(ridx2*4))]);
      var val1_1 = f32(data1[((gidx0*3136)+(lidx1*196)+(ridx2*4)+1)]);
      var val1_2 = f32(data1[((gidx0*3136)+(lidx1*196)+(ridx2*4)+2)]);
      var val1_3 = f32(data1[((gidx0*3136)+(lidx1*196)+(ridx2*4)+3)]);
      var val2_0 = f32(data2[((gidx0*16)+lidx1)]);
      var val3_0 = f32(data3[((gidx0*16)+lidx1)]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[((gidx0*16)+lidx1)]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[((gidx0*16)+lidx1)]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (val1_1-val2_0);
      var alu2 = (val1_2-val2_0);
      var alu3 = (val1_3-val2_0);
      var alu4 = (alu0*val3_0);
      var alu5 = (alu1*val3_0);
      var alu6 = (alu2*val3_0);
      var alu7 = (alu3*val3_0);
      var alu8 = (val6_0+val5_0);
      var alu9 = (val6_0+val5_0);
      var alu10 = (val6_0+val5_0);
      var alu11 = (val6_0+val5_0);
      var alu12 = (val4_0/alu8);
      var alu13 = (val4_0/alu9);
      var alu14 = (val4_0/alu10);
      var alu15 = (val4_0/alu11);
      var alu16 = sqrt(alu12);
      var alu17 = sqrt(alu13);
      var alu18 = sqrt(alu14);
      var alu19 = sqrt(alu15);
      var alu20 = (alu4*alu16);
      var alu21 = (alu5*alu17);
      var alu22 = (alu6*alu18);
      var alu23 = (alu7*alu19);
      var alu24 = (alu20+val7_0);
      var alu25 = (alu21+val7_0);
      var alu26 = (alu22+val7_0);
      var alu27 = (alu23+val7_0);
      var alu28 = (alu24*val10_0);
      var alu29 = (alu25*val10_0);
      var alu30 = (alu26*val10_0);
      var alu31 = (alu27*val10_0);
      var alu32 = exp2(alu28);
      var alu33 = exp2(alu29);
      var alu34 = exp2(alu30);
      var alu35 = exp2(alu31);
      var alu36 = (val9_0+alu32);
      var alu37 = (val9_0+alu33);
      var alu38 = (val9_0+alu34);
      var alu39 = (val9_0+alu35);
      var alu40 = (val8_0/alu36);
      var alu41 = (val8_0/alu37);
      var alu42 = (val8_0/alu38);
      var alu43 = (val8_0/alu39);
      acc0_0 = fma(alu24,alu40,acc0_0);
      acc0_0 = fma(alu25,alu41,acc0_0);
      acc0_0 = fma(alu26,alu42,acc0_0);
      acc0_0 = fma(alu27,alu43,acc0_0);
    } /* reduce */
    var val11_0 = 0.00510204081632653f;
    var alu44 = (acc0_0*val11_0);
    data0[((gidx0*16)+lidx1)] = alu44;
  }} /* global+local */
}`;

const r_5_14_14_16_3_3_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 5 */
{ let gidx1 = i32(gindex.y);  /* 14 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
      var val1_0 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352))]);
      var val1_1 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+28)]);
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+56)]), bool((((gidx1*2)+2)<28)));
      var val1_3 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+1)]);
      var val1_4 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+29)]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+57)]), bool((((gidx1*2)+2)<28)));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+2)]), bool((((gidx2*2)+2)<28)));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+30)]), bool((((gidx2*2)+2)<28)));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+58)]), bool(((((gidx1*2)+2)<28)&&(((gidx2*2)+2)<28))));
      var val1_9 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+784)]);
      var val1_10 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+812)]);
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+840)]), bool((((gidx1*2)+2)<28)));
      var val1_12 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+785)]);
      var val1_13 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+813)]);
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+841)]), bool((((gidx1*2)+2)<28)));
      var val1_15 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+786)]), bool((((gidx2*2)+2)<28)));
      var val1_16 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+814)]), bool((((gidx2*2)+2)<28)));
      var val1_17 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+842)]), bool(((((gidx1*2)+2)<28)&&(((gidx2*2)+2)<28))));
      var val1_18 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+1568)]);
      var val1_19 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+1596)]);
      var val1_20 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+1624)]), bool((((gidx1*2)+2)<28)));
      var val1_21 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+1569)]);
      var val1_22 = f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+1597)]);
      var val1_23 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+1625)]), bool((((gidx1*2)+2)<28)));
      var val1_24 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+1570)]), bool((((gidx2*2)+2)<28)));
      var val1_25 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+1598)]), bool((((gidx2*2)+2)<28)));
      var val1_26 = select(f32(0.0f), f32(data1[((gidx0*37632)+(gidx1*56)+(gidx2*2)+(lidx3*2352)+1626)]), bool(((((gidx1*2)+2)<28)&&(((gidx2*2)+2)<28))));
      var val2_0 = f32(data2[((gidx0*432)+(lidx3*27))]);
      var val2_1 = f32(data2[((gidx0*432)+(lidx3*27)+3)]);
      var val2_2 = f32(data2[((gidx0*432)+(lidx3*27)+6)]);
      var val2_3 = f32(data2[((gidx0*432)+(lidx3*27)+1)]);
      var val2_4 = f32(data2[((gidx0*432)+(lidx3*27)+4)]);
      var val2_5 = f32(data2[((gidx0*432)+(lidx3*27)+7)]);
      var val2_6 = f32(data2[((gidx0*432)+(lidx3*27)+2)]);
      var val2_7 = f32(data2[((gidx0*432)+(lidx3*27)+5)]);
      var val2_8 = f32(data2[((gidx0*432)+(lidx3*27)+8)]);
      var val2_9 = f32(data2[((gidx0*432)+(lidx3*27)+9)]);
      var val2_10 = f32(data2[((gidx0*432)+(lidx3*27)+12)]);
      var val2_11 = f32(data2[((gidx0*432)+(lidx3*27)+15)]);
      var val2_12 = f32(data2[((gidx0*432)+(lidx3*27)+10)]);
      var val2_13 = f32(data2[((gidx0*432)+(lidx3*27)+13)]);
      var val2_14 = f32(data2[((gidx0*432)+(lidx3*27)+16)]);
      var val2_15 = f32(data2[((gidx0*432)+(lidx3*27)+11)]);
      var val2_16 = f32(data2[((gidx0*432)+(lidx3*27)+14)]);
      var val2_17 = f32(data2[((gidx0*432)+(lidx3*27)+17)]);
      var val2_18 = f32(data2[((gidx0*432)+(lidx3*27)+18)]);
      var val2_19 = f32(data2[((gidx0*432)+(lidx3*27)+21)]);
      var val2_20 = f32(data2[((gidx0*432)+(lidx3*27)+24)]);
      var val2_21 = f32(data2[((gidx0*432)+(lidx3*27)+19)]);
      var val2_22 = f32(data2[((gidx0*432)+(lidx3*27)+22)]);
      var val2_23 = f32(data2[((gidx0*432)+(lidx3*27)+25)]);
      var val2_24 = f32(data2[((gidx0*432)+(lidx3*27)+20)]);
      var val2_25 = f32(data2[((gidx0*432)+(lidx3*27)+23)]);
      var val2_26 = f32(data2[((gidx0*432)+(lidx3*27)+26)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_1 = fma(val1_9,val2_9,acc0_1);
      acc0_1 = fma(val1_10,val2_10,acc0_1);
      acc0_1 = fma(val1_11,val2_11,acc0_1);
      acc0_1 = fma(val1_12,val2_12,acc0_1);
      acc0_1 = fma(val1_13,val2_13,acc0_1);
      acc0_1 = fma(val1_14,val2_14,acc0_1);
      acc0_1 = fma(val1_15,val2_15,acc0_1);
      acc0_1 = fma(val1_16,val2_16,acc0_1);
      acc0_1 = fma(val1_17,val2_17,acc0_1);
      acc0_2 = fma(val1_18,val2_18,acc0_2);
      acc0_2 = fma(val1_19,val2_19,acc0_2);
      acc0_2 = fma(val1_20,val2_20,acc0_2);
      acc0_2 = fma(val1_21,val2_21,acc0_2);
      acc0_2 = fma(val1_22,val2_22,acc0_2);
      acc0_2 = fma(val1_23,val2_23,acc0_2);
      acc0_2 = fma(val1_24,val2_24,acc0_2);
      acc0_2 = fma(val1_25,val2_25,acc0_2);
      acc0_2 = fma(val1_26,val2_26,acc0_2);
     /* reduce */
    var val3_0 = f32(data3[((gidx0*48)+(lidx3*3))]);
    var val3_1 = f32(data3[((gidx0*48)+(lidx3*3)+1)]);
    var val3_2 = f32(data3[((gidx0*48)+(lidx3*3)+2)]);
    var val4_0 = f32(data4[((gidx0*48)+(lidx3*3))]);
    var val4_1 = f32(data4[((gidx0*48)+(lidx3*3)+1)]);
    var val4_2 = f32(data4[((gidx0*48)+(lidx3*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*48)+(lidx3*3))]);
    var val6_1 = f32(data6[((gidx0*48)+(lidx3*3)+1)]);
    var val6_2 = f32(data6[((gidx0*48)+(lidx3*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*48)+(lidx3*3))]);
    var val8_1 = f32(data8[((gidx0*48)+(lidx3*3)+1)]);
    var val8_2 = f32(data8[((gidx0*48)+(lidx3*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*48)+(lidx3*3))]);
    var val12_1 = f32(data12[((gidx0*48)+(lidx3*3)+1)]);
    var val12_2 = f32(data12[((gidx0*48)+(lidx3*3)+2)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (alu0*val4_0);
    var alu4 = (alu1*val4_1);
    var alu5 = (alu2*val4_2);
    var alu6 = (val7_0+val6_0);
    var alu7 = (val7_0+val6_1);
    var alu8 = (val7_0+val6_2);
    var alu9 = (val5_0/alu6);
    var alu10 = (val5_0/alu7);
    var alu11 = (val5_0/alu8);
    var alu12 = sqrt(alu9);
    var alu13 = sqrt(alu10);
    var alu14 = sqrt(alu11);
    var alu15 = (alu3*alu12);
    var alu16 = (alu4*alu13);
    var alu17 = (alu5*alu14);
    var alu18 = (alu15+val8_0);
    var alu19 = (alu16+val8_1);
    var alu20 = (alu17+val8_2);
    var alu21 = (val5_0/alu6);
    var alu22 = (val5_0/alu7);
    var alu23 = (val5_0/alu8);
    var alu24 = sqrt(alu21);
    var alu25 = sqrt(alu22);
    var alu26 = sqrt(alu23);
    var alu27 = (alu3*alu24);
    var alu28 = (alu4*alu25);
    var alu29 = (alu5*alu26);
    var alu30 = (alu27+val8_0);
    var alu31 = (alu28+val8_1);
    var alu32 = (alu29+val8_2);
    var alu33 = (alu30*val11_0);
    var alu34 = (alu31*val11_0);
    var alu35 = (alu32*val11_0);
    var alu36 = exp2(alu33);
    var alu37 = exp2(alu34);
    var alu38 = exp2(alu35);
    var alu39 = (val10_0+alu36);
    var alu40 = (val10_0+alu37);
    var alu41 = (val10_0+alu38);
    var alu42 = (val9_0/alu39);
    var alu43 = (val9_0/alu40);
    var alu44 = (val9_0/alu41);
    var alu45 = (alu18*alu42);
    var alu46 = (alu19*alu43);
    var alu47 = (alu20*alu44);
    var alu48 = (alu45*val12_0);
    var alu49 = (alu46*val12_1);
    var alu50 = (alu47*val12_2);
    data0[((gidx0*9408)+(gidx1*14)+(lidx3*588)+gidx2)] = alu48;
    data0[((gidx0*9408)+(gidx1*14)+(lidx3*588)+196+gidx2)] = alu49;
    data0[((gidx0*9408)+(gidx1*14)+(lidx3*588)+392+gidx2)] = alu50;
  }}}} /* global+local */
}`;

const r_5_49_4_60_4_4_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(4) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 5 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    var acc0_12 = 0.0f;
    var acc0_13 = 0.0f;
    var acc0_14 = 0.0f;
    var acc0_15 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 59; ridx3++) {
      var val1_0 = f32(data1[((gidx1*4)+(ridx3*784))]);
      var val1_1 = f32(data1[((gidx1*4)+(ridx3*784)+196)]);
      var val1_2 = f32(data1[((gidx1*4)+(ridx3*784)+392)]);
      var val1_3 = f32(data1[((gidx1*4)+(ridx3*784)+588)]);
      var val1_4 = f32(data1[((gidx1*4)+(ridx3*784)+1)]);
      var val1_5 = f32(data1[((gidx1*4)+(ridx3*784)+197)]);
      var val1_6 = f32(data1[((gidx1*4)+(ridx3*784)+393)]);
      var val1_7 = f32(data1[((gidx1*4)+(ridx3*784)+589)]);
      var val1_8 = f32(data1[((gidx1*4)+(ridx3*784)+2)]);
      var val1_9 = f32(data1[((gidx1*4)+(ridx3*784)+198)]);
      var val1_10 = f32(data1[((gidx1*4)+(ridx3*784)+394)]);
      var val1_11 = f32(data1[((gidx1*4)+(ridx3*784)+590)]);
      var val1_12 = f32(data1[((gidx1*4)+(ridx3*784)+3)]);
      var val1_13 = f32(data1[((gidx1*4)+(ridx3*784)+199)]);
      var val1_14 = f32(data1[((gidx1*4)+(ridx3*784)+395)]);
      var val1_15 = f32(data1[((gidx1*4)+(ridx3*784)+591)]);
      var val2_0 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+240)]);
      var val2_5 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+241)]);
      var val2_6 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+242)]);
      var val2_7 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+243)]);
      var val2_8 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+480)]);
      var val2_9 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+481)]);
      var val2_10 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+482)]);
      var val2_11 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+483)]);
      var val2_12 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+720)]);
      var val2_13 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+721)]);
      var val2_14 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+722)]);
      var val2_15 = f32(data2[((gidx0*3840)+(lidx2*960)+(ridx3*4)+723)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
      acc0_12 = fma(val1_0,val2_12,acc0_12);
      acc0_12 = fma(val1_1,val2_13,acc0_12);
      acc0_12 = fma(val1_2,val2_14,acc0_12);
      acc0_12 = fma(val1_3,val2_15,acc0_12);
      acc0_13 = fma(val1_4,val2_12,acc0_13);
      acc0_13 = fma(val1_5,val2_13,acc0_13);
      acc0_13 = fma(val1_6,val2_14,acc0_13);
      acc0_13 = fma(val1_7,val2_15,acc0_13);
      acc0_14 = fma(val1_8,val2_12,acc0_14);
      acc0_14 = fma(val1_9,val2_13,acc0_14);
      acc0_14 = fma(val1_10,val2_14,acc0_14);
      acc0_14 = fma(val1_11,val2_15,acc0_14);
      acc0_15 = fma(val1_12,val2_12,acc0_15);
      acc0_15 = fma(val1_13,val2_13,acc0_15);
      acc0_15 = fma(val1_14,val2_14,acc0_15);
      acc0_15 = fma(val1_15,val2_15,acc0_15);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*16)+(lidx2*4))]);
    var val3_1 = f32(data3[((gidx0*16)+(lidx2*4)+1)]);
    var val3_2 = f32(data3[((gidx0*16)+(lidx2*4)+2)]);
    var val3_3 = f32(data3[((gidx0*16)+(lidx2*4)+3)]);
    var val4_0 = f32(data4[((gidx0*16)+(lidx2*4))]);
    var val4_1 = f32(data4[((gidx0*16)+(lidx2*4)+1)]);
    var val4_2 = f32(data4[((gidx0*16)+(lidx2*4)+2)]);
    var val4_3 = f32(data4[((gidx0*16)+(lidx2*4)+3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*16)+(lidx2*4))]);
    var val6_1 = f32(data6[((gidx0*16)+(lidx2*4)+1)]);
    var val6_2 = f32(data6[((gidx0*16)+(lidx2*4)+2)]);
    var val6_3 = f32(data6[((gidx0*16)+(lidx2*4)+3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*16)+(lidx2*4))]);
    var val8_1 = f32(data8[((gidx0*16)+(lidx2*4)+1)]);
    var val8_2 = f32(data8[((gidx0*16)+(lidx2*4)+2)]);
    var val8_3 = f32(data8[((gidx0*16)+(lidx2*4)+3)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (acc0_12-val3_3);
    var alu13 = (acc0_13-val3_3);
    var alu14 = (acc0_14-val3_3);
    var alu15 = (acc0_15-val3_3);
    var alu16 = (alu0*val4_0);
    var alu17 = (alu1*val4_0);
    var alu18 = (alu2*val4_0);
    var alu19 = (alu3*val4_0);
    var alu20 = (alu4*val4_1);
    var alu21 = (alu5*val4_1);
    var alu22 = (alu6*val4_1);
    var alu23 = (alu7*val4_1);
    var alu24 = (alu8*val4_2);
    var alu25 = (alu9*val4_2);
    var alu26 = (alu10*val4_2);
    var alu27 = (alu11*val4_2);
    var alu28 = (alu12*val4_3);
    var alu29 = (alu13*val4_3);
    var alu30 = (alu14*val4_3);
    var alu31 = (alu15*val4_3);
    var alu32 = (val7_0+val6_0);
    var alu33 = (val7_0+val6_0);
    var alu34 = (val7_0+val6_0);
    var alu35 = (val7_0+val6_0);
    var alu36 = (val7_0+val6_1);
    var alu37 = (val7_0+val6_1);
    var alu38 = (val7_0+val6_1);
    var alu39 = (val7_0+val6_1);
    var alu40 = (val7_0+val6_2);
    var alu41 = (val7_0+val6_2);
    var alu42 = (val7_0+val6_2);
    var alu43 = (val7_0+val6_2);
    var alu44 = (val7_0+val6_3);
    var alu45 = (val7_0+val6_3);
    var alu46 = (val7_0+val6_3);
    var alu47 = (val7_0+val6_3);
    var alu48 = (val5_0/alu32);
    var alu49 = (val5_0/alu33);
    var alu50 = (val5_0/alu34);
    var alu51 = (val5_0/alu35);
    var alu52 = (val5_0/alu36);
    var alu53 = (val5_0/alu37);
    var alu54 = (val5_0/alu38);
    var alu55 = (val5_0/alu39);
    var alu56 = (val5_0/alu40);
    var alu57 = (val5_0/alu41);
    var alu58 = (val5_0/alu42);
    var alu59 = (val5_0/alu43);
    var alu60 = (val5_0/alu44);
    var alu61 = (val5_0/alu45);
    var alu62 = (val5_0/alu46);
    var alu63 = (val5_0/alu47);
    var alu64 = sqrt(alu48);
    var alu65 = sqrt(alu49);
    var alu66 = sqrt(alu50);
    var alu67 = sqrt(alu51);
    var alu68 = sqrt(alu52);
    var alu69 = sqrt(alu53);
    var alu70 = sqrt(alu54);
    var alu71 = sqrt(alu55);
    var alu72 = sqrt(alu56);
    var alu73 = sqrt(alu57);
    var alu74 = sqrt(alu58);
    var alu75 = sqrt(alu59);
    var alu76 = sqrt(alu60);
    var alu77 = sqrt(alu61);
    var alu78 = sqrt(alu62);
    var alu79 = sqrt(alu63);
    var alu80 = (alu16*alu64);
    var alu81 = (alu17*alu65);
    var alu82 = (alu18*alu66);
    var alu83 = (alu19*alu67);
    var alu84 = (alu20*alu68);
    var alu85 = (alu21*alu69);
    var alu86 = (alu22*alu70);
    var alu87 = (alu23*alu71);
    var alu88 = (alu24*alu72);
    var alu89 = (alu25*alu73);
    var alu90 = (alu26*alu74);
    var alu91 = (alu27*alu75);
    var alu92 = (alu28*alu76);
    var alu93 = (alu29*alu77);
    var alu94 = (alu30*alu78);
    var alu95 = (alu31*alu79);
    var alu96 = (alu80+val8_0);
    var alu97 = (alu81+val8_0);
    var alu98 = (alu82+val8_0);
    var alu99 = (alu83+val8_0);
    var alu100 = (alu84+val8_1);
    var alu101 = (alu85+val8_1);
    var alu102 = (alu86+val8_1);
    var alu103 = (alu87+val8_1);
    var alu104 = (alu88+val8_2);
    var alu105 = (alu89+val8_2);
    var alu106 = (alu90+val8_2);
    var alu107 = (alu91+val8_2);
    var alu108 = (alu92+val8_3);
    var alu109 = (alu93+val8_3);
    var alu110 = (alu94+val8_3);
    var alu111 = (alu95+val8_3);
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784))] = alu96;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+1)] = alu97;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+2)] = alu98;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+3)] = alu99;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+196)] = alu100;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+197)] = alu101;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+198)] = alu102;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+199)] = alu103;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+392)] = alu104;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+393)] = alu105;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+394)] = alu106;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+395)] = alu107;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+588)] = alu108;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+589)] = alu109;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+590)] = alu110;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+591)] = alu111;
  }}} /* global+local */
}`;

const r_5_49_32_20_4_4_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 5 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 19; ridx3++) {
      var val1_0 = f32(data1[((gidx1*4)+(ridx3*784))]);
      var val1_1 = f32(data1[((gidx1*4)+(ridx3*784)+196)]);
      var val1_2 = f32(data1[((gidx1*4)+(ridx3*784)+392)]);
      var val1_3 = f32(data1[((gidx1*4)+(ridx3*784)+588)]);
      var val1_4 = f32(data1[((gidx1*4)+(ridx3*784)+1)]);
      var val1_5 = f32(data1[((gidx1*4)+(ridx3*784)+197)]);
      var val1_6 = f32(data1[((gidx1*4)+(ridx3*784)+393)]);
      var val1_7 = f32(data1[((gidx1*4)+(ridx3*784)+589)]);
      var val1_8 = f32(data1[((gidx1*4)+(ridx3*784)+2)]);
      var val1_9 = f32(data1[((gidx1*4)+(ridx3*784)+198)]);
      var val1_10 = f32(data1[((gidx1*4)+(ridx3*784)+394)]);
      var val1_11 = f32(data1[((gidx1*4)+(ridx3*784)+590)]);
      var val1_12 = f32(data1[((gidx1*4)+(ridx3*784)+3)]);
      var val1_13 = f32(data1[((gidx1*4)+(ridx3*784)+199)]);
      var val1_14 = f32(data1[((gidx1*4)+(ridx3*784)+395)]);
      var val1_15 = f32(data1[((gidx1*4)+(ridx3*784)+591)]);
      var val2_0 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+80)]);
      var val2_5 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+81)]);
      var val2_6 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+82)]);
      var val2_7 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+83)]);
      var val2_8 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+160)]);
      var val2_9 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+161)]);
      var val2_10 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+162)]);
      var val2_11 = f32(data2[((gidx0*7680)+(lidx2*240)+(ridx3*4)+163)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx2*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx2*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx2*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx2*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx2*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx2*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx2*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx2*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx2*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx2*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx2*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx2*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (alu0*val4_0);
    var alu13 = (alu1*val4_0);
    var alu14 = (alu2*val4_0);
    var alu15 = (alu3*val4_0);
    var alu16 = (alu4*val4_1);
    var alu17 = (alu5*val4_1);
    var alu18 = (alu6*val4_1);
    var alu19 = (alu7*val4_1);
    var alu20 = (alu8*val4_2);
    var alu21 = (alu9*val4_2);
    var alu22 = (alu10*val4_2);
    var alu23 = (alu11*val4_2);
    var alu24 = (val7_0+val6_0);
    var alu25 = (val7_0+val6_0);
    var alu26 = (val7_0+val6_0);
    var alu27 = (val7_0+val6_0);
    var alu28 = (val7_0+val6_1);
    var alu29 = (val7_0+val6_1);
    var alu30 = (val7_0+val6_1);
    var alu31 = (val7_0+val6_1);
    var alu32 = (val7_0+val6_2);
    var alu33 = (val7_0+val6_2);
    var alu34 = (val7_0+val6_2);
    var alu35 = (val7_0+val6_2);
    var alu36 = (val5_0/alu24);
    var alu37 = (val5_0/alu25);
    var alu38 = (val5_0/alu26);
    var alu39 = (val5_0/alu27);
    var alu40 = (val5_0/alu28);
    var alu41 = (val5_0/alu29);
    var alu42 = (val5_0/alu30);
    var alu43 = (val5_0/alu31);
    var alu44 = (val5_0/alu32);
    var alu45 = (val5_0/alu33);
    var alu46 = (val5_0/alu34);
    var alu47 = (val5_0/alu35);
    var alu48 = sqrt(alu36);
    var alu49 = sqrt(alu37);
    var alu50 = sqrt(alu38);
    var alu51 = sqrt(alu39);
    var alu52 = sqrt(alu40);
    var alu53 = sqrt(alu41);
    var alu54 = sqrt(alu42);
    var alu55 = sqrt(alu43);
    var alu56 = sqrt(alu44);
    var alu57 = sqrt(alu45);
    var alu58 = sqrt(alu46);
    var alu59 = sqrt(alu47);
    var alu60 = (alu12*alu48);
    var alu61 = (alu13*alu49);
    var alu62 = (alu14*alu50);
    var alu63 = (alu15*alu51);
    var alu64 = (alu16*alu52);
    var alu65 = (alu17*alu53);
    var alu66 = (alu18*alu54);
    var alu67 = (alu19*alu55);
    var alu68 = (alu20*alu56);
    var alu69 = (alu21*alu57);
    var alu70 = (alu22*alu58);
    var alu71 = (alu23*alu59);
    var alu72 = (alu60+val8_0);
    var alu73 = (alu61+val8_0);
    var alu74 = (alu62+val8_0);
    var alu75 = (alu63+val8_0);
    var alu76 = (alu64+val8_1);
    var alu77 = (alu65+val8_1);
    var alu78 = (alu66+val8_1);
    var alu79 = (alu67+val8_1);
    var alu80 = (alu68+val8_2);
    var alu81 = (alu69+val8_2);
    var alu82 = (alu70+val8_2);
    var alu83 = (alu71+val8_2);
    var alu84 = (val5_0/alu24);
    var alu85 = (val5_0/alu25);
    var alu86 = (val5_0/alu26);
    var alu87 = (val5_0/alu27);
    var alu88 = (val5_0/alu28);
    var alu89 = (val5_0/alu29);
    var alu90 = (val5_0/alu30);
    var alu91 = (val5_0/alu31);
    var alu92 = (val5_0/alu32);
    var alu93 = (val5_0/alu33);
    var alu94 = (val5_0/alu34);
    var alu95 = (val5_0/alu35);
    var alu96 = sqrt(alu84);
    var alu97 = sqrt(alu85);
    var alu98 = sqrt(alu86);
    var alu99 = sqrt(alu87);
    var alu100 = sqrt(alu88);
    var alu101 = sqrt(alu89);
    var alu102 = sqrt(alu90);
    var alu103 = sqrt(alu91);
    var alu104 = sqrt(alu92);
    var alu105 = sqrt(alu93);
    var alu106 = sqrt(alu94);
    var alu107 = sqrt(alu95);
    var alu108 = (alu12*alu96);
    var alu109 = (alu13*alu97);
    var alu110 = (alu14*alu98);
    var alu111 = (alu15*alu99);
    var alu112 = (alu16*alu100);
    var alu113 = (alu17*alu101);
    var alu114 = (alu18*alu102);
    var alu115 = (alu19*alu103);
    var alu116 = (alu20*alu104);
    var alu117 = (alu21*alu105);
    var alu118 = (alu22*alu106);
    var alu119 = (alu23*alu107);
    var alu120 = (alu108+val8_0);
    var alu121 = (alu109+val8_0);
    var alu122 = (alu110+val8_0);
    var alu123 = (alu111+val8_0);
    var alu124 = (alu112+val8_1);
    var alu125 = (alu113+val8_1);
    var alu126 = (alu114+val8_1);
    var alu127 = (alu115+val8_1);
    var alu128 = (alu116+val8_2);
    var alu129 = (alu117+val8_2);
    var alu130 = (alu118+val8_2);
    var alu131 = (alu119+val8_2);
    var alu132 = (alu120*val11_0);
    var alu133 = (alu121*val11_0);
    var alu134 = (alu122*val11_0);
    var alu135 = (alu123*val11_0);
    var alu136 = (alu124*val11_0);
    var alu137 = (alu125*val11_0);
    var alu138 = (alu126*val11_0);
    var alu139 = (alu127*val11_0);
    var alu140 = (alu128*val11_0);
    var alu141 = (alu129*val11_0);
    var alu142 = (alu130*val11_0);
    var alu143 = (alu131*val11_0);
    var alu144 = exp2(alu132);
    var alu145 = exp2(alu133);
    var alu146 = exp2(alu134);
    var alu147 = exp2(alu135);
    var alu148 = exp2(alu136);
    var alu149 = exp2(alu137);
    var alu150 = exp2(alu138);
    var alu151 = exp2(alu139);
    var alu152 = exp2(alu140);
    var alu153 = exp2(alu141);
    var alu154 = exp2(alu142);
    var alu155 = exp2(alu143);
    var alu156 = (val10_0+alu144);
    var alu157 = (val10_0+alu145);
    var alu158 = (val10_0+alu146);
    var alu159 = (val10_0+alu147);
    var alu160 = (val10_0+alu148);
    var alu161 = (val10_0+alu149);
    var alu162 = (val10_0+alu150);
    var alu163 = (val10_0+alu151);
    var alu164 = (val10_0+alu152);
    var alu165 = (val10_0+alu153);
    var alu166 = (val10_0+alu154);
    var alu167 = (val10_0+alu155);
    var alu168 = (val9_0/alu156);
    var alu169 = (val9_0/alu157);
    var alu170 = (val9_0/alu158);
    var alu171 = (val9_0/alu159);
    var alu172 = (val9_0/alu160);
    var alu173 = (val9_0/alu161);
    var alu174 = (val9_0/alu162);
    var alu175 = (val9_0/alu163);
    var alu176 = (val9_0/alu164);
    var alu177 = (val9_0/alu165);
    var alu178 = (val9_0/alu166);
    var alu179 = (val9_0/alu167);
    var alu180 = (alu72*alu168);
    var alu181 = (alu73*alu169);
    var alu182 = (alu74*alu170);
    var alu183 = (alu75*alu171);
    var alu184 = (alu76*alu172);
    var alu185 = (alu77*alu173);
    var alu186 = (alu78*alu174);
    var alu187 = (alu79*alu175);
    var alu188 = (alu80*alu176);
    var alu189 = (alu81*alu177);
    var alu190 = (alu82*alu178);
    var alu191 = (alu83*alu179);
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588))] = alu180;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+1)] = alu181;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+2)] = alu182;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+3)] = alu183;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+196)] = alu184;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+197)] = alu185;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+198)] = alu186;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+199)] = alu187;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+392)] = alu188;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+393)] = alu189;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+394)] = alu190;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+395)] = alu191;
  }}} /* global+local */
}`;

const r_15_14_14_32_3_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 15 */
{ let gidx1 = i32(gindex.y);  /* 14 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+-15+gidx2)]), bool((((gidx1*-1)<0)&&((gidx2*-1)<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+-1+gidx2)]), bool(((gidx2*-1)<0)));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+13+gidx2)]), bool((((2+gidx1)<15)&&((gidx2*-1)<0))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+-14+gidx2)]), bool(((gidx1*-1)<0)));
      var val1_4 = f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+gidx2)]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+14+gidx2)]), bool(((2+gidx1)<15)));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+-13+gidx2)]), bool((((2+gidx2)<15)&&((gidx1*-1)<0))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+1+gidx2)]), bool(((2+gidx2)<15)));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+15+gidx2)]), bool((((2+gidx1)<15)&&((2+gidx2)<15))));
      var val2_0 = f32(data2[((gidx0*288)+(lidx3*9))]);
      var val2_1 = f32(data2[((gidx0*288)+(lidx3*9)+3)]);
      var val2_2 = f32(data2[((gidx0*288)+(lidx3*9)+6)]);
      var val2_3 = f32(data2[((gidx0*288)+(lidx3*9)+1)]);
      var val2_4 = f32(data2[((gidx0*288)+(lidx3*9)+4)]);
      var val2_5 = f32(data2[((gidx0*288)+(lidx3*9)+7)]);
      var val2_6 = f32(data2[((gidx0*288)+(lidx3*9)+2)]);
      var val2_7 = f32(data2[((gidx0*288)+(lidx3*9)+5)]);
      var val2_8 = f32(data2[((gidx0*288)+(lidx3*9)+8)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
     /* reduce */
    data0[((gidx0*6272)+(gidx1*14)+(lidx3*196)+gidx2)] = acc0_0;
  }}}} /* global+local */
}`;

const r_15_32_49_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 15 */
  { let lidx1 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 48; ridx2++) {
      var val1_0 = f32(data1[((gidx0*6272)+(lidx1*196)+(ridx2*4))]);
      var val1_1 = f32(data1[((gidx0*6272)+(lidx1*196)+(ridx2*4)+1)]);
      var val1_2 = f32(data1[((gidx0*6272)+(lidx1*196)+(ridx2*4)+2)]);
      var val1_3 = f32(data1[((gidx0*6272)+(lidx1*196)+(ridx2*4)+3)]);
      var val2_0 = f32(data2[((gidx0*32)+lidx1)]);
      var val3_0 = f32(data3[((gidx0*32)+lidx1)]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[((gidx0*32)+lidx1)]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[((gidx0*32)+lidx1)]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (val1_1-val2_0);
      var alu2 = (val1_2-val2_0);
      var alu3 = (val1_3-val2_0);
      var alu4 = (alu0*val3_0);
      var alu5 = (alu1*val3_0);
      var alu6 = (alu2*val3_0);
      var alu7 = (alu3*val3_0);
      var alu8 = (val6_0+val5_0);
      var alu9 = (val6_0+val5_0);
      var alu10 = (val6_0+val5_0);
      var alu11 = (val6_0+val5_0);
      var alu12 = (val4_0/alu8);
      var alu13 = (val4_0/alu9);
      var alu14 = (val4_0/alu10);
      var alu15 = (val4_0/alu11);
      var alu16 = sqrt(alu12);
      var alu17 = sqrt(alu13);
      var alu18 = sqrt(alu14);
      var alu19 = sqrt(alu15);
      var alu20 = (alu4*alu16);
      var alu21 = (alu5*alu17);
      var alu22 = (alu6*alu18);
      var alu23 = (alu7*alu19);
      var alu24 = (alu20+val7_0);
      var alu25 = (alu21+val7_0);
      var alu26 = (alu22+val7_0);
      var alu27 = (alu23+val7_0);
      var alu28 = (alu24*val10_0);
      var alu29 = (alu25*val10_0);
      var alu30 = (alu26*val10_0);
      var alu31 = (alu27*val10_0);
      var alu32 = exp2(alu28);
      var alu33 = exp2(alu29);
      var alu34 = exp2(alu30);
      var alu35 = exp2(alu31);
      var alu36 = (val9_0+alu32);
      var alu37 = (val9_0+alu33);
      var alu38 = (val9_0+alu34);
      var alu39 = (val9_0+alu35);
      var alu40 = (val8_0/alu36);
      var alu41 = (val8_0/alu37);
      var alu42 = (val8_0/alu38);
      var alu43 = (val8_0/alu39);
      acc0_0 = fma(alu24,alu40,acc0_0);
      acc0_0 = fma(alu25,alu41,acc0_0);
      acc0_0 = fma(alu26,alu42,acc0_0);
      acc0_0 = fma(alu27,alu43,acc0_0);
    } /* reduce */
    var val11_0 = 0.00510204081632653f;
    var alu44 = (acc0_0*val11_0);
    data0[((gidx0*32)+lidx1)] = alu44;
  }} /* global+local */
}`;

const r_20_16_30 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 20 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 29; ridx2++) {
      var val1_0 = f32(data1[((lidx1*30)+ridx2)]);
      var val2_0 = f32(data2[((gidx0*480)+(lidx1*30)+ridx2)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val3_0 = f32(data3[gidx0]);
    var val4_0 = 1.0f;
    var val5_0 = 1.0f;
    var val6_0 = -1.4426950408889634f;
    var alu0 = (accm1_0+val3_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val5_0+alu2);
    var alu4 = (val4_0/alu3);
    var alu5 = (alu0*alu4);
    data0[gidx0] = alu5;
  }} /* local */
} /* global */
}`;

const r_15_32_20 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data3: array<f32>;
@group(0) @binding(2) var<storage,read_write> data4: array<f32>;
@group(0) @binding(3) var<storage,read_write> data5: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 15 */
  { let lidx1 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
      var val3_0 = f32(data3[0]);
      var val3_1 = f32(data3[1]);
      var val3_2 = f32(data3[2]);
      var val3_3 = f32(data3[3]);
      var val3_4 = f32(data3[4]);
      var val3_5 = f32(data3[5]);
      var val3_6 = f32(data3[6]);
      var val3_7 = f32(data3[7]);
      var val3_8 = f32(data3[8]);
      var val3_9 = f32(data3[9]);
      var val3_10 = f32(data3[10]);
      var val3_11 = f32(data3[11]);
      var val3_12 = f32(data3[12]);
      var val3_13 = f32(data3[13]);
      var val3_14 = f32(data3[14]);
      var val3_15 = f32(data3[15]);
      var val3_16 = f32(data3[16]);
      var val3_17 = f32(data3[17]);
      var val3_18 = f32(data3[18]);
      var val3_19 = f32(data3[19]);
      var val4_0 = f32(data4[((gidx0*640)+(lidx1*20))]);
      var val4_1 = f32(data4[((gidx0*640)+(lidx1*20)+1)]);
      var val4_2 = f32(data4[((gidx0*640)+(lidx1*20)+2)]);
      var val4_3 = f32(data4[((gidx0*640)+(lidx1*20)+3)]);
      var val4_4 = f32(data4[((gidx0*640)+(lidx1*20)+4)]);
      var val4_5 = f32(data4[((gidx0*640)+(lidx1*20)+5)]);
      var val4_6 = f32(data4[((gidx0*640)+(lidx1*20)+6)]);
      var val4_7 = f32(data4[((gidx0*640)+(lidx1*20)+7)]);
      var val4_8 = f32(data4[((gidx0*640)+(lidx1*20)+8)]);
      var val4_9 = f32(data4[((gidx0*640)+(lidx1*20)+9)]);
      var val4_10 = f32(data4[((gidx0*640)+(lidx1*20)+10)]);
      var val4_11 = f32(data4[((gidx0*640)+(lidx1*20)+11)]);
      var val4_12 = f32(data4[((gidx0*640)+(lidx1*20)+12)]);
      var val4_13 = f32(data4[((gidx0*640)+(lidx1*20)+13)]);
      var val4_14 = f32(data4[((gidx0*640)+(lidx1*20)+14)]);
      var val4_15 = f32(data4[((gidx0*640)+(lidx1*20)+15)]);
      var val4_16 = f32(data4[((gidx0*640)+(lidx1*20)+16)]);
      var val4_17 = f32(data4[((gidx0*640)+(lidx1*20)+17)]);
      var val4_18 = f32(data4[((gidx0*640)+(lidx1*20)+18)]);
      var val4_19 = f32(data4[((gidx0*640)+(lidx1*20)+19)]);
      acc0_0 = fma(val3_0,val4_0,acc0_0);
      acc0_0 = fma(val3_1,val4_1,acc0_0);
      acc0_0 = fma(val3_2,val4_2,acc0_0);
      acc0_0 = fma(val3_3,val4_3,acc0_0);
      acc0_0 = fma(val3_4,val4_4,acc0_0);
      acc0_0 = fma(val3_5,val4_5,acc0_0);
      acc0_0 = fma(val3_6,val4_6,acc0_0);
      acc0_0 = fma(val3_7,val4_7,acc0_0);
      acc0_0 = fma(val3_8,val4_8,acc0_0);
      acc0_0 = fma(val3_9,val4_9,acc0_0);
      acc0_0 = fma(val3_10,val4_10,acc0_0);
      acc0_0 = fma(val3_11,val4_11,acc0_0);
      acc0_0 = fma(val3_12,val4_12,acc0_0);
      acc0_0 = fma(val3_13,val4_13,acc0_0);
      acc0_0 = fma(val3_14,val4_14,acc0_0);
      acc0_0 = fma(val3_15,val4_15,acc0_0);
      acc0_0 = fma(val3_16,val4_16,acc0_0);
      acc0_0 = fma(val3_17,val4_17,acc0_0);
      acc0_0 = fma(val3_18,val4_18,acc0_0);
      acc0_0 = fma(val3_19,val4_19,acc0_0);
     /* reduce */
    var val1_0 = 1.0f;
    var val2_0 = 1.0f;
    var val5_0 = f32(data5[((gidx0*32)+lidx1)]);
    var val6_0 = -1.4426950408889634f;
    var alu0 = (acc0_0+val5_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val2_0+alu2);
    var alu4 = (val1_0/alu3);
    data0[((gidx0*32)+lidx1)] = alu4;
  }} /* global+local */
}`;

const r_5_14_14_32_3_3_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 5 */
{ let gidx1 = i32(gindex.y);  /* 14 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+-15+gidx2)]), bool((((gidx1*-1)<0)&&((gidx2*-1)<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+-1+gidx2)]), bool(((gidx2*-1)<0)));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+13+gidx2)]), bool((((2+gidx1)<15)&&((gidx2*-1)<0))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+-14+gidx2)]), bool(((gidx1*-1)<0)));
      var val1_4 = f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+gidx2)]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+14+gidx2)]), bool(((2+gidx1)<15)));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+-13+gidx2)]), bool((((2+gidx2)<15)&&((gidx1*-1)<0))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+1+gidx2)]), bool(((2+gidx2)<15)));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+15+gidx2)]), bool((((2+gidx1)<15)&&((2+gidx2)<15))));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+181+gidx2)]), bool((((gidx1*-1)<0)&&((gidx2*-1)<0))));
      var val1_10 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+195+gidx2)]), bool(((gidx2*-1)<0)));
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+209+gidx2)]), bool((((2+gidx1)<15)&&((gidx2*-1)<0))));
      var val1_12 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+182+gidx2)]), bool(((gidx1*-1)<0)));
      var val1_13 = f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+196+gidx2)]);
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+210+gidx2)]), bool(((2+gidx1)<15)));
      var val1_15 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+183+gidx2)]), bool((((2+gidx2)<15)&&((gidx1*-1)<0))));
      var val1_16 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+197+gidx2)]), bool(((2+gidx2)<15)));
      var val1_17 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+211+gidx2)]), bool((((2+gidx1)<15)&&((2+gidx2)<15))));
      var val1_18 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+377+gidx2)]), bool((((gidx1*-1)<0)&&((gidx2*-1)<0))));
      var val1_19 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+391+gidx2)]), bool(((gidx2*-1)<0)));
      var val1_20 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+405+gidx2)]), bool((((2+gidx1)<15)&&((gidx2*-1)<0))));
      var val1_21 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+378+gidx2)]), bool(((gidx1*-1)<0)));
      var val1_22 = f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+392+gidx2)]);
      var val1_23 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+406+gidx2)]), bool(((2+gidx1)<15)));
      var val1_24 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+379+gidx2)]), bool((((2+gidx2)<15)&&((gidx1*-1)<0))));
      var val1_25 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+393+gidx2)]), bool(((2+gidx2)<15)));
      var val1_26 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+407+gidx2)]), bool((((2+gidx1)<15)&&((2+gidx2)<15))));
      var val2_0 = f32(data2[((gidx0*864)+(lidx3*27))]);
      var val2_1 = f32(data2[((gidx0*864)+(lidx3*27)+3)]);
      var val2_2 = f32(data2[((gidx0*864)+(lidx3*27)+6)]);
      var val2_3 = f32(data2[((gidx0*864)+(lidx3*27)+1)]);
      var val2_4 = f32(data2[((gidx0*864)+(lidx3*27)+4)]);
      var val2_5 = f32(data2[((gidx0*864)+(lidx3*27)+7)]);
      var val2_6 = f32(data2[((gidx0*864)+(lidx3*27)+2)]);
      var val2_7 = f32(data2[((gidx0*864)+(lidx3*27)+5)]);
      var val2_8 = f32(data2[((gidx0*864)+(lidx3*27)+8)]);
      var val2_9 = f32(data2[((gidx0*864)+(lidx3*27)+9)]);
      var val2_10 = f32(data2[((gidx0*864)+(lidx3*27)+12)]);
      var val2_11 = f32(data2[((gidx0*864)+(lidx3*27)+15)]);
      var val2_12 = f32(data2[((gidx0*864)+(lidx3*27)+10)]);
      var val2_13 = f32(data2[((gidx0*864)+(lidx3*27)+13)]);
      var val2_14 = f32(data2[((gidx0*864)+(lidx3*27)+16)]);
      var val2_15 = f32(data2[((gidx0*864)+(lidx3*27)+11)]);
      var val2_16 = f32(data2[((gidx0*864)+(lidx3*27)+14)]);
      var val2_17 = f32(data2[((gidx0*864)+(lidx3*27)+17)]);
      var val2_18 = f32(data2[((gidx0*864)+(lidx3*27)+18)]);
      var val2_19 = f32(data2[((gidx0*864)+(lidx3*27)+21)]);
      var val2_20 = f32(data2[((gidx0*864)+(lidx3*27)+24)]);
      var val2_21 = f32(data2[((gidx0*864)+(lidx3*27)+19)]);
      var val2_22 = f32(data2[((gidx0*864)+(lidx3*27)+22)]);
      var val2_23 = f32(data2[((gidx0*864)+(lidx3*27)+25)]);
      var val2_24 = f32(data2[((gidx0*864)+(lidx3*27)+20)]);
      var val2_25 = f32(data2[((gidx0*864)+(lidx3*27)+23)]);
      var val2_26 = f32(data2[((gidx0*864)+(lidx3*27)+26)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_1 = fma(val1_9,val2_9,acc0_1);
      acc0_1 = fma(val1_10,val2_10,acc0_1);
      acc0_1 = fma(val1_11,val2_11,acc0_1);
      acc0_1 = fma(val1_12,val2_12,acc0_1);
      acc0_1 = fma(val1_13,val2_13,acc0_1);
      acc0_1 = fma(val1_14,val2_14,acc0_1);
      acc0_1 = fma(val1_15,val2_15,acc0_1);
      acc0_1 = fma(val1_16,val2_16,acc0_1);
      acc0_1 = fma(val1_17,val2_17,acc0_1);
      acc0_2 = fma(val1_18,val2_18,acc0_2);
      acc0_2 = fma(val1_19,val2_19,acc0_2);
      acc0_2 = fma(val1_20,val2_20,acc0_2);
      acc0_2 = fma(val1_21,val2_21,acc0_2);
      acc0_2 = fma(val1_22,val2_22,acc0_2);
      acc0_2 = fma(val1_23,val2_23,acc0_2);
      acc0_2 = fma(val1_24,val2_24,acc0_2);
      acc0_2 = fma(val1_25,val2_25,acc0_2);
      acc0_2 = fma(val1_26,val2_26,acc0_2);
     /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx3*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx3*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx3*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx3*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx3*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx3*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx3*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx3*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx3*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx3*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx3*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx3*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*96)+(lidx3*3))]);
    var val12_1 = f32(data12[((gidx0*96)+(lidx3*3)+1)]);
    var val12_2 = f32(data12[((gidx0*96)+(lidx3*3)+2)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (alu0*val4_0);
    var alu4 = (alu1*val4_1);
    var alu5 = (alu2*val4_2);
    var alu6 = (val7_0+val6_0);
    var alu7 = (val7_0+val6_1);
    var alu8 = (val7_0+val6_2);
    var alu9 = (val5_0/alu6);
    var alu10 = (val5_0/alu7);
    var alu11 = (val5_0/alu8);
    var alu12 = sqrt(alu9);
    var alu13 = sqrt(alu10);
    var alu14 = sqrt(alu11);
    var alu15 = (alu3*alu12);
    var alu16 = (alu4*alu13);
    var alu17 = (alu5*alu14);
    var alu18 = (alu15+val8_0);
    var alu19 = (alu16+val8_1);
    var alu20 = (alu17+val8_2);
    var alu21 = (val5_0/alu6);
    var alu22 = (val5_0/alu7);
    var alu23 = (val5_0/alu8);
    var alu24 = sqrt(alu21);
    var alu25 = sqrt(alu22);
    var alu26 = sqrt(alu23);
    var alu27 = (alu3*alu24);
    var alu28 = (alu4*alu25);
    var alu29 = (alu5*alu26);
    var alu30 = (alu27+val8_0);
    var alu31 = (alu28+val8_1);
    var alu32 = (alu29+val8_2);
    var alu33 = (alu30*val11_0);
    var alu34 = (alu31*val11_0);
    var alu35 = (alu32*val11_0);
    var alu36 = exp2(alu33);
    var alu37 = exp2(alu34);
    var alu38 = exp2(alu35);
    var alu39 = (val10_0+alu36);
    var alu40 = (val10_0+alu37);
    var alu41 = (val10_0+alu38);
    var alu42 = (val9_0/alu39);
    var alu43 = (val9_0/alu40);
    var alu44 = (val9_0/alu41);
    var alu45 = (alu18*alu42);
    var alu46 = (alu19*alu43);
    var alu47 = (alu20*alu44);
    var alu48 = (alu45*val12_0);
    var alu49 = (alu46*val12_1);
    var alu50 = (alu47*val12_2);
    data0[((gidx0*18816)+(gidx1*14)+(lidx3*588)+gidx2)] = alu48;
    data0[((gidx0*18816)+(gidx1*14)+(lidx3*588)+196+gidx2)] = alu49;
    data0[((gidx0*18816)+(gidx1*14)+(lidx3*588)+392+gidx2)] = alu50;
  }}}} /* global+local */
}`;

const r_5_49_4_120_4_4_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data9: array<f32>;
@compute @workgroup_size(4) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 5 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    var acc0_12 = 0.0f;
    var acc0_13 = 0.0f;
    var acc0_14 = 0.0f;
    var acc0_15 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 119; ridx3++) {
      var val1_0 = f32(data1[((gidx1*4)+(ridx3*784))]);
      var val1_1 = f32(data1[((gidx1*4)+(ridx3*784)+196)]);
      var val1_2 = f32(data1[((gidx1*4)+(ridx3*784)+392)]);
      var val1_3 = f32(data1[((gidx1*4)+(ridx3*784)+588)]);
      var val1_4 = f32(data1[((gidx1*4)+(ridx3*784)+1)]);
      var val1_5 = f32(data1[((gidx1*4)+(ridx3*784)+197)]);
      var val1_6 = f32(data1[((gidx1*4)+(ridx3*784)+393)]);
      var val1_7 = f32(data1[((gidx1*4)+(ridx3*784)+589)]);
      var val1_8 = f32(data1[((gidx1*4)+(ridx3*784)+2)]);
      var val1_9 = f32(data1[((gidx1*4)+(ridx3*784)+198)]);
      var val1_10 = f32(data1[((gidx1*4)+(ridx3*784)+394)]);
      var val1_11 = f32(data1[((gidx1*4)+(ridx3*784)+590)]);
      var val1_12 = f32(data1[((gidx1*4)+(ridx3*784)+3)]);
      var val1_13 = f32(data1[((gidx1*4)+(ridx3*784)+199)]);
      var val1_14 = f32(data1[((gidx1*4)+(ridx3*784)+395)]);
      var val1_15 = f32(data1[((gidx1*4)+(ridx3*784)+591)]);
      var val2_0 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+480)]);
      var val2_5 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+481)]);
      var val2_6 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+482)]);
      var val2_7 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+483)]);
      var val2_8 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+960)]);
      var val2_9 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+961)]);
      var val2_10 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+962)]);
      var val2_11 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+963)]);
      var val2_12 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+1440)]);
      var val2_13 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+1441)]);
      var val2_14 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+1442)]);
      var val2_15 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+1443)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
      acc0_12 = fma(val1_0,val2_12,acc0_12);
      acc0_12 = fma(val1_1,val2_13,acc0_12);
      acc0_12 = fma(val1_2,val2_14,acc0_12);
      acc0_12 = fma(val1_3,val2_15,acc0_12);
      acc0_13 = fma(val1_4,val2_12,acc0_13);
      acc0_13 = fma(val1_5,val2_13,acc0_13);
      acc0_13 = fma(val1_6,val2_14,acc0_13);
      acc0_13 = fma(val1_7,val2_15,acc0_13);
      acc0_14 = fma(val1_8,val2_12,acc0_14);
      acc0_14 = fma(val1_9,val2_13,acc0_14);
      acc0_14 = fma(val1_10,val2_14,acc0_14);
      acc0_14 = fma(val1_11,val2_15,acc0_14);
      acc0_15 = fma(val1_12,val2_12,acc0_15);
      acc0_15 = fma(val1_13,val2_13,acc0_15);
      acc0_15 = fma(val1_14,val2_14,acc0_15);
      acc0_15 = fma(val1_15,val2_15,acc0_15);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*16)+(lidx2*4))]);
    var val3_1 = f32(data3[((gidx0*16)+(lidx2*4)+1)]);
    var val3_2 = f32(data3[((gidx0*16)+(lidx2*4)+2)]);
    var val3_3 = f32(data3[((gidx0*16)+(lidx2*4)+3)]);
    var val4_0 = f32(data4[((gidx0*16)+(lidx2*4))]);
    var val4_1 = f32(data4[((gidx0*16)+(lidx2*4)+1)]);
    var val4_2 = f32(data4[((gidx0*16)+(lidx2*4)+2)]);
    var val4_3 = f32(data4[((gidx0*16)+(lidx2*4)+3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*16)+(lidx2*4))]);
    var val6_1 = f32(data6[((gidx0*16)+(lidx2*4)+1)]);
    var val6_2 = f32(data6[((gidx0*16)+(lidx2*4)+2)]);
    var val6_3 = f32(data6[((gidx0*16)+(lidx2*4)+3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*16)+(lidx2*4))]);
    var val8_1 = f32(data8[((gidx0*16)+(lidx2*4)+1)]);
    var val8_2 = f32(data8[((gidx0*16)+(lidx2*4)+2)]);
    var val8_3 = f32(data8[((gidx0*16)+(lidx2*4)+3)]);
    var val9_0 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784))]);
    var val9_1 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+1)]);
    var val9_2 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+2)]);
    var val9_3 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+3)]);
    var val9_4 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+196)]);
    var val9_5 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+197)]);
    var val9_6 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+198)]);
    var val9_7 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+199)]);
    var val9_8 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+392)]);
    var val9_9 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+393)]);
    var val9_10 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+394)]);
    var val9_11 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+395)]);
    var val9_12 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+588)]);
    var val9_13 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+589)]);
    var val9_14 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+590)]);
    var val9_15 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+591)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (acc0_12-val3_3);
    var alu13 = (acc0_13-val3_3);
    var alu14 = (acc0_14-val3_3);
    var alu15 = (acc0_15-val3_3);
    var alu16 = (alu0*val4_0);
    var alu17 = (alu1*val4_0);
    var alu18 = (alu2*val4_0);
    var alu19 = (alu3*val4_0);
    var alu20 = (alu4*val4_1);
    var alu21 = (alu5*val4_1);
    var alu22 = (alu6*val4_1);
    var alu23 = (alu7*val4_1);
    var alu24 = (alu8*val4_2);
    var alu25 = (alu9*val4_2);
    var alu26 = (alu10*val4_2);
    var alu27 = (alu11*val4_2);
    var alu28 = (alu12*val4_3);
    var alu29 = (alu13*val4_3);
    var alu30 = (alu14*val4_3);
    var alu31 = (alu15*val4_3);
    var alu32 = (val7_0+val6_0);
    var alu33 = (val7_0+val6_0);
    var alu34 = (val7_0+val6_0);
    var alu35 = (val7_0+val6_0);
    var alu36 = (val7_0+val6_1);
    var alu37 = (val7_0+val6_1);
    var alu38 = (val7_0+val6_1);
    var alu39 = (val7_0+val6_1);
    var alu40 = (val7_0+val6_2);
    var alu41 = (val7_0+val6_2);
    var alu42 = (val7_0+val6_2);
    var alu43 = (val7_0+val6_2);
    var alu44 = (val7_0+val6_3);
    var alu45 = (val7_0+val6_3);
    var alu46 = (val7_0+val6_3);
    var alu47 = (val7_0+val6_3);
    var alu48 = (val5_0/alu32);
    var alu49 = (val5_0/alu33);
    var alu50 = (val5_0/alu34);
    var alu51 = (val5_0/alu35);
    var alu52 = (val5_0/alu36);
    var alu53 = (val5_0/alu37);
    var alu54 = (val5_0/alu38);
    var alu55 = (val5_0/alu39);
    var alu56 = (val5_0/alu40);
    var alu57 = (val5_0/alu41);
    var alu58 = (val5_0/alu42);
    var alu59 = (val5_0/alu43);
    var alu60 = (val5_0/alu44);
    var alu61 = (val5_0/alu45);
    var alu62 = (val5_0/alu46);
    var alu63 = (val5_0/alu47);
    var alu64 = sqrt(alu48);
    var alu65 = sqrt(alu49);
    var alu66 = sqrt(alu50);
    var alu67 = sqrt(alu51);
    var alu68 = sqrt(alu52);
    var alu69 = sqrt(alu53);
    var alu70 = sqrt(alu54);
    var alu71 = sqrt(alu55);
    var alu72 = sqrt(alu56);
    var alu73 = sqrt(alu57);
    var alu74 = sqrt(alu58);
    var alu75 = sqrt(alu59);
    var alu76 = sqrt(alu60);
    var alu77 = sqrt(alu61);
    var alu78 = sqrt(alu62);
    var alu79 = sqrt(alu63);
    var alu80 = (alu16*alu64);
    var alu81 = (alu17*alu65);
    var alu82 = (alu18*alu66);
    var alu83 = (alu19*alu67);
    var alu84 = (alu20*alu68);
    var alu85 = (alu21*alu69);
    var alu86 = (alu22*alu70);
    var alu87 = (alu23*alu71);
    var alu88 = (alu24*alu72);
    var alu89 = (alu25*alu73);
    var alu90 = (alu26*alu74);
    var alu91 = (alu27*alu75);
    var alu92 = (alu28*alu76);
    var alu93 = (alu29*alu77);
    var alu94 = (alu30*alu78);
    var alu95 = (alu31*alu79);
    var alu96 = (alu80+val8_0);
    var alu97 = (alu81+val8_0);
    var alu98 = (alu82+val8_0);
    var alu99 = (alu83+val8_0);
    var alu100 = (alu84+val8_1);
    var alu101 = (alu85+val8_1);
    var alu102 = (alu86+val8_1);
    var alu103 = (alu87+val8_1);
    var alu104 = (alu88+val8_2);
    var alu105 = (alu89+val8_2);
    var alu106 = (alu90+val8_2);
    var alu107 = (alu91+val8_2);
    var alu108 = (alu92+val8_3);
    var alu109 = (alu93+val8_3);
    var alu110 = (alu94+val8_3);
    var alu111 = (alu95+val8_3);
    var alu112 = (alu96+val9_0);
    var alu113 = (alu97+val9_1);
    var alu114 = (alu98+val9_2);
    var alu115 = (alu99+val9_3);
    var alu116 = (alu100+val9_4);
    var alu117 = (alu101+val9_5);
    var alu118 = (alu102+val9_6);
    var alu119 = (alu103+val9_7);
    var alu120 = (alu104+val9_8);
    var alu121 = (alu105+val9_9);
    var alu122 = (alu106+val9_10);
    var alu123 = (alu107+val9_11);
    var alu124 = (alu108+val9_12);
    var alu125 = (alu109+val9_13);
    var alu126 = (alu110+val9_14);
    var alu127 = (alu111+val9_15);
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784))] = alu112;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+1)] = alu113;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+2)] = alu114;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+3)] = alu115;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+196)] = alu116;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+197)] = alu117;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+198)] = alu118;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+199)] = alu119;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+392)] = alu120;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+393)] = alu121;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+394)] = alu122;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+395)] = alu123;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+588)] = alu124;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+589)] = alu125;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+590)] = alu126;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+591)] = alu127;
  }}} /* global+local */
}`;

const r_15_14_14_32_5_5 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 15 */
{ let gidx1 = i32(gindex.y);  /* 14 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 4; ridx4++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+(ridx4*14)+-30+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16)&&((gidx2*-1)<-1))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+(ridx4*14)+-29+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<16))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+(ridx4*14)+-28+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+(ridx4*14)+-27+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+(ridx4*14)+-26+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val2_0 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5))]);
      var val2_1 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+1)]);
      var val2_2 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+2)]);
      var val2_3 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+3)]);
      var val2_4 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+4)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
    } /* reduce */
    data0[((gidx0*6272)+(gidx1*14)+(lidx3*196)+gidx2)] = acc0_0;
  }}}} /* global+local */
}`;

const r_5_14_14_32_5_5_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 5 */
{ let gidx1 = i32(gindex.y);  /* 14 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 4; ridx4++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+-30+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16)&&((gidx2*-1)<-1))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+-29+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<16))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+-28+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+-27+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+-26+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+166+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16)&&((gidx2*-1)<-1))));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+167+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<16))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+168+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16))));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+169+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+170+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_10 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+362+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16)&&((gidx2*-1)<-1))));
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+363+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<16))));
      var val1_12 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+364+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16))));
      var val1_13 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+365+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+366+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val2_0 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5))]);
      var val2_1 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+1)]);
      var val2_2 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+2)]);
      var val2_3 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+3)]);
      var val2_4 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+4)]);
      var val2_5 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+25)]);
      var val2_6 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+26)]);
      var val2_7 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+27)]);
      var val2_8 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+28)]);
      var val2_9 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+29)]);
      var val2_10 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+50)]);
      var val2_11 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+51)]);
      var val2_12 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+52)]);
      var val2_13 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+53)]);
      var val2_14 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+54)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_1 = fma(val1_5,val2_5,acc0_1);
      acc0_1 = fma(val1_6,val2_6,acc0_1);
      acc0_1 = fma(val1_7,val2_7,acc0_1);
      acc0_1 = fma(val1_8,val2_8,acc0_1);
      acc0_1 = fma(val1_9,val2_9,acc0_1);
      acc0_2 = fma(val1_10,val2_10,acc0_2);
      acc0_2 = fma(val1_11,val2_11,acc0_2);
      acc0_2 = fma(val1_12,val2_12,acc0_2);
      acc0_2 = fma(val1_13,val2_13,acc0_2);
      acc0_2 = fma(val1_14,val2_14,acc0_2);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx3*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx3*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx3*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx3*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx3*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx3*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx3*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx3*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx3*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx3*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx3*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx3*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*96)+(lidx3*3))]);
    var val12_1 = f32(data12[((gidx0*96)+(lidx3*3)+1)]);
    var val12_2 = f32(data12[((gidx0*96)+(lidx3*3)+2)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (alu0*val4_0);
    var alu4 = (alu1*val4_1);
    var alu5 = (alu2*val4_2);
    var alu6 = (val7_0+val6_0);
    var alu7 = (val7_0+val6_1);
    var alu8 = (val7_0+val6_2);
    var alu9 = (val5_0/alu6);
    var alu10 = (val5_0/alu7);
    var alu11 = (val5_0/alu8);
    var alu12 = sqrt(alu9);
    var alu13 = sqrt(alu10);
    var alu14 = sqrt(alu11);
    var alu15 = (alu3*alu12);
    var alu16 = (alu4*alu13);
    var alu17 = (alu5*alu14);
    var alu18 = (alu15+val8_0);
    var alu19 = (alu16+val8_1);
    var alu20 = (alu17+val8_2);
    var alu21 = (val5_0/alu6);
    var alu22 = (val5_0/alu7);
    var alu23 = (val5_0/alu8);
    var alu24 = sqrt(alu21);
    var alu25 = sqrt(alu22);
    var alu26 = sqrt(alu23);
    var alu27 = (alu3*alu24);
    var alu28 = (alu4*alu25);
    var alu29 = (alu5*alu26);
    var alu30 = (alu27+val8_0);
    var alu31 = (alu28+val8_1);
    var alu32 = (alu29+val8_2);
    var alu33 = (alu30*val11_0);
    var alu34 = (alu31*val11_0);
    var alu35 = (alu32*val11_0);
    var alu36 = exp2(alu33);
    var alu37 = exp2(alu34);
    var alu38 = exp2(alu35);
    var alu39 = (val10_0+alu36);
    var alu40 = (val10_0+alu37);
    var alu41 = (val10_0+alu38);
    var alu42 = (val9_0/alu39);
    var alu43 = (val9_0/alu40);
    var alu44 = (val9_0/alu41);
    var alu45 = (alu18*alu42);
    var alu46 = (alu19*alu43);
    var alu47 = (alu20*alu44);
    var alu48 = (alu45*val12_0);
    var alu49 = (alu46*val12_1);
    var alu50 = (alu47*val12_2);
    data0[((gidx0*18816)+(gidx1*14)+(lidx3*588)+gidx2)] = alu48;
    data0[((gidx0*18816)+(gidx1*14)+(lidx3*588)+196+gidx2)] = alu49;
    data0[((gidx0*18816)+(gidx1*14)+(lidx3*588)+392+gidx2)] = alu50;
  }}}} /* global+local */
}`;

const r_7_49_4_120_4_4_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(4) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 7 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    var acc0_12 = 0.0f;
    var acc0_13 = 0.0f;
    var acc0_14 = 0.0f;
    var acc0_15 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 119; ridx3++) {
      var val1_0 = f32(data1[((gidx1*4)+(ridx3*784))]);
      var val1_1 = f32(data1[((gidx1*4)+(ridx3*784)+196)]);
      var val1_2 = f32(data1[((gidx1*4)+(ridx3*784)+392)]);
      var val1_3 = f32(data1[((gidx1*4)+(ridx3*784)+588)]);
      var val1_4 = f32(data1[((gidx1*4)+(ridx3*784)+1)]);
      var val1_5 = f32(data1[((gidx1*4)+(ridx3*784)+197)]);
      var val1_6 = f32(data1[((gidx1*4)+(ridx3*784)+393)]);
      var val1_7 = f32(data1[((gidx1*4)+(ridx3*784)+589)]);
      var val1_8 = f32(data1[((gidx1*4)+(ridx3*784)+2)]);
      var val1_9 = f32(data1[((gidx1*4)+(ridx3*784)+198)]);
      var val1_10 = f32(data1[((gidx1*4)+(ridx3*784)+394)]);
      var val1_11 = f32(data1[((gidx1*4)+(ridx3*784)+590)]);
      var val1_12 = f32(data1[((gidx1*4)+(ridx3*784)+3)]);
      var val1_13 = f32(data1[((gidx1*4)+(ridx3*784)+199)]);
      var val1_14 = f32(data1[((gidx1*4)+(ridx3*784)+395)]);
      var val1_15 = f32(data1[((gidx1*4)+(ridx3*784)+591)]);
      var val2_0 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+480)]);
      var val2_5 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+481)]);
      var val2_6 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+482)]);
      var val2_7 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+483)]);
      var val2_8 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+960)]);
      var val2_9 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+961)]);
      var val2_10 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+962)]);
      var val2_11 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+963)]);
      var val2_12 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+1440)]);
      var val2_13 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+1441)]);
      var val2_14 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+1442)]);
      var val2_15 = f32(data2[((gidx0*7680)+(lidx2*1920)+(ridx3*4)+1443)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
      acc0_12 = fma(val1_0,val2_12,acc0_12);
      acc0_12 = fma(val1_1,val2_13,acc0_12);
      acc0_12 = fma(val1_2,val2_14,acc0_12);
      acc0_12 = fma(val1_3,val2_15,acc0_12);
      acc0_13 = fma(val1_4,val2_12,acc0_13);
      acc0_13 = fma(val1_5,val2_13,acc0_13);
      acc0_13 = fma(val1_6,val2_14,acc0_13);
      acc0_13 = fma(val1_7,val2_15,acc0_13);
      acc0_14 = fma(val1_8,val2_12,acc0_14);
      acc0_14 = fma(val1_9,val2_13,acc0_14);
      acc0_14 = fma(val1_10,val2_14,acc0_14);
      acc0_14 = fma(val1_11,val2_15,acc0_14);
      acc0_15 = fma(val1_12,val2_12,acc0_15);
      acc0_15 = fma(val1_13,val2_13,acc0_15);
      acc0_15 = fma(val1_14,val2_14,acc0_15);
      acc0_15 = fma(val1_15,val2_15,acc0_15);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*16)+(lidx2*4))]);
    var val3_1 = f32(data3[((gidx0*16)+(lidx2*4)+1)]);
    var val3_2 = f32(data3[((gidx0*16)+(lidx2*4)+2)]);
    var val3_3 = f32(data3[((gidx0*16)+(lidx2*4)+3)]);
    var val4_0 = f32(data4[((gidx0*16)+(lidx2*4))]);
    var val4_1 = f32(data4[((gidx0*16)+(lidx2*4)+1)]);
    var val4_2 = f32(data4[((gidx0*16)+(lidx2*4)+2)]);
    var val4_3 = f32(data4[((gidx0*16)+(lidx2*4)+3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*16)+(lidx2*4))]);
    var val6_1 = f32(data6[((gidx0*16)+(lidx2*4)+1)]);
    var val6_2 = f32(data6[((gidx0*16)+(lidx2*4)+2)]);
    var val6_3 = f32(data6[((gidx0*16)+(lidx2*4)+3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*16)+(lidx2*4))]);
    var val8_1 = f32(data8[((gidx0*16)+(lidx2*4)+1)]);
    var val8_2 = f32(data8[((gidx0*16)+(lidx2*4)+2)]);
    var val8_3 = f32(data8[((gidx0*16)+(lidx2*4)+3)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (acc0_12-val3_3);
    var alu13 = (acc0_13-val3_3);
    var alu14 = (acc0_14-val3_3);
    var alu15 = (acc0_15-val3_3);
    var alu16 = (alu0*val4_0);
    var alu17 = (alu1*val4_0);
    var alu18 = (alu2*val4_0);
    var alu19 = (alu3*val4_0);
    var alu20 = (alu4*val4_1);
    var alu21 = (alu5*val4_1);
    var alu22 = (alu6*val4_1);
    var alu23 = (alu7*val4_1);
    var alu24 = (alu8*val4_2);
    var alu25 = (alu9*val4_2);
    var alu26 = (alu10*val4_2);
    var alu27 = (alu11*val4_2);
    var alu28 = (alu12*val4_3);
    var alu29 = (alu13*val4_3);
    var alu30 = (alu14*val4_3);
    var alu31 = (alu15*val4_3);
    var alu32 = (val7_0+val6_0);
    var alu33 = (val7_0+val6_0);
    var alu34 = (val7_0+val6_0);
    var alu35 = (val7_0+val6_0);
    var alu36 = (val7_0+val6_1);
    var alu37 = (val7_0+val6_1);
    var alu38 = (val7_0+val6_1);
    var alu39 = (val7_0+val6_1);
    var alu40 = (val7_0+val6_2);
    var alu41 = (val7_0+val6_2);
    var alu42 = (val7_0+val6_2);
    var alu43 = (val7_0+val6_2);
    var alu44 = (val7_0+val6_3);
    var alu45 = (val7_0+val6_3);
    var alu46 = (val7_0+val6_3);
    var alu47 = (val7_0+val6_3);
    var alu48 = (val5_0/alu32);
    var alu49 = (val5_0/alu33);
    var alu50 = (val5_0/alu34);
    var alu51 = (val5_0/alu35);
    var alu52 = (val5_0/alu36);
    var alu53 = (val5_0/alu37);
    var alu54 = (val5_0/alu38);
    var alu55 = (val5_0/alu39);
    var alu56 = (val5_0/alu40);
    var alu57 = (val5_0/alu41);
    var alu58 = (val5_0/alu42);
    var alu59 = (val5_0/alu43);
    var alu60 = (val5_0/alu44);
    var alu61 = (val5_0/alu45);
    var alu62 = (val5_0/alu46);
    var alu63 = (val5_0/alu47);
    var alu64 = sqrt(alu48);
    var alu65 = sqrt(alu49);
    var alu66 = sqrt(alu50);
    var alu67 = sqrt(alu51);
    var alu68 = sqrt(alu52);
    var alu69 = sqrt(alu53);
    var alu70 = sqrt(alu54);
    var alu71 = sqrt(alu55);
    var alu72 = sqrt(alu56);
    var alu73 = sqrt(alu57);
    var alu74 = sqrt(alu58);
    var alu75 = sqrt(alu59);
    var alu76 = sqrt(alu60);
    var alu77 = sqrt(alu61);
    var alu78 = sqrt(alu62);
    var alu79 = sqrt(alu63);
    var alu80 = (alu16*alu64);
    var alu81 = (alu17*alu65);
    var alu82 = (alu18*alu66);
    var alu83 = (alu19*alu67);
    var alu84 = (alu20*alu68);
    var alu85 = (alu21*alu69);
    var alu86 = (alu22*alu70);
    var alu87 = (alu23*alu71);
    var alu88 = (alu24*alu72);
    var alu89 = (alu25*alu73);
    var alu90 = (alu26*alu74);
    var alu91 = (alu27*alu75);
    var alu92 = (alu28*alu76);
    var alu93 = (alu29*alu77);
    var alu94 = (alu30*alu78);
    var alu95 = (alu31*alu79);
    var alu96 = (alu80+val8_0);
    var alu97 = (alu81+val8_0);
    var alu98 = (alu82+val8_0);
    var alu99 = (alu83+val8_0);
    var alu100 = (alu84+val8_1);
    var alu101 = (alu85+val8_1);
    var alu102 = (alu86+val8_1);
    var alu103 = (alu87+val8_1);
    var alu104 = (alu88+val8_2);
    var alu105 = (alu89+val8_2);
    var alu106 = (alu90+val8_2);
    var alu107 = (alu91+val8_2);
    var alu108 = (alu92+val8_3);
    var alu109 = (alu93+val8_3);
    var alu110 = (alu94+val8_3);
    var alu111 = (alu95+val8_3);
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784))] = alu96;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+1)] = alu97;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+2)] = alu98;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+3)] = alu99;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+196)] = alu100;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+197)] = alu101;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+198)] = alu102;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+199)] = alu103;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+392)] = alu104;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+393)] = alu105;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+394)] = alu106;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+395)] = alu107;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+588)] = alu108;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+589)] = alu109;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+590)] = alu110;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+591)] = alu111;
  }}} /* global+local */
}`;

const r_7_49_32_28_4_4_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 7 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 27; ridx3++) {
      var val1_0 = f32(data1[((gidx1*4)+(ridx3*784))]);
      var val1_1 = f32(data1[((gidx1*4)+(ridx3*784)+196)]);
      var val1_2 = f32(data1[((gidx1*4)+(ridx3*784)+392)]);
      var val1_3 = f32(data1[((gidx1*4)+(ridx3*784)+588)]);
      var val1_4 = f32(data1[((gidx1*4)+(ridx3*784)+1)]);
      var val1_5 = f32(data1[((gidx1*4)+(ridx3*784)+197)]);
      var val1_6 = f32(data1[((gidx1*4)+(ridx3*784)+393)]);
      var val1_7 = f32(data1[((gidx1*4)+(ridx3*784)+589)]);
      var val1_8 = f32(data1[((gidx1*4)+(ridx3*784)+2)]);
      var val1_9 = f32(data1[((gidx1*4)+(ridx3*784)+198)]);
      var val1_10 = f32(data1[((gidx1*4)+(ridx3*784)+394)]);
      var val1_11 = f32(data1[((gidx1*4)+(ridx3*784)+590)]);
      var val1_12 = f32(data1[((gidx1*4)+(ridx3*784)+3)]);
      var val1_13 = f32(data1[((gidx1*4)+(ridx3*784)+199)]);
      var val1_14 = f32(data1[((gidx1*4)+(ridx3*784)+395)]);
      var val1_15 = f32(data1[((gidx1*4)+(ridx3*784)+591)]);
      var val2_0 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+112)]);
      var val2_5 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+113)]);
      var val2_6 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+114)]);
      var val2_7 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+115)]);
      var val2_8 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+224)]);
      var val2_9 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+225)]);
      var val2_10 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+226)]);
      var val2_11 = f32(data2[((gidx0*10752)+(lidx2*336)+(ridx3*4)+227)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx2*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx2*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx2*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx2*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx2*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx2*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx2*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx2*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx2*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx2*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx2*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx2*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (alu0*val4_0);
    var alu13 = (alu1*val4_0);
    var alu14 = (alu2*val4_0);
    var alu15 = (alu3*val4_0);
    var alu16 = (alu4*val4_1);
    var alu17 = (alu5*val4_1);
    var alu18 = (alu6*val4_1);
    var alu19 = (alu7*val4_1);
    var alu20 = (alu8*val4_2);
    var alu21 = (alu9*val4_2);
    var alu22 = (alu10*val4_2);
    var alu23 = (alu11*val4_2);
    var alu24 = (val7_0+val6_0);
    var alu25 = (val7_0+val6_0);
    var alu26 = (val7_0+val6_0);
    var alu27 = (val7_0+val6_0);
    var alu28 = (val7_0+val6_1);
    var alu29 = (val7_0+val6_1);
    var alu30 = (val7_0+val6_1);
    var alu31 = (val7_0+val6_1);
    var alu32 = (val7_0+val6_2);
    var alu33 = (val7_0+val6_2);
    var alu34 = (val7_0+val6_2);
    var alu35 = (val7_0+val6_2);
    var alu36 = (val5_0/alu24);
    var alu37 = (val5_0/alu25);
    var alu38 = (val5_0/alu26);
    var alu39 = (val5_0/alu27);
    var alu40 = (val5_0/alu28);
    var alu41 = (val5_0/alu29);
    var alu42 = (val5_0/alu30);
    var alu43 = (val5_0/alu31);
    var alu44 = (val5_0/alu32);
    var alu45 = (val5_0/alu33);
    var alu46 = (val5_0/alu34);
    var alu47 = (val5_0/alu35);
    var alu48 = sqrt(alu36);
    var alu49 = sqrt(alu37);
    var alu50 = sqrt(alu38);
    var alu51 = sqrt(alu39);
    var alu52 = sqrt(alu40);
    var alu53 = sqrt(alu41);
    var alu54 = sqrt(alu42);
    var alu55 = sqrt(alu43);
    var alu56 = sqrt(alu44);
    var alu57 = sqrt(alu45);
    var alu58 = sqrt(alu46);
    var alu59 = sqrt(alu47);
    var alu60 = (alu12*alu48);
    var alu61 = (alu13*alu49);
    var alu62 = (alu14*alu50);
    var alu63 = (alu15*alu51);
    var alu64 = (alu16*alu52);
    var alu65 = (alu17*alu53);
    var alu66 = (alu18*alu54);
    var alu67 = (alu19*alu55);
    var alu68 = (alu20*alu56);
    var alu69 = (alu21*alu57);
    var alu70 = (alu22*alu58);
    var alu71 = (alu23*alu59);
    var alu72 = (alu60+val8_0);
    var alu73 = (alu61+val8_0);
    var alu74 = (alu62+val8_0);
    var alu75 = (alu63+val8_0);
    var alu76 = (alu64+val8_1);
    var alu77 = (alu65+val8_1);
    var alu78 = (alu66+val8_1);
    var alu79 = (alu67+val8_1);
    var alu80 = (alu68+val8_2);
    var alu81 = (alu69+val8_2);
    var alu82 = (alu70+val8_2);
    var alu83 = (alu71+val8_2);
    var alu84 = (val5_0/alu24);
    var alu85 = (val5_0/alu25);
    var alu86 = (val5_0/alu26);
    var alu87 = (val5_0/alu27);
    var alu88 = (val5_0/alu28);
    var alu89 = (val5_0/alu29);
    var alu90 = (val5_0/alu30);
    var alu91 = (val5_0/alu31);
    var alu92 = (val5_0/alu32);
    var alu93 = (val5_0/alu33);
    var alu94 = (val5_0/alu34);
    var alu95 = (val5_0/alu35);
    var alu96 = sqrt(alu84);
    var alu97 = sqrt(alu85);
    var alu98 = sqrt(alu86);
    var alu99 = sqrt(alu87);
    var alu100 = sqrt(alu88);
    var alu101 = sqrt(alu89);
    var alu102 = sqrt(alu90);
    var alu103 = sqrt(alu91);
    var alu104 = sqrt(alu92);
    var alu105 = sqrt(alu93);
    var alu106 = sqrt(alu94);
    var alu107 = sqrt(alu95);
    var alu108 = (alu12*alu96);
    var alu109 = (alu13*alu97);
    var alu110 = (alu14*alu98);
    var alu111 = (alu15*alu99);
    var alu112 = (alu16*alu100);
    var alu113 = (alu17*alu101);
    var alu114 = (alu18*alu102);
    var alu115 = (alu19*alu103);
    var alu116 = (alu20*alu104);
    var alu117 = (alu21*alu105);
    var alu118 = (alu22*alu106);
    var alu119 = (alu23*alu107);
    var alu120 = (alu108+val8_0);
    var alu121 = (alu109+val8_0);
    var alu122 = (alu110+val8_0);
    var alu123 = (alu111+val8_0);
    var alu124 = (alu112+val8_1);
    var alu125 = (alu113+val8_1);
    var alu126 = (alu114+val8_1);
    var alu127 = (alu115+val8_1);
    var alu128 = (alu116+val8_2);
    var alu129 = (alu117+val8_2);
    var alu130 = (alu118+val8_2);
    var alu131 = (alu119+val8_2);
    var alu132 = (alu120*val11_0);
    var alu133 = (alu121*val11_0);
    var alu134 = (alu122*val11_0);
    var alu135 = (alu123*val11_0);
    var alu136 = (alu124*val11_0);
    var alu137 = (alu125*val11_0);
    var alu138 = (alu126*val11_0);
    var alu139 = (alu127*val11_0);
    var alu140 = (alu128*val11_0);
    var alu141 = (alu129*val11_0);
    var alu142 = (alu130*val11_0);
    var alu143 = (alu131*val11_0);
    var alu144 = exp2(alu132);
    var alu145 = exp2(alu133);
    var alu146 = exp2(alu134);
    var alu147 = exp2(alu135);
    var alu148 = exp2(alu136);
    var alu149 = exp2(alu137);
    var alu150 = exp2(alu138);
    var alu151 = exp2(alu139);
    var alu152 = exp2(alu140);
    var alu153 = exp2(alu141);
    var alu154 = exp2(alu142);
    var alu155 = exp2(alu143);
    var alu156 = (val10_0+alu144);
    var alu157 = (val10_0+alu145);
    var alu158 = (val10_0+alu146);
    var alu159 = (val10_0+alu147);
    var alu160 = (val10_0+alu148);
    var alu161 = (val10_0+alu149);
    var alu162 = (val10_0+alu150);
    var alu163 = (val10_0+alu151);
    var alu164 = (val10_0+alu152);
    var alu165 = (val10_0+alu153);
    var alu166 = (val10_0+alu154);
    var alu167 = (val10_0+alu155);
    var alu168 = (val9_0/alu156);
    var alu169 = (val9_0/alu157);
    var alu170 = (val9_0/alu158);
    var alu171 = (val9_0/alu159);
    var alu172 = (val9_0/alu160);
    var alu173 = (val9_0/alu161);
    var alu174 = (val9_0/alu162);
    var alu175 = (val9_0/alu163);
    var alu176 = (val9_0/alu164);
    var alu177 = (val9_0/alu165);
    var alu178 = (val9_0/alu166);
    var alu179 = (val9_0/alu167);
    var alu180 = (alu72*alu168);
    var alu181 = (alu73*alu169);
    var alu182 = (alu74*alu170);
    var alu183 = (alu75*alu171);
    var alu184 = (alu76*alu172);
    var alu185 = (alu77*alu173);
    var alu186 = (alu78*alu174);
    var alu187 = (alu79*alu175);
    var alu188 = (alu80*alu176);
    var alu189 = (alu81*alu177);
    var alu190 = (alu82*alu178);
    var alu191 = (alu83*alu179);
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588))] = alu180;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+1)] = alu181;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+2)] = alu182;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+3)] = alu183;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+196)] = alu184;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+197)] = alu185;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+198)] = alu186;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+199)] = alu187;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+392)] = alu188;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+393)] = alu189;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+394)] = alu190;
    data0[((gidx0*18816)+(gidx1*4)+(lidx2*588)+395)] = alu191;
  }}} /* global+local */
}`;

const r_21_14_14_32_5_5 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 21 */
{ let gidx1 = i32(gindex.y);  /* 14 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 4; ridx4++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+(ridx4*14)+-30+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16)&&((gidx2*-1)<-1))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+(ridx4*14)+-29+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<16))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+(ridx4*14)+-28+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+(ridx4*14)+-27+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*14)+(lidx3*196)+(ridx4*14)+-26+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val2_0 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5))]);
      var val2_1 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+1)]);
      var val2_2 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+2)]);
      var val2_3 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+3)]);
      var val2_4 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+4)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
    } /* reduce */
    data0[((gidx0*6272)+(gidx1*14)+(lidx3*196)+gidx2)] = acc0_0;
  }}}} /* global+local */
}`;

const r_21_32_49_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 21 */
  { let lidx1 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 48; ridx2++) {
      var val1_0 = f32(data1[((gidx0*6272)+(lidx1*196)+(ridx2*4))]);
      var val1_1 = f32(data1[((gidx0*6272)+(lidx1*196)+(ridx2*4)+1)]);
      var val1_2 = f32(data1[((gidx0*6272)+(lidx1*196)+(ridx2*4)+2)]);
      var val1_3 = f32(data1[((gidx0*6272)+(lidx1*196)+(ridx2*4)+3)]);
      var val2_0 = f32(data2[((gidx0*32)+lidx1)]);
      var val3_0 = f32(data3[((gidx0*32)+lidx1)]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[((gidx0*32)+lidx1)]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[((gidx0*32)+lidx1)]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (val1_1-val2_0);
      var alu2 = (val1_2-val2_0);
      var alu3 = (val1_3-val2_0);
      var alu4 = (alu0*val3_0);
      var alu5 = (alu1*val3_0);
      var alu6 = (alu2*val3_0);
      var alu7 = (alu3*val3_0);
      var alu8 = (val6_0+val5_0);
      var alu9 = (val6_0+val5_0);
      var alu10 = (val6_0+val5_0);
      var alu11 = (val6_0+val5_0);
      var alu12 = (val4_0/alu8);
      var alu13 = (val4_0/alu9);
      var alu14 = (val4_0/alu10);
      var alu15 = (val4_0/alu11);
      var alu16 = sqrt(alu12);
      var alu17 = sqrt(alu13);
      var alu18 = sqrt(alu14);
      var alu19 = sqrt(alu15);
      var alu20 = (alu4*alu16);
      var alu21 = (alu5*alu17);
      var alu22 = (alu6*alu18);
      var alu23 = (alu7*alu19);
      var alu24 = (alu20+val7_0);
      var alu25 = (alu21+val7_0);
      var alu26 = (alu22+val7_0);
      var alu27 = (alu23+val7_0);
      var alu28 = (alu24*val10_0);
      var alu29 = (alu25*val10_0);
      var alu30 = (alu26*val10_0);
      var alu31 = (alu27*val10_0);
      var alu32 = exp2(alu28);
      var alu33 = exp2(alu29);
      var alu34 = exp2(alu30);
      var alu35 = exp2(alu31);
      var alu36 = (val9_0+alu32);
      var alu37 = (val9_0+alu33);
      var alu38 = (val9_0+alu34);
      var alu39 = (val9_0+alu35);
      var alu40 = (val8_0/alu36);
      var alu41 = (val8_0/alu37);
      var alu42 = (val8_0/alu38);
      var alu43 = (val8_0/alu39);
      acc0_0 = fma(alu24,alu40,acc0_0);
      acc0_0 = fma(alu25,alu41,acc0_0);
      acc0_0 = fma(alu26,alu42,acc0_0);
      acc0_0 = fma(alu27,alu43,acc0_0);
    } /* reduce */
    var val11_0 = 0.00510204081632653f;
    var alu44 = (acc0_0*val11_0);
    data0[((gidx0*32)+lidx1)] = alu44;
  }} /* global+local */
}`;

const r_28_16_42 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 28 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 41; ridx2++) {
      var val1_0 = f32(data1[((lidx1*42)+ridx2)]);
      var val2_0 = f32(data2[((gidx0*672)+(lidx1*42)+ridx2)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val3_0 = f32(data3[gidx0]);
    var val4_0 = 1.0f;
    var val5_0 = 1.0f;
    var val6_0 = -1.4426950408889634f;
    var alu0 = (accm1_0+val3_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val5_0+alu2);
    var alu4 = (val4_0/alu3);
    var alu5 = (alu0*alu4);
    data0[gidx0] = alu5;
  }} /* local */
} /* global */
}`;

const r_21_32_28 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data3: array<f32>;
@group(0) @binding(2) var<storage,read_write> data4: array<f32>;
@group(0) @binding(3) var<storage,read_write> data5: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 21 */
  { let lidx1 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
      var val3_0 = f32(data3[0]);
      var val3_1 = f32(data3[1]);
      var val3_2 = f32(data3[2]);
      var val3_3 = f32(data3[3]);
      var val3_4 = f32(data3[4]);
      var val3_5 = f32(data3[5]);
      var val3_6 = f32(data3[6]);
      var val3_7 = f32(data3[7]);
      var val3_8 = f32(data3[8]);
      var val3_9 = f32(data3[9]);
      var val3_10 = f32(data3[10]);
      var val3_11 = f32(data3[11]);
      var val3_12 = f32(data3[12]);
      var val3_13 = f32(data3[13]);
      var val3_14 = f32(data3[14]);
      var val3_15 = f32(data3[15]);
      var val3_16 = f32(data3[16]);
      var val3_17 = f32(data3[17]);
      var val3_18 = f32(data3[18]);
      var val3_19 = f32(data3[19]);
      var val3_20 = f32(data3[20]);
      var val3_21 = f32(data3[21]);
      var val3_22 = f32(data3[22]);
      var val3_23 = f32(data3[23]);
      var val3_24 = f32(data3[24]);
      var val3_25 = f32(data3[25]);
      var val3_26 = f32(data3[26]);
      var val3_27 = f32(data3[27]);
      var val4_0 = f32(data4[((gidx0*896)+(lidx1*28))]);
      var val4_1 = f32(data4[((gidx0*896)+(lidx1*28)+1)]);
      var val4_2 = f32(data4[((gidx0*896)+(lidx1*28)+2)]);
      var val4_3 = f32(data4[((gidx0*896)+(lidx1*28)+3)]);
      var val4_4 = f32(data4[((gidx0*896)+(lidx1*28)+4)]);
      var val4_5 = f32(data4[((gidx0*896)+(lidx1*28)+5)]);
      var val4_6 = f32(data4[((gidx0*896)+(lidx1*28)+6)]);
      var val4_7 = f32(data4[((gidx0*896)+(lidx1*28)+7)]);
      var val4_8 = f32(data4[((gidx0*896)+(lidx1*28)+8)]);
      var val4_9 = f32(data4[((gidx0*896)+(lidx1*28)+9)]);
      var val4_10 = f32(data4[((gidx0*896)+(lidx1*28)+10)]);
      var val4_11 = f32(data4[((gidx0*896)+(lidx1*28)+11)]);
      var val4_12 = f32(data4[((gidx0*896)+(lidx1*28)+12)]);
      var val4_13 = f32(data4[((gidx0*896)+(lidx1*28)+13)]);
      var val4_14 = f32(data4[((gidx0*896)+(lidx1*28)+14)]);
      var val4_15 = f32(data4[((gidx0*896)+(lidx1*28)+15)]);
      var val4_16 = f32(data4[((gidx0*896)+(lidx1*28)+16)]);
      var val4_17 = f32(data4[((gidx0*896)+(lidx1*28)+17)]);
      var val4_18 = f32(data4[((gidx0*896)+(lidx1*28)+18)]);
      var val4_19 = f32(data4[((gidx0*896)+(lidx1*28)+19)]);
      var val4_20 = f32(data4[((gidx0*896)+(lidx1*28)+20)]);
      var val4_21 = f32(data4[((gidx0*896)+(lidx1*28)+21)]);
      var val4_22 = f32(data4[((gidx0*896)+(lidx1*28)+22)]);
      var val4_23 = f32(data4[((gidx0*896)+(lidx1*28)+23)]);
      var val4_24 = f32(data4[((gidx0*896)+(lidx1*28)+24)]);
      var val4_25 = f32(data4[((gidx0*896)+(lidx1*28)+25)]);
      var val4_26 = f32(data4[((gidx0*896)+(lidx1*28)+26)]);
      var val4_27 = f32(data4[((gidx0*896)+(lidx1*28)+27)]);
      acc0_0 = fma(val3_0,val4_0,acc0_0);
      acc0_0 = fma(val3_1,val4_1,acc0_0);
      acc0_0 = fma(val3_2,val4_2,acc0_0);
      acc0_0 = fma(val3_3,val4_3,acc0_0);
      acc0_0 = fma(val3_4,val4_4,acc0_0);
      acc0_0 = fma(val3_5,val4_5,acc0_0);
      acc0_0 = fma(val3_6,val4_6,acc0_0);
      acc0_0 = fma(val3_7,val4_7,acc0_0);
      acc0_0 = fma(val3_8,val4_8,acc0_0);
      acc0_0 = fma(val3_9,val4_9,acc0_0);
      acc0_0 = fma(val3_10,val4_10,acc0_0);
      acc0_0 = fma(val3_11,val4_11,acc0_0);
      acc0_0 = fma(val3_12,val4_12,acc0_0);
      acc0_0 = fma(val3_13,val4_13,acc0_0);
      acc0_0 = fma(val3_14,val4_14,acc0_0);
      acc0_0 = fma(val3_15,val4_15,acc0_0);
      acc0_0 = fma(val3_16,val4_16,acc0_0);
      acc0_0 = fma(val3_17,val4_17,acc0_0);
      acc0_0 = fma(val3_18,val4_18,acc0_0);
      acc0_0 = fma(val3_19,val4_19,acc0_0);
      acc0_0 = fma(val3_20,val4_20,acc0_0);
      acc0_0 = fma(val3_21,val4_21,acc0_0);
      acc0_0 = fma(val3_22,val4_22,acc0_0);
      acc0_0 = fma(val3_23,val4_23,acc0_0);
      acc0_0 = fma(val3_24,val4_24,acc0_0);
      acc0_0 = fma(val3_25,val4_25,acc0_0);
      acc0_0 = fma(val3_26,val4_26,acc0_0);
      acc0_0 = fma(val3_27,val4_27,acc0_0);
     /* reduce */
    var val1_0 = 1.0f;
    var val2_0 = 1.0f;
    var val5_0 = f32(data5[((gidx0*32)+lidx1)]);
    var val6_0 = -1.4426950408889634f;
    var alu0 = (acc0_0+val5_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val2_0+alu2);
    var alu4 = (val1_0/alu3);
    data0[((gidx0*32)+lidx1)] = alu4;
  }} /* global+local */
}`;

const r_7_14_14_32_5_5_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 7 */
{ let gidx1 = i32(gindex.y);  /* 14 */
{ let gidx2 = i32(gindex.x);  /* 14 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 4; ridx4++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+-30+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16)&&((gidx2*-1)<-1))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+-29+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<16))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+-28+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+-27+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+-26+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+166+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16)&&((gidx2*-1)<-1))));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+167+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<16))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+168+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16))));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+169+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+170+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_10 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+362+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16)&&((gidx2*-1)<-1))));
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+363+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<16))));
      var val1_12 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+364+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<16))));
      var val1_13 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+365+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*14)+(lidx3*588)+(ridx4*14)+366+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<16)&&((gidx1+ridx4)<16))));
      var val2_0 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5))]);
      var val2_1 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+1)]);
      var val2_2 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+2)]);
      var val2_3 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+3)]);
      var val2_4 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+4)]);
      var val2_5 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+25)]);
      var val2_6 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+26)]);
      var val2_7 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+27)]);
      var val2_8 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+28)]);
      var val2_9 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+29)]);
      var val2_10 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+50)]);
      var val2_11 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+51)]);
      var val2_12 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+52)]);
      var val2_13 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+53)]);
      var val2_14 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+54)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_1 = fma(val1_5,val2_5,acc0_1);
      acc0_1 = fma(val1_6,val2_6,acc0_1);
      acc0_1 = fma(val1_7,val2_7,acc0_1);
      acc0_1 = fma(val1_8,val2_8,acc0_1);
      acc0_1 = fma(val1_9,val2_9,acc0_1);
      acc0_2 = fma(val1_10,val2_10,acc0_2);
      acc0_2 = fma(val1_11,val2_11,acc0_2);
      acc0_2 = fma(val1_12,val2_12,acc0_2);
      acc0_2 = fma(val1_13,val2_13,acc0_2);
      acc0_2 = fma(val1_14,val2_14,acc0_2);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx3*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx3*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx3*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx3*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx3*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx3*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx3*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx3*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx3*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx3*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx3*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx3*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*96)+(lidx3*3))]);
    var val12_1 = f32(data12[((gidx0*96)+(lidx3*3)+1)]);
    var val12_2 = f32(data12[((gidx0*96)+(lidx3*3)+2)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (alu0*val4_0);
    var alu4 = (alu1*val4_1);
    var alu5 = (alu2*val4_2);
    var alu6 = (val7_0+val6_0);
    var alu7 = (val7_0+val6_1);
    var alu8 = (val7_0+val6_2);
    var alu9 = (val5_0/alu6);
    var alu10 = (val5_0/alu7);
    var alu11 = (val5_0/alu8);
    var alu12 = sqrt(alu9);
    var alu13 = sqrt(alu10);
    var alu14 = sqrt(alu11);
    var alu15 = (alu3*alu12);
    var alu16 = (alu4*alu13);
    var alu17 = (alu5*alu14);
    var alu18 = (alu15+val8_0);
    var alu19 = (alu16+val8_1);
    var alu20 = (alu17+val8_2);
    var alu21 = (val5_0/alu6);
    var alu22 = (val5_0/alu7);
    var alu23 = (val5_0/alu8);
    var alu24 = sqrt(alu21);
    var alu25 = sqrt(alu22);
    var alu26 = sqrt(alu23);
    var alu27 = (alu3*alu24);
    var alu28 = (alu4*alu25);
    var alu29 = (alu5*alu26);
    var alu30 = (alu27+val8_0);
    var alu31 = (alu28+val8_1);
    var alu32 = (alu29+val8_2);
    var alu33 = (alu30*val11_0);
    var alu34 = (alu31*val11_0);
    var alu35 = (alu32*val11_0);
    var alu36 = exp2(alu33);
    var alu37 = exp2(alu34);
    var alu38 = exp2(alu35);
    var alu39 = (val10_0+alu36);
    var alu40 = (val10_0+alu37);
    var alu41 = (val10_0+alu38);
    var alu42 = (val9_0/alu39);
    var alu43 = (val9_0/alu40);
    var alu44 = (val9_0/alu41);
    var alu45 = (alu18*alu42);
    var alu46 = (alu19*alu43);
    var alu47 = (alu20*alu44);
    var alu48 = (alu45*val12_0);
    var alu49 = (alu46*val12_1);
    var alu50 = (alu47*val12_2);
    data0[((gidx0*18816)+(gidx1*14)+(lidx3*588)+gidx2)] = alu48;
    data0[((gidx0*18816)+(gidx1*14)+(lidx3*588)+196+gidx2)] = alu49;
    data0[((gidx0*18816)+(gidx1*14)+(lidx3*588)+392+gidx2)] = alu50;
  }}}} /* global+local */
}`;

const r_7_49_4_168_4_4_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data9: array<f32>;
@compute @workgroup_size(4) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 7 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 4 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    var acc0_4 = 0.0f;
    var acc0_5 = 0.0f;
    var acc0_6 = 0.0f;
    var acc0_7 = 0.0f;
    var acc0_8 = 0.0f;
    var acc0_9 = 0.0f;
    var acc0_10 = 0.0f;
    var acc0_11 = 0.0f;
    var acc0_12 = 0.0f;
    var acc0_13 = 0.0f;
    var acc0_14 = 0.0f;
    var acc0_15 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 167; ridx3++) {
      var val1_0 = f32(data1[((gidx1*4)+(ridx3*784))]);
      var val1_1 = f32(data1[((gidx1*4)+(ridx3*784)+196)]);
      var val1_2 = f32(data1[((gidx1*4)+(ridx3*784)+392)]);
      var val1_3 = f32(data1[((gidx1*4)+(ridx3*784)+588)]);
      var val1_4 = f32(data1[((gidx1*4)+(ridx3*784)+1)]);
      var val1_5 = f32(data1[((gidx1*4)+(ridx3*784)+197)]);
      var val1_6 = f32(data1[((gidx1*4)+(ridx3*784)+393)]);
      var val1_7 = f32(data1[((gidx1*4)+(ridx3*784)+589)]);
      var val1_8 = f32(data1[((gidx1*4)+(ridx3*784)+2)]);
      var val1_9 = f32(data1[((gidx1*4)+(ridx3*784)+198)]);
      var val1_10 = f32(data1[((gidx1*4)+(ridx3*784)+394)]);
      var val1_11 = f32(data1[((gidx1*4)+(ridx3*784)+590)]);
      var val1_12 = f32(data1[((gidx1*4)+(ridx3*784)+3)]);
      var val1_13 = f32(data1[((gidx1*4)+(ridx3*784)+199)]);
      var val1_14 = f32(data1[((gidx1*4)+(ridx3*784)+395)]);
      var val1_15 = f32(data1[((gidx1*4)+(ridx3*784)+591)]);
      var val2_0 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+672)]);
      var val2_5 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+673)]);
      var val2_6 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+674)]);
      var val2_7 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+675)]);
      var val2_8 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+1344)]);
      var val2_9 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+1345)]);
      var val2_10 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+1346)]);
      var val2_11 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+1347)]);
      var val2_12 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+2016)]);
      var val2_13 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+2017)]);
      var val2_14 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+2018)]);
      var val2_15 = f32(data2[((gidx0*10752)+(lidx2*2688)+(ridx3*4)+2019)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_4,val2_0,acc0_1);
      acc0_1 = fma(val1_5,val2_1,acc0_1);
      acc0_1 = fma(val1_6,val2_2,acc0_1);
      acc0_1 = fma(val1_7,val2_3,acc0_1);
      acc0_2 = fma(val1_8,val2_0,acc0_2);
      acc0_2 = fma(val1_9,val2_1,acc0_2);
      acc0_2 = fma(val1_10,val2_2,acc0_2);
      acc0_2 = fma(val1_11,val2_3,acc0_2);
      acc0_3 = fma(val1_12,val2_0,acc0_3);
      acc0_3 = fma(val1_13,val2_1,acc0_3);
      acc0_3 = fma(val1_14,val2_2,acc0_3);
      acc0_3 = fma(val1_15,val2_3,acc0_3);
      acc0_4 = fma(val1_0,val2_4,acc0_4);
      acc0_4 = fma(val1_1,val2_5,acc0_4);
      acc0_4 = fma(val1_2,val2_6,acc0_4);
      acc0_4 = fma(val1_3,val2_7,acc0_4);
      acc0_5 = fma(val1_4,val2_4,acc0_5);
      acc0_5 = fma(val1_5,val2_5,acc0_5);
      acc0_5 = fma(val1_6,val2_6,acc0_5);
      acc0_5 = fma(val1_7,val2_7,acc0_5);
      acc0_6 = fma(val1_8,val2_4,acc0_6);
      acc0_6 = fma(val1_9,val2_5,acc0_6);
      acc0_6 = fma(val1_10,val2_6,acc0_6);
      acc0_6 = fma(val1_11,val2_7,acc0_6);
      acc0_7 = fma(val1_12,val2_4,acc0_7);
      acc0_7 = fma(val1_13,val2_5,acc0_7);
      acc0_7 = fma(val1_14,val2_6,acc0_7);
      acc0_7 = fma(val1_15,val2_7,acc0_7);
      acc0_8 = fma(val1_0,val2_8,acc0_8);
      acc0_8 = fma(val1_1,val2_9,acc0_8);
      acc0_8 = fma(val1_2,val2_10,acc0_8);
      acc0_8 = fma(val1_3,val2_11,acc0_8);
      acc0_9 = fma(val1_4,val2_8,acc0_9);
      acc0_9 = fma(val1_5,val2_9,acc0_9);
      acc0_9 = fma(val1_6,val2_10,acc0_9);
      acc0_9 = fma(val1_7,val2_11,acc0_9);
      acc0_10 = fma(val1_8,val2_8,acc0_10);
      acc0_10 = fma(val1_9,val2_9,acc0_10);
      acc0_10 = fma(val1_10,val2_10,acc0_10);
      acc0_10 = fma(val1_11,val2_11,acc0_10);
      acc0_11 = fma(val1_12,val2_8,acc0_11);
      acc0_11 = fma(val1_13,val2_9,acc0_11);
      acc0_11 = fma(val1_14,val2_10,acc0_11);
      acc0_11 = fma(val1_15,val2_11,acc0_11);
      acc0_12 = fma(val1_0,val2_12,acc0_12);
      acc0_12 = fma(val1_1,val2_13,acc0_12);
      acc0_12 = fma(val1_2,val2_14,acc0_12);
      acc0_12 = fma(val1_3,val2_15,acc0_12);
      acc0_13 = fma(val1_4,val2_12,acc0_13);
      acc0_13 = fma(val1_5,val2_13,acc0_13);
      acc0_13 = fma(val1_6,val2_14,acc0_13);
      acc0_13 = fma(val1_7,val2_15,acc0_13);
      acc0_14 = fma(val1_8,val2_12,acc0_14);
      acc0_14 = fma(val1_9,val2_13,acc0_14);
      acc0_14 = fma(val1_10,val2_14,acc0_14);
      acc0_14 = fma(val1_11,val2_15,acc0_14);
      acc0_15 = fma(val1_12,val2_12,acc0_15);
      acc0_15 = fma(val1_13,val2_13,acc0_15);
      acc0_15 = fma(val1_14,val2_14,acc0_15);
      acc0_15 = fma(val1_15,val2_15,acc0_15);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*16)+(lidx2*4))]);
    var val3_1 = f32(data3[((gidx0*16)+(lidx2*4)+1)]);
    var val3_2 = f32(data3[((gidx0*16)+(lidx2*4)+2)]);
    var val3_3 = f32(data3[((gidx0*16)+(lidx2*4)+3)]);
    var val4_0 = f32(data4[((gidx0*16)+(lidx2*4))]);
    var val4_1 = f32(data4[((gidx0*16)+(lidx2*4)+1)]);
    var val4_2 = f32(data4[((gidx0*16)+(lidx2*4)+2)]);
    var val4_3 = f32(data4[((gidx0*16)+(lidx2*4)+3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*16)+(lidx2*4))]);
    var val6_1 = f32(data6[((gidx0*16)+(lidx2*4)+1)]);
    var val6_2 = f32(data6[((gidx0*16)+(lidx2*4)+2)]);
    var val6_3 = f32(data6[((gidx0*16)+(lidx2*4)+3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*16)+(lidx2*4))]);
    var val8_1 = f32(data8[((gidx0*16)+(lidx2*4)+1)]);
    var val8_2 = f32(data8[((gidx0*16)+(lidx2*4)+2)]);
    var val8_3 = f32(data8[((gidx0*16)+(lidx2*4)+3)]);
    var val9_0 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784))]);
    var val9_1 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+1)]);
    var val9_2 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+2)]);
    var val9_3 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+3)]);
    var val9_4 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+196)]);
    var val9_5 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+197)]);
    var val9_6 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+198)]);
    var val9_7 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+199)]);
    var val9_8 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+392)]);
    var val9_9 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+393)]);
    var val9_10 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+394)]);
    var val9_11 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+395)]);
    var val9_12 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+588)]);
    var val9_13 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+589)]);
    var val9_14 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+590)]);
    var val9_15 = f32(data9[((gidx0*3136)+(gidx1*4)+(lidx2*784)+591)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_0);
    var alu2 = (acc0_2-val3_0);
    var alu3 = (acc0_3-val3_0);
    var alu4 = (acc0_4-val3_1);
    var alu5 = (acc0_5-val3_1);
    var alu6 = (acc0_6-val3_1);
    var alu7 = (acc0_7-val3_1);
    var alu8 = (acc0_8-val3_2);
    var alu9 = (acc0_9-val3_2);
    var alu10 = (acc0_10-val3_2);
    var alu11 = (acc0_11-val3_2);
    var alu12 = (acc0_12-val3_3);
    var alu13 = (acc0_13-val3_3);
    var alu14 = (acc0_14-val3_3);
    var alu15 = (acc0_15-val3_3);
    var alu16 = (alu0*val4_0);
    var alu17 = (alu1*val4_0);
    var alu18 = (alu2*val4_0);
    var alu19 = (alu3*val4_0);
    var alu20 = (alu4*val4_1);
    var alu21 = (alu5*val4_1);
    var alu22 = (alu6*val4_1);
    var alu23 = (alu7*val4_1);
    var alu24 = (alu8*val4_2);
    var alu25 = (alu9*val4_2);
    var alu26 = (alu10*val4_2);
    var alu27 = (alu11*val4_2);
    var alu28 = (alu12*val4_3);
    var alu29 = (alu13*val4_3);
    var alu30 = (alu14*val4_3);
    var alu31 = (alu15*val4_3);
    var alu32 = (val7_0+val6_0);
    var alu33 = (val7_0+val6_0);
    var alu34 = (val7_0+val6_0);
    var alu35 = (val7_0+val6_0);
    var alu36 = (val7_0+val6_1);
    var alu37 = (val7_0+val6_1);
    var alu38 = (val7_0+val6_1);
    var alu39 = (val7_0+val6_1);
    var alu40 = (val7_0+val6_2);
    var alu41 = (val7_0+val6_2);
    var alu42 = (val7_0+val6_2);
    var alu43 = (val7_0+val6_2);
    var alu44 = (val7_0+val6_3);
    var alu45 = (val7_0+val6_3);
    var alu46 = (val7_0+val6_3);
    var alu47 = (val7_0+val6_3);
    var alu48 = (val5_0/alu32);
    var alu49 = (val5_0/alu33);
    var alu50 = (val5_0/alu34);
    var alu51 = (val5_0/alu35);
    var alu52 = (val5_0/alu36);
    var alu53 = (val5_0/alu37);
    var alu54 = (val5_0/alu38);
    var alu55 = (val5_0/alu39);
    var alu56 = (val5_0/alu40);
    var alu57 = (val5_0/alu41);
    var alu58 = (val5_0/alu42);
    var alu59 = (val5_0/alu43);
    var alu60 = (val5_0/alu44);
    var alu61 = (val5_0/alu45);
    var alu62 = (val5_0/alu46);
    var alu63 = (val5_0/alu47);
    var alu64 = sqrt(alu48);
    var alu65 = sqrt(alu49);
    var alu66 = sqrt(alu50);
    var alu67 = sqrt(alu51);
    var alu68 = sqrt(alu52);
    var alu69 = sqrt(alu53);
    var alu70 = sqrt(alu54);
    var alu71 = sqrt(alu55);
    var alu72 = sqrt(alu56);
    var alu73 = sqrt(alu57);
    var alu74 = sqrt(alu58);
    var alu75 = sqrt(alu59);
    var alu76 = sqrt(alu60);
    var alu77 = sqrt(alu61);
    var alu78 = sqrt(alu62);
    var alu79 = sqrt(alu63);
    var alu80 = (alu16*alu64);
    var alu81 = (alu17*alu65);
    var alu82 = (alu18*alu66);
    var alu83 = (alu19*alu67);
    var alu84 = (alu20*alu68);
    var alu85 = (alu21*alu69);
    var alu86 = (alu22*alu70);
    var alu87 = (alu23*alu71);
    var alu88 = (alu24*alu72);
    var alu89 = (alu25*alu73);
    var alu90 = (alu26*alu74);
    var alu91 = (alu27*alu75);
    var alu92 = (alu28*alu76);
    var alu93 = (alu29*alu77);
    var alu94 = (alu30*alu78);
    var alu95 = (alu31*alu79);
    var alu96 = (alu80+val8_0);
    var alu97 = (alu81+val8_0);
    var alu98 = (alu82+val8_0);
    var alu99 = (alu83+val8_0);
    var alu100 = (alu84+val8_1);
    var alu101 = (alu85+val8_1);
    var alu102 = (alu86+val8_1);
    var alu103 = (alu87+val8_1);
    var alu104 = (alu88+val8_2);
    var alu105 = (alu89+val8_2);
    var alu106 = (alu90+val8_2);
    var alu107 = (alu91+val8_2);
    var alu108 = (alu92+val8_3);
    var alu109 = (alu93+val8_3);
    var alu110 = (alu94+val8_3);
    var alu111 = (alu95+val8_3);
    var alu112 = (alu96+val9_0);
    var alu113 = (alu97+val9_1);
    var alu114 = (alu98+val9_2);
    var alu115 = (alu99+val9_3);
    var alu116 = (alu100+val9_4);
    var alu117 = (alu101+val9_5);
    var alu118 = (alu102+val9_6);
    var alu119 = (alu103+val9_7);
    var alu120 = (alu104+val9_8);
    var alu121 = (alu105+val9_9);
    var alu122 = (alu106+val9_10);
    var alu123 = (alu107+val9_11);
    var alu124 = (alu108+val9_12);
    var alu125 = (alu109+val9_13);
    var alu126 = (alu110+val9_14);
    var alu127 = (alu111+val9_15);
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784))] = alu112;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+1)] = alu113;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+2)] = alu114;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+3)] = alu115;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+196)] = alu116;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+197)] = alu117;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+198)] = alu118;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+199)] = alu119;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+392)] = alu120;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+393)] = alu121;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+394)] = alu122;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+395)] = alu123;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+588)] = alu124;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+589)] = alu125;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+590)] = alu126;
    data0[((gidx0*3136)+(gidx1*4)+(lidx2*784)+591)] = alu127;
  }}} /* global+local */
}`;

const r_21_7_7_32_5_5 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 21 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 4; ridx4++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*28)+(gidx2*2)+(lidx3*196)+(ridx4*14)+-15)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&((gidx2*-2)<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*28)+(gidx2*2)+(lidx3*196)+(ridx4*14)+-14)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*28)+(gidx2*2)+(lidx3*196)+(ridx4*14)+-13)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*28)+(gidx2*2)+(lidx3*196)+(ridx4*14)+-12)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&(((gidx2*2)+3)<15))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*6272)+(gidx1*28)+(gidx2*2)+(lidx3*196)+(ridx4*14)+-11)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&(((gidx2*2)+4)<15))));
      var val2_0 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5))]);
      var val2_1 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+1)]);
      var val2_2 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+2)]);
      var val2_3 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+3)]);
      var val2_4 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+4)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
    } /* reduce */
    data0[((gidx0*1568)+(gidx1*7)+(lidx3*49)+gidx2)] = acc0_0;
  }}}} /* global+local */
}`;

const r_21_32_49 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 21 */
  { let lidx1 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 48; ridx2++) {
      var val1_0 = f32(data1[((gidx0*1568)+(lidx1*49)+ridx2)]);
      var val2_0 = f32(data2[((gidx0*32)+lidx1)]);
      var val3_0 = f32(data3[((gidx0*32)+lidx1)]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[((gidx0*32)+lidx1)]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[((gidx0*32)+lidx1)]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (alu0*val3_0);
      var alu2 = (val6_0+val5_0);
      var alu3 = (val4_0/alu2);
      var alu4 = sqrt(alu3);
      var alu5 = (alu1*alu4);
      var alu6 = (alu5+val7_0);
      var alu7 = (alu6*val10_0);
      var alu8 = exp2(alu7);
      var alu9 = (val9_0+alu8);
      var alu10 = (val8_0/alu9);
      acc0_0 = fma(alu6,alu10,acc0_0);
    } /* reduce */
    var val11_0 = 0.02040816326530612f;
    var alu11 = (acc0_0*val11_0);
    data0[((gidx0*32)+lidx1)] = alu11;
  }} /* global+local */
}`;

const r_7_7_7_32_5_5_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 7 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 4; ridx4++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+-15)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&((gidx2*-2)<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+-14)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+-13)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+-12)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&(((gidx2*2)+3)<15))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+-11)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&(((gidx2*2)+4)<15))));
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+181)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&((gidx2*-2)<0))));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+182)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+183)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15))));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+184)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&(((gidx2*2)+3)<15))));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+185)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&(((gidx2*2)+4)<15))));
      var val1_10 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+377)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&((gidx2*-2)<0))));
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+378)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15))));
      var val1_12 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+379)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15))));
      var val1_13 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+380)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&(((gidx2*2)+3)<15))));
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*18816)+(gidx1*28)+(gidx2*2)+(lidx3*588)+(ridx4*14)+381)]), bool(((((gidx1*-2)+(ridx4*-1))<0)&&(((gidx1*2)+ridx4)<15)&&(((gidx2*2)+4)<15))));
      var val2_0 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5))]);
      var val2_1 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+1)]);
      var val2_2 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+2)]);
      var val2_3 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+3)]);
      var val2_4 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+4)]);
      var val2_5 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+25)]);
      var val2_6 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+26)]);
      var val2_7 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+27)]);
      var val2_8 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+28)]);
      var val2_9 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+29)]);
      var val2_10 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+50)]);
      var val2_11 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+51)]);
      var val2_12 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+52)]);
      var val2_13 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+53)]);
      var val2_14 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+54)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_1 = fma(val1_5,val2_5,acc0_1);
      acc0_1 = fma(val1_6,val2_6,acc0_1);
      acc0_1 = fma(val1_7,val2_7,acc0_1);
      acc0_1 = fma(val1_8,val2_8,acc0_1);
      acc0_1 = fma(val1_9,val2_9,acc0_1);
      acc0_2 = fma(val1_10,val2_10,acc0_2);
      acc0_2 = fma(val1_11,val2_11,acc0_2);
      acc0_2 = fma(val1_12,val2_12,acc0_2);
      acc0_2 = fma(val1_13,val2_13,acc0_2);
      acc0_2 = fma(val1_14,val2_14,acc0_2);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx3*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx3*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx3*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx3*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx3*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx3*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx3*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx3*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx3*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx3*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx3*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx3*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*96)+(lidx3*3))]);
    var val12_1 = f32(data12[((gidx0*96)+(lidx3*3)+1)]);
    var val12_2 = f32(data12[((gidx0*96)+(lidx3*3)+2)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (alu0*val4_0);
    var alu4 = (alu1*val4_1);
    var alu5 = (alu2*val4_2);
    var alu6 = (val7_0+val6_0);
    var alu7 = (val7_0+val6_1);
    var alu8 = (val7_0+val6_2);
    var alu9 = (val5_0/alu6);
    var alu10 = (val5_0/alu7);
    var alu11 = (val5_0/alu8);
    var alu12 = sqrt(alu9);
    var alu13 = sqrt(alu10);
    var alu14 = sqrt(alu11);
    var alu15 = (alu3*alu12);
    var alu16 = (alu4*alu13);
    var alu17 = (alu5*alu14);
    var alu18 = (alu15+val8_0);
    var alu19 = (alu16+val8_1);
    var alu20 = (alu17+val8_2);
    var alu21 = (val5_0/alu6);
    var alu22 = (val5_0/alu7);
    var alu23 = (val5_0/alu8);
    var alu24 = sqrt(alu21);
    var alu25 = sqrt(alu22);
    var alu26 = sqrt(alu23);
    var alu27 = (alu3*alu24);
    var alu28 = (alu4*alu25);
    var alu29 = (alu5*alu26);
    var alu30 = (alu27+val8_0);
    var alu31 = (alu28+val8_1);
    var alu32 = (alu29+val8_2);
    var alu33 = (alu30*val11_0);
    var alu34 = (alu31*val11_0);
    var alu35 = (alu32*val11_0);
    var alu36 = exp2(alu33);
    var alu37 = exp2(alu34);
    var alu38 = exp2(alu35);
    var alu39 = (val10_0+alu36);
    var alu40 = (val10_0+alu37);
    var alu41 = (val10_0+alu38);
    var alu42 = (val9_0/alu39);
    var alu43 = (val9_0/alu40);
    var alu44 = (val9_0/alu41);
    var alu45 = (alu18*alu42);
    var alu46 = (alu19*alu43);
    var alu47 = (alu20*alu44);
    var alu48 = (alu45*val12_0);
    var alu49 = (alu46*val12_1);
    var alu50 = (alu47*val12_2);
    data0[((gidx0*4704)+(gidx1*7)+(lidx3*147)+gidx2)] = alu48;
    data0[((gidx0*4704)+(gidx1*7)+(lidx3*147)+49+gidx2)] = alu49;
    data0[((gidx0*4704)+(gidx1*7)+(lidx3*147)+98+gidx2)] = alu50;
  }}}} /* global+local */
}`;

const r_2_49_32_168_4_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 2 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 167; ridx3++) {
      var val1_0 = f32(data1[((ridx3*196)+gidx1)]);
      var val1_1 = f32(data1[((ridx3*196)+49+gidx1)]);
      var val1_2 = f32(data1[((ridx3*196)+98+gidx1)]);
      var val1_3 = f32(data1[((ridx3*196)+147+gidx1)]);
      var val2_0 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+672)]);
      var val2_5 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+673)]);
      var val2_6 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+674)]);
      var val2_7 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+675)]);
      var val2_8 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+1344)]);
      var val2_9 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+1345)]);
      var val2_10 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+1346)]);
      var val2_11 = f32(data2[((gidx0*64512)+(lidx2*2016)+(ridx3*4)+1347)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_0,val2_4,acc0_1);
      acc0_1 = fma(val1_1,val2_5,acc0_1);
      acc0_1 = fma(val1_2,val2_6,acc0_1);
      acc0_1 = fma(val1_3,val2_7,acc0_1);
      acc0_2 = fma(val1_0,val2_8,acc0_2);
      acc0_2 = fma(val1_1,val2_9,acc0_2);
      acc0_2 = fma(val1_2,val2_10,acc0_2);
      acc0_2 = fma(val1_3,val2_11,acc0_2);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx2*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx2*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx2*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx2*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx2*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx2*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx2*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx2*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx2*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx2*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx2*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx2*3)+2)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (alu0*val4_0);
    var alu4 = (alu1*val4_1);
    var alu5 = (alu2*val4_2);
    var alu6 = (val7_0+val6_0);
    var alu7 = (val7_0+val6_1);
    var alu8 = (val7_0+val6_2);
    var alu9 = (val5_0/alu6);
    var alu10 = (val5_0/alu7);
    var alu11 = (val5_0/alu8);
    var alu12 = sqrt(alu9);
    var alu13 = sqrt(alu10);
    var alu14 = sqrt(alu11);
    var alu15 = (alu3*alu12);
    var alu16 = (alu4*alu13);
    var alu17 = (alu5*alu14);
    var alu18 = (alu15+val8_0);
    var alu19 = (alu16+val8_1);
    var alu20 = (alu17+val8_2);
    data0[((gidx0*4704)+(lidx2*147)+gidx1)] = alu18;
    data0[((gidx0*4704)+(lidx2*147)+49+gidx1)] = alu19;
    data0[((gidx0*4704)+(lidx2*147)+98+gidx1)] = alu20;
  }}} /* global+local */
}`;

const r_12_49_32_48_4_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 12 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 47; ridx3++) {
      var val1_0 = f32(data1[((ridx3*196)+gidx1)]);
      var val1_1 = f32(data1[((ridx3*196)+49+gidx1)]);
      var val1_2 = f32(data1[((ridx3*196)+98+gidx1)]);
      var val1_3 = f32(data1[((ridx3*196)+147+gidx1)]);
      var val2_0 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+192)]);
      var val2_5 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+193)]);
      var val2_6 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+194)]);
      var val2_7 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+195)]);
      var val2_8 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+384)]);
      var val2_9 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+385)]);
      var val2_10 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+386)]);
      var val2_11 = f32(data2[((gidx0*18432)+(lidx2*576)+(ridx3*4)+387)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_0,val2_4,acc0_1);
      acc0_1 = fma(val1_1,val2_5,acc0_1);
      acc0_1 = fma(val1_2,val2_6,acc0_1);
      acc0_1 = fma(val1_3,val2_7,acc0_1);
      acc0_2 = fma(val1_0,val2_8,acc0_2);
      acc0_2 = fma(val1_1,val2_9,acc0_2);
      acc0_2 = fma(val1_2,val2_10,acc0_2);
      acc0_2 = fma(val1_3,val2_11,acc0_2);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx2*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx2*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx2*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx2*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx2*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx2*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx2*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx2*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx2*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx2*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx2*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx2*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (alu0*val4_0);
    var alu4 = (alu1*val4_1);
    var alu5 = (alu2*val4_2);
    var alu6 = (val7_0+val6_0);
    var alu7 = (val7_0+val6_1);
    var alu8 = (val7_0+val6_2);
    var alu9 = (val5_0/alu6);
    var alu10 = (val5_0/alu7);
    var alu11 = (val5_0/alu8);
    var alu12 = sqrt(alu9);
    var alu13 = sqrt(alu10);
    var alu14 = sqrt(alu11);
    var alu15 = (alu3*alu12);
    var alu16 = (alu4*alu13);
    var alu17 = (alu5*alu14);
    var alu18 = (alu15+val8_0);
    var alu19 = (alu16+val8_1);
    var alu20 = (alu17+val8_2);
    var alu21 = (val5_0/alu6);
    var alu22 = (val5_0/alu7);
    var alu23 = (val5_0/alu8);
    var alu24 = sqrt(alu21);
    var alu25 = sqrt(alu22);
    var alu26 = sqrt(alu23);
    var alu27 = (alu3*alu24);
    var alu28 = (alu4*alu25);
    var alu29 = (alu5*alu26);
    var alu30 = (alu27+val8_0);
    var alu31 = (alu28+val8_1);
    var alu32 = (alu29+val8_2);
    var alu33 = (alu30*val11_0);
    var alu34 = (alu31*val11_0);
    var alu35 = (alu32*val11_0);
    var alu36 = exp2(alu33);
    var alu37 = exp2(alu34);
    var alu38 = exp2(alu35);
    var alu39 = (val10_0+alu36);
    var alu40 = (val10_0+alu37);
    var alu41 = (val10_0+alu38);
    var alu42 = (val9_0/alu39);
    var alu43 = (val9_0/alu40);
    var alu44 = (val9_0/alu41);
    var alu45 = (alu18*alu42);
    var alu46 = (alu19*alu43);
    var alu47 = (alu20*alu44);
    data0[((gidx0*4704)+(lidx2*147)+gidx1)] = alu45;
    data0[((gidx0*4704)+(lidx2*147)+49+gidx1)] = alu46;
    data0[((gidx0*4704)+(lidx2*147)+98+gidx1)] = alu47;
  }}} /* global+local */
}`;

const r_36_7_7_32_5_5 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 36 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 4; ridx4++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+(ridx4*7)+-16+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<9)&&((gidx2*-1)<-1))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+(ridx4*7)+-15+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<9))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+(ridx4*7)+-14+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<9))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+(ridx4*7)+-13+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<9)&&((gidx1+ridx4)<9))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+(ridx4*7)+-12+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<9)&&((gidx1+ridx4)<9))));
      var val2_0 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5))]);
      var val2_1 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+1)]);
      var val2_2 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+2)]);
      var val2_3 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+3)]);
      var val2_4 = f32(data2[((gidx0*800)+(lidx3*25)+(ridx4*5)+4)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
    } /* reduce */
    data0[((gidx0*1568)+(gidx1*7)+(lidx3*49)+gidx2)] = acc0_0;
  }}}} /* global+local */
}`;

const r_12_32_49_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 12 */
  { let lidx1 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 48; ridx2++) {
      var val1_0 = f32(data1[((gidx0*4704)+(lidx1*147)+ridx2)]);
      var val1_1 = f32(data1[((gidx0*4704)+(lidx1*147)+49+ridx2)]);
      var val1_2 = f32(data1[((gidx0*4704)+(lidx1*147)+98+ridx2)]);
      var val2_0 = f32(data2[((gidx0*96)+(lidx1*3))]);
      var val2_1 = f32(data2[((gidx0*96)+(lidx1*3)+1)]);
      var val2_2 = f32(data2[((gidx0*96)+(lidx1*3)+2)]);
      var val3_0 = f32(data3[((gidx0*96)+(lidx1*3))]);
      var val3_1 = f32(data3[((gidx0*96)+(lidx1*3)+1)]);
      var val3_2 = f32(data3[((gidx0*96)+(lidx1*3)+2)]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[((gidx0*96)+(lidx1*3))]);
      var val5_1 = f32(data5[((gidx0*96)+(lidx1*3)+1)]);
      var val5_2 = f32(data5[((gidx0*96)+(lidx1*3)+2)]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[((gidx0*96)+(lidx1*3))]);
      var val7_1 = f32(data7[((gidx0*96)+(lidx1*3)+1)]);
      var val7_2 = f32(data7[((gidx0*96)+(lidx1*3)+2)]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (val1_1-val2_1);
      var alu2 = (val1_2-val2_2);
      var alu3 = (alu0*val3_0);
      var alu4 = (alu1*val3_1);
      var alu5 = (alu2*val3_2);
      var alu6 = (val6_0+val5_0);
      var alu7 = (val6_0+val5_1);
      var alu8 = (val6_0+val5_2);
      var alu9 = (val4_0/alu6);
      var alu10 = (val4_0/alu7);
      var alu11 = (val4_0/alu8);
      var alu12 = sqrt(alu9);
      var alu13 = sqrt(alu10);
      var alu14 = sqrt(alu11);
      var alu15 = (alu3*alu12);
      var alu16 = (alu4*alu13);
      var alu17 = (alu5*alu14);
      var alu18 = (alu15+val7_0);
      var alu19 = (alu16+val7_1);
      var alu20 = (alu17+val7_2);
      var alu21 = (alu18*val10_0);
      var alu22 = (alu19*val10_0);
      var alu23 = (alu20*val10_0);
      var alu24 = exp2(alu21);
      var alu25 = exp2(alu22);
      var alu26 = exp2(alu23);
      var alu27 = (val9_0+alu24);
      var alu28 = (val9_0+alu25);
      var alu29 = (val9_0+alu26);
      var alu30 = (val8_0/alu27);
      var alu31 = (val8_0/alu28);
      var alu32 = (val8_0/alu29);
      acc0_0 = fma(alu18,alu30,acc0_0);
      acc0_1 = fma(alu19,alu31,acc0_1);
      acc0_2 = fma(alu20,alu32,acc0_2);
    } /* reduce */
    var val11_0 = 0.02040816326530612f;
    var alu33 = (acc0_0*val11_0);
    var alu34 = (acc0_1*val11_0);
    var alu35 = (acc0_2*val11_0);
    data0[((gidx0*96)+(lidx1*3))] = alu33;
    data0[((gidx0*96)+(lidx1*3)+1)] = alu34;
    data0[((gidx0*96)+(lidx1*3)+2)] = alu35;
  }} /* global+local */
}`;

const r_48_16_72 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 48 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 71; ridx2++) {
      var val1_0 = f32(data1[((lidx1*72)+ridx2)]);
      var val2_0 = f32(data2[((gidx0*1152)+(lidx1*72)+ridx2)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val3_0 = f32(data3[gidx0]);
    var val4_0 = 1.0f;
    var val5_0 = 1.0f;
    var val6_0 = -1.4426950408889634f;
    var alu0 = (accm1_0+val3_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val5_0+alu2);
    var alu4 = (val4_0/alu3);
    var alu5 = (alu0*alu4);
    data0[gidx0] = alu5;
  }} /* local */
} /* global */
}`;

const r_1152_16_3 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data3: array<f32>;
@group(0) @binding(2) var<storage,read_write> data4: array<f32>;
@group(0) @binding(3) var<storage,read_write> data5: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 1152 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 2; ridx2++) {
      var val3_0 = f32(data3[((lidx1*3)+ridx2)]);
      var val4_0 = f32(data4[((gidx0*48)+(lidx1*3)+ridx2)]);
      acc0_0 = fma(val3_0,val4_0,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val1_0 = 1.0f;
    var val2_0 = 1.0f;
    var val5_0 = f32(data5[gidx0]);
    var val6_0 = -1.4426950408889634f;
    var alu0 = (accm1_0+val5_0);
    var alu1 = (alu0*val6_0);
    var alu2 = exp2(alu1);
    var alu3 = (val2_0+alu2);
    var alu4 = (val1_0/alu3);
    data0[gidx0] = alu4;
  }} /* local */
} /* global */
}`;

const r_12_7_7_32_5_5_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 12 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    for(var ridx4 = 0; ridx4 <= 4; ridx4++) {
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+-16+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<9)&&((gidx2*-1)<-1))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+-15+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<9))));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+-14+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<9))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+-13+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<9)&&((gidx1+ridx4)<9))));
      var val1_4 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+-12+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<9)&&((gidx1+ridx4)<9))));
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+33+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<9)&&((gidx2*-1)<-1))));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+34+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<9))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+35+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<9))));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+36+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<9)&&((gidx1+ridx4)<9))));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+37+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<9)&&((gidx1+ridx4)<9))));
      var val1_10 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+82+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<9)&&((gidx2*-1)<-1))));
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+83+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&(((gidx2*-1)+-1)<-1)&&((gidx1+ridx4)<9))));
      var val1_12 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+84+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((gidx1+ridx4)<9))));
      var val1_13 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+85+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((3+gidx2)<9)&&((gidx1+ridx4)<9))));
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+(ridx4*7)+86+gidx2)]), bool(((((gidx1*-1)+(ridx4*-1))<-1)&&((4+gidx2)<9)&&((gidx1+ridx4)<9))));
      var val2_0 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5))]);
      var val2_1 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+1)]);
      var val2_2 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+2)]);
      var val2_3 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+3)]);
      var val2_4 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+4)]);
      var val2_5 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+25)]);
      var val2_6 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+26)]);
      var val2_7 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+27)]);
      var val2_8 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+28)]);
      var val2_9 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+29)]);
      var val2_10 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+50)]);
      var val2_11 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+51)]);
      var val2_12 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+52)]);
      var val2_13 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+53)]);
      var val2_14 = f32(data2[((gidx0*2400)+(lidx3*75)+(ridx4*5)+54)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_1 = fma(val1_5,val2_5,acc0_1);
      acc0_1 = fma(val1_6,val2_6,acc0_1);
      acc0_1 = fma(val1_7,val2_7,acc0_1);
      acc0_1 = fma(val1_8,val2_8,acc0_1);
      acc0_1 = fma(val1_9,val2_9,acc0_1);
      acc0_2 = fma(val1_10,val2_10,acc0_2);
      acc0_2 = fma(val1_11,val2_11,acc0_2);
      acc0_2 = fma(val1_12,val2_12,acc0_2);
      acc0_2 = fma(val1_13,val2_13,acc0_2);
      acc0_2 = fma(val1_14,val2_14,acc0_2);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx3*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx3*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx3*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx3*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx3*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx3*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx3*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx3*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx3*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx3*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx3*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx3*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*96)+(lidx3*3))]);
    var val12_1 = f32(data12[((gidx0*96)+(lidx3*3)+1)]);
    var val12_2 = f32(data12[((gidx0*96)+(lidx3*3)+2)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (alu0*val4_0);
    var alu4 = (alu1*val4_1);
    var alu5 = (alu2*val4_2);
    var alu6 = (val7_0+val6_0);
    var alu7 = (val7_0+val6_1);
    var alu8 = (val7_0+val6_2);
    var alu9 = (val5_0/alu6);
    var alu10 = (val5_0/alu7);
    var alu11 = (val5_0/alu8);
    var alu12 = sqrt(alu9);
    var alu13 = sqrt(alu10);
    var alu14 = sqrt(alu11);
    var alu15 = (alu3*alu12);
    var alu16 = (alu4*alu13);
    var alu17 = (alu5*alu14);
    var alu18 = (alu15+val8_0);
    var alu19 = (alu16+val8_1);
    var alu20 = (alu17+val8_2);
    var alu21 = (val5_0/alu6);
    var alu22 = (val5_0/alu7);
    var alu23 = (val5_0/alu8);
    var alu24 = sqrt(alu21);
    var alu25 = sqrt(alu22);
    var alu26 = sqrt(alu23);
    var alu27 = (alu3*alu24);
    var alu28 = (alu4*alu25);
    var alu29 = (alu5*alu26);
    var alu30 = (alu27+val8_0);
    var alu31 = (alu28+val8_1);
    var alu32 = (alu29+val8_2);
    var alu33 = (alu30*val11_0);
    var alu34 = (alu31*val11_0);
    var alu35 = (alu32*val11_0);
    var alu36 = exp2(alu33);
    var alu37 = exp2(alu34);
    var alu38 = exp2(alu35);
    var alu39 = (val10_0+alu36);
    var alu40 = (val10_0+alu37);
    var alu41 = (val10_0+alu38);
    var alu42 = (val9_0/alu39);
    var alu43 = (val9_0/alu40);
    var alu44 = (val9_0/alu41);
    var alu45 = (alu18*alu42);
    var alu46 = (alu19*alu43);
    var alu47 = (alu20*alu44);
    var alu48 = (alu45*val12_0);
    var alu49 = (alu46*val12_1);
    var alu50 = (alu47*val12_2);
    data0[((gidx0*4704)+(gidx1*7)+(lidx3*147)+gidx2)] = alu48;
    data0[((gidx0*4704)+(gidx1*7)+(lidx3*147)+49+gidx2)] = alu49;
    data0[((gidx0*4704)+(gidx1*7)+(lidx3*147)+98+gidx2)] = alu50;
  }}}} /* global+local */
}`;

const r_2_49_32_288_4_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data9: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 2 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 287; ridx3++) {
      var val1_0 = f32(data1[((ridx3*196)+gidx1)]);
      var val1_1 = f32(data1[((ridx3*196)+49+gidx1)]);
      var val1_2 = f32(data1[((ridx3*196)+98+gidx1)]);
      var val1_3 = f32(data1[((ridx3*196)+147+gidx1)]);
      var val2_0 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+1152)]);
      var val2_5 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+1153)]);
      var val2_6 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+1154)]);
      var val2_7 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+1155)]);
      var val2_8 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+2304)]);
      var val2_9 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+2305)]);
      var val2_10 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+2306)]);
      var val2_11 = f32(data2[((gidx0*110592)+(lidx2*3456)+(ridx3*4)+2307)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_0,val2_4,acc0_1);
      acc0_1 = fma(val1_1,val2_5,acc0_1);
      acc0_1 = fma(val1_2,val2_6,acc0_1);
      acc0_1 = fma(val1_3,val2_7,acc0_1);
      acc0_2 = fma(val1_0,val2_8,acc0_2);
      acc0_2 = fma(val1_1,val2_9,acc0_2);
      acc0_2 = fma(val1_2,val2_10,acc0_2);
      acc0_2 = fma(val1_3,val2_11,acc0_2);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx2*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx2*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx2*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx2*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx2*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx2*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx2*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx2*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx2*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx2*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx2*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx2*3)+2)]);
    var val9_0 = f32(data9[((gidx0*4704)+(lidx2*147)+gidx1)]);
    var val9_1 = f32(data9[((gidx0*4704)+(lidx2*147)+49+gidx1)]);
    var val9_2 = f32(data9[((gidx0*4704)+(lidx2*147)+98+gidx1)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (alu0*val4_0);
    var alu4 = (alu1*val4_1);
    var alu5 = (alu2*val4_2);
    var alu6 = (val7_0+val6_0);
    var alu7 = (val7_0+val6_1);
    var alu8 = (val7_0+val6_2);
    var alu9 = (val5_0/alu6);
    var alu10 = (val5_0/alu7);
    var alu11 = (val5_0/alu8);
    var alu12 = sqrt(alu9);
    var alu13 = sqrt(alu10);
    var alu14 = sqrt(alu11);
    var alu15 = (alu3*alu12);
    var alu16 = (alu4*alu13);
    var alu17 = (alu5*alu14);
    var alu18 = (alu15+val8_0);
    var alu19 = (alu16+val8_1);
    var alu20 = (alu17+val8_2);
    var alu21 = (alu18+val9_0);
    var alu22 = (alu19+val9_1);
    var alu23 = (alu20+val9_2);
    data0[((gidx0*4704)+(lidx2*147)+gidx1)] = alu21;
    data0[((gidx0*4704)+(lidx2*147)+49+gidx1)] = alu22;
    data0[((gidx0*4704)+(lidx2*147)+98+gidx1)] = alu23;
  }}} /* global+local */
}`;

const r_36_7_7_32_3_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 36 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+-8+gidx2)]), bool((((gidx1*-1)<0)&&((gidx2*-1)<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+-1+gidx2)]), bool(((gidx2*-1)<0)));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+6+gidx2)]), bool((((2+gidx1)<8)&&((gidx2*-1)<0))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+-7+gidx2)]), bool(((gidx1*-1)<0)));
      var val1_4 = f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+gidx2)]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+7+gidx2)]), bool(((2+gidx1)<8)));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+-6+gidx2)]), bool((((2+gidx2)<8)&&((gidx1*-1)<0))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+1+gidx2)]), bool(((2+gidx2)<8)));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*1568)+(gidx1*7)+(lidx3*49)+8+gidx2)]), bool((((2+gidx1)<8)&&((2+gidx2)<8))));
      var val2_0 = f32(data2[((gidx0*288)+(lidx3*9))]);
      var val2_1 = f32(data2[((gidx0*288)+(lidx3*9)+3)]);
      var val2_2 = f32(data2[((gidx0*288)+(lidx3*9)+6)]);
      var val2_3 = f32(data2[((gidx0*288)+(lidx3*9)+1)]);
      var val2_4 = f32(data2[((gidx0*288)+(lidx3*9)+4)]);
      var val2_5 = f32(data2[((gidx0*288)+(lidx3*9)+7)]);
      var val2_6 = f32(data2[((gidx0*288)+(lidx3*9)+2)]);
      var val2_7 = f32(data2[((gidx0*288)+(lidx3*9)+5)]);
      var val2_8 = f32(data2[((gidx0*288)+(lidx3*9)+8)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
     /* reduce */
    data0[((gidx0*1568)+(gidx1*7)+(lidx3*49)+gidx2)] = acc0_0;
  }}}} /* global+local */
}`;

const r_12_7_7_32_3_3_3 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@group(0) @binding(7) var<storage,read_write> data12: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.z);  /* 12 */
{ let gidx1 = i32(gindex.y);  /* 7 */
{ let gidx2 = i32(gindex.x);  /* 7 */
  { let lidx3 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
      var val1_0 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+-8+gidx2)]), bool((((gidx1*-1)<0)&&((gidx2*-1)<0))));
      var val1_1 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+-1+gidx2)]), bool(((gidx2*-1)<0)));
      var val1_2 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+6+gidx2)]), bool((((2+gidx1)<8)&&((gidx2*-1)<0))));
      var val1_3 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+-7+gidx2)]), bool(((gidx1*-1)<0)));
      var val1_4 = f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+gidx2)]);
      var val1_5 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+7+gidx2)]), bool(((2+gidx1)<8)));
      var val1_6 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+-6+gidx2)]), bool((((2+gidx2)<8)&&((gidx1*-1)<0))));
      var val1_7 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+1+gidx2)]), bool(((2+gidx2)<8)));
      var val1_8 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+8+gidx2)]), bool((((2+gidx1)<8)&&((2+gidx2)<8))));
      var val1_9 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+41+gidx2)]), bool((((gidx1*-1)<0)&&((gidx2*-1)<0))));
      var val1_10 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+48+gidx2)]), bool(((gidx2*-1)<0)));
      var val1_11 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+55+gidx2)]), bool((((2+gidx1)<8)&&((gidx2*-1)<0))));
      var val1_12 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+42+gidx2)]), bool(((gidx1*-1)<0)));
      var val1_13 = f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+49+gidx2)]);
      var val1_14 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+56+gidx2)]), bool(((2+gidx1)<8)));
      var val1_15 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+43+gidx2)]), bool((((2+gidx2)<8)&&((gidx1*-1)<0))));
      var val1_16 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+50+gidx2)]), bool(((2+gidx2)<8)));
      var val1_17 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+57+gidx2)]), bool((((2+gidx1)<8)&&((2+gidx2)<8))));
      var val1_18 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+90+gidx2)]), bool((((gidx1*-1)<0)&&((gidx2*-1)<0))));
      var val1_19 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+97+gidx2)]), bool(((gidx2*-1)<0)));
      var val1_20 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+104+gidx2)]), bool((((2+gidx1)<8)&&((gidx2*-1)<0))));
      var val1_21 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+91+gidx2)]), bool(((gidx1*-1)<0)));
      var val1_22 = f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+98+gidx2)]);
      var val1_23 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+105+gidx2)]), bool(((2+gidx1)<8)));
      var val1_24 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+92+gidx2)]), bool((((2+gidx2)<8)&&((gidx1*-1)<0))));
      var val1_25 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+99+gidx2)]), bool(((2+gidx2)<8)));
      var val1_26 = select(f32(0.0f), f32(data1[((gidx0*4704)+(gidx1*7)+(lidx3*147)+106+gidx2)]), bool((((2+gidx1)<8)&&((2+gidx2)<8))));
      var val2_0 = f32(data2[((gidx0*864)+(lidx3*27))]);
      var val2_1 = f32(data2[((gidx0*864)+(lidx3*27)+3)]);
      var val2_2 = f32(data2[((gidx0*864)+(lidx3*27)+6)]);
      var val2_3 = f32(data2[((gidx0*864)+(lidx3*27)+1)]);
      var val2_4 = f32(data2[((gidx0*864)+(lidx3*27)+4)]);
      var val2_5 = f32(data2[((gidx0*864)+(lidx3*27)+7)]);
      var val2_6 = f32(data2[((gidx0*864)+(lidx3*27)+2)]);
      var val2_7 = f32(data2[((gidx0*864)+(lidx3*27)+5)]);
      var val2_8 = f32(data2[((gidx0*864)+(lidx3*27)+8)]);
      var val2_9 = f32(data2[((gidx0*864)+(lidx3*27)+9)]);
      var val2_10 = f32(data2[((gidx0*864)+(lidx3*27)+12)]);
      var val2_11 = f32(data2[((gidx0*864)+(lidx3*27)+15)]);
      var val2_12 = f32(data2[((gidx0*864)+(lidx3*27)+10)]);
      var val2_13 = f32(data2[((gidx0*864)+(lidx3*27)+13)]);
      var val2_14 = f32(data2[((gidx0*864)+(lidx3*27)+16)]);
      var val2_15 = f32(data2[((gidx0*864)+(lidx3*27)+11)]);
      var val2_16 = f32(data2[((gidx0*864)+(lidx3*27)+14)]);
      var val2_17 = f32(data2[((gidx0*864)+(lidx3*27)+17)]);
      var val2_18 = f32(data2[((gidx0*864)+(lidx3*27)+18)]);
      var val2_19 = f32(data2[((gidx0*864)+(lidx3*27)+21)]);
      var val2_20 = f32(data2[((gidx0*864)+(lidx3*27)+24)]);
      var val2_21 = f32(data2[((gidx0*864)+(lidx3*27)+19)]);
      var val2_22 = f32(data2[((gidx0*864)+(lidx3*27)+22)]);
      var val2_23 = f32(data2[((gidx0*864)+(lidx3*27)+25)]);
      var val2_24 = f32(data2[((gidx0*864)+(lidx3*27)+20)]);
      var val2_25 = f32(data2[((gidx0*864)+(lidx3*27)+23)]);
      var val2_26 = f32(data2[((gidx0*864)+(lidx3*27)+26)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_0 = fma(val1_4,val2_4,acc0_0);
      acc0_0 = fma(val1_5,val2_5,acc0_0);
      acc0_0 = fma(val1_6,val2_6,acc0_0);
      acc0_0 = fma(val1_7,val2_7,acc0_0);
      acc0_0 = fma(val1_8,val2_8,acc0_0);
      acc0_1 = fma(val1_9,val2_9,acc0_1);
      acc0_1 = fma(val1_10,val2_10,acc0_1);
      acc0_1 = fma(val1_11,val2_11,acc0_1);
      acc0_1 = fma(val1_12,val2_12,acc0_1);
      acc0_1 = fma(val1_13,val2_13,acc0_1);
      acc0_1 = fma(val1_14,val2_14,acc0_1);
      acc0_1 = fma(val1_15,val2_15,acc0_1);
      acc0_1 = fma(val1_16,val2_16,acc0_1);
      acc0_1 = fma(val1_17,val2_17,acc0_1);
      acc0_2 = fma(val1_18,val2_18,acc0_2);
      acc0_2 = fma(val1_19,val2_19,acc0_2);
      acc0_2 = fma(val1_20,val2_20,acc0_2);
      acc0_2 = fma(val1_21,val2_21,acc0_2);
      acc0_2 = fma(val1_22,val2_22,acc0_2);
      acc0_2 = fma(val1_23,val2_23,acc0_2);
      acc0_2 = fma(val1_24,val2_24,acc0_2);
      acc0_2 = fma(val1_25,val2_25,acc0_2);
      acc0_2 = fma(val1_26,val2_26,acc0_2);
     /* reduce */
    var val3_0 = f32(data3[((gidx0*96)+(lidx3*3))]);
    var val3_1 = f32(data3[((gidx0*96)+(lidx3*3)+1)]);
    var val3_2 = f32(data3[((gidx0*96)+(lidx3*3)+2)]);
    var val4_0 = f32(data4[((gidx0*96)+(lidx3*3))]);
    var val4_1 = f32(data4[((gidx0*96)+(lidx3*3)+1)]);
    var val4_2 = f32(data4[((gidx0*96)+(lidx3*3)+2)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*96)+(lidx3*3))]);
    var val6_1 = f32(data6[((gidx0*96)+(lidx3*3)+1)]);
    var val6_2 = f32(data6[((gidx0*96)+(lidx3*3)+2)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*96)+(lidx3*3))]);
    var val8_1 = f32(data8[((gidx0*96)+(lidx3*3)+1)]);
    var val8_2 = f32(data8[((gidx0*96)+(lidx3*3)+2)]);
    var val9_0 = 1.0f;
    var val10_0 = 1.0f;
    var val11_0 = -1.4426950408889634f;
    var val12_0 = f32(data12[((gidx0*96)+(lidx3*3))]);
    var val12_1 = f32(data12[((gidx0*96)+(lidx3*3)+1)]);
    var val12_2 = f32(data12[((gidx0*96)+(lidx3*3)+2)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (alu0*val4_0);
    var alu4 = (alu1*val4_1);
    var alu5 = (alu2*val4_2);
    var alu6 = (val7_0+val6_0);
    var alu7 = (val7_0+val6_1);
    var alu8 = (val7_0+val6_2);
    var alu9 = (val5_0/alu6);
    var alu10 = (val5_0/alu7);
    var alu11 = (val5_0/alu8);
    var alu12 = sqrt(alu9);
    var alu13 = sqrt(alu10);
    var alu14 = sqrt(alu11);
    var alu15 = (alu3*alu12);
    var alu16 = (alu4*alu13);
    var alu17 = (alu5*alu14);
    var alu18 = (alu15+val8_0);
    var alu19 = (alu16+val8_1);
    var alu20 = (alu17+val8_2);
    var alu21 = (val5_0/alu6);
    var alu22 = (val5_0/alu7);
    var alu23 = (val5_0/alu8);
    var alu24 = sqrt(alu21);
    var alu25 = sqrt(alu22);
    var alu26 = sqrt(alu23);
    var alu27 = (alu3*alu24);
    var alu28 = (alu4*alu25);
    var alu29 = (alu5*alu26);
    var alu30 = (alu27+val8_0);
    var alu31 = (alu28+val8_1);
    var alu32 = (alu29+val8_2);
    var alu33 = (alu30*val11_0);
    var alu34 = (alu31*val11_0);
    var alu35 = (alu32*val11_0);
    var alu36 = exp2(alu33);
    var alu37 = exp2(alu34);
    var alu38 = exp2(alu35);
    var alu39 = (val10_0+alu36);
    var alu40 = (val10_0+alu37);
    var alu41 = (val10_0+alu38);
    var alu42 = (val9_0/alu39);
    var alu43 = (val9_0/alu40);
    var alu44 = (val9_0/alu41);
    var alu45 = (alu18*alu42);
    var alu46 = (alu19*alu43);
    var alu47 = (alu20*alu44);
    var alu48 = (alu45*val12_0);
    var alu49 = (alu46*val12_1);
    var alu50 = (alu47*val12_2);
    data0[((gidx0*4704)+(gidx1*7)+(lidx3*147)+gidx2)] = alu48;
    data0[((gidx0*4704)+(gidx1*7)+(lidx3*147)+49+gidx2)] = alu49;
    data0[((gidx0*4704)+(gidx1*7)+(lidx3*147)+98+gidx2)] = alu50;
  }}}} /* global+local */
}`;

const r_5_49_16_288_4_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data4: array<f32>;
@group(0) @binding(5) var<storage,read_write> data6: array<f32>;
@group(0) @binding(6) var<storage,read_write> data8: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 5 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 287; ridx3++) {
      var val1_0 = f32(data1[((ridx3*196)+gidx1)]);
      var val1_1 = f32(data1[((ridx3*196)+49+gidx1)]);
      var val1_2 = f32(data1[((ridx3*196)+98+gidx1)]);
      var val1_3 = f32(data1[((ridx3*196)+147+gidx1)]);
      var val2_0 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+1152)]);
      var val2_5 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+1153)]);
      var val2_6 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+1154)]);
      var val2_7 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+1155)]);
      var val2_8 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+2304)]);
      var val2_9 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+2305)]);
      var val2_10 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+2306)]);
      var val2_11 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+2307)]);
      var val2_12 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+3456)]);
      var val2_13 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+3457)]);
      var val2_14 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+3458)]);
      var val2_15 = f32(data2[((gidx0*73728)+(lidx2*4608)+(ridx3*4)+3459)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_0,val2_4,acc0_1);
      acc0_1 = fma(val1_1,val2_5,acc0_1);
      acc0_1 = fma(val1_2,val2_6,acc0_1);
      acc0_1 = fma(val1_3,val2_7,acc0_1);
      acc0_2 = fma(val1_0,val2_8,acc0_2);
      acc0_2 = fma(val1_1,val2_9,acc0_2);
      acc0_2 = fma(val1_2,val2_10,acc0_2);
      acc0_2 = fma(val1_3,val2_11,acc0_2);
      acc0_3 = fma(val1_0,val2_12,acc0_3);
      acc0_3 = fma(val1_1,val2_13,acc0_3);
      acc0_3 = fma(val1_2,val2_14,acc0_3);
      acc0_3 = fma(val1_3,val2_15,acc0_3);
    } /* reduce */
    var val3_0 = f32(data3[((gidx0*64)+(lidx2*4))]);
    var val3_1 = f32(data3[((gidx0*64)+(lidx2*4)+1)]);
    var val3_2 = f32(data3[((gidx0*64)+(lidx2*4)+2)]);
    var val3_3 = f32(data3[((gidx0*64)+(lidx2*4)+3)]);
    var val4_0 = f32(data4[((gidx0*64)+(lidx2*4))]);
    var val4_1 = f32(data4[((gidx0*64)+(lidx2*4)+1)]);
    var val4_2 = f32(data4[((gidx0*64)+(lidx2*4)+2)]);
    var val4_3 = f32(data4[((gidx0*64)+(lidx2*4)+3)]);
    var val5_0 = 1.0f;
    var val6_0 = f32(data6[((gidx0*64)+(lidx2*4))]);
    var val6_1 = f32(data6[((gidx0*64)+(lidx2*4)+1)]);
    var val6_2 = f32(data6[((gidx0*64)+(lidx2*4)+2)]);
    var val6_3 = f32(data6[((gidx0*64)+(lidx2*4)+3)]);
    var val7_0 = 1e-05f;
    var val8_0 = f32(data8[((gidx0*64)+(lidx2*4))]);
    var val8_1 = f32(data8[((gidx0*64)+(lidx2*4)+1)]);
    var val8_2 = f32(data8[((gidx0*64)+(lidx2*4)+2)]);
    var val8_3 = f32(data8[((gidx0*64)+(lidx2*4)+3)]);
    var alu0 = (acc0_0-val3_0);
    var alu1 = (acc0_1-val3_1);
    var alu2 = (acc0_2-val3_2);
    var alu3 = (acc0_3-val3_3);
    var alu4 = (alu0*val4_0);
    var alu5 = (alu1*val4_1);
    var alu6 = (alu2*val4_2);
    var alu7 = (alu3*val4_3);
    var alu8 = (val7_0+val6_0);
    var alu9 = (val7_0+val6_1);
    var alu10 = (val7_0+val6_2);
    var alu11 = (val7_0+val6_3);
    var alu12 = (val5_0/alu8);
    var alu13 = (val5_0/alu9);
    var alu14 = (val5_0/alu10);
    var alu15 = (val5_0/alu11);
    var alu16 = sqrt(alu12);
    var alu17 = sqrt(alu13);
    var alu18 = sqrt(alu14);
    var alu19 = sqrt(alu15);
    var alu20 = (alu4*alu16);
    var alu21 = (alu5*alu17);
    var alu22 = (alu6*alu18);
    var alu23 = (alu7*alu19);
    var alu24 = (alu20+val8_0);
    var alu25 = (alu21+val8_1);
    var alu26 = (alu22+val8_2);
    var alu27 = (alu23+val8_3);
    data0[((gidx0*3136)+(lidx2*196)+gidx1)] = alu24;
    data0[((gidx0*3136)+(lidx2*196)+49+gidx1)] = alu25;
    data0[((gidx0*3136)+(lidx2*196)+98+gidx1)] = alu26;
    data0[((gidx0*3136)+(lidx2*196)+147+gidx1)] = alu27;
  }}} /* global+local */
}`;

const r_10_49_32_80_4_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.y);  /* 10 */
{ let gidx1 = i32(gindex.x);  /* 49 */
  { let lidx2 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    for(var ridx3 = 0; ridx3 <= 79; ridx3++) {
      var val1_0 = f32(data1[((ridx3*196)+gidx1)]);
      var val1_1 = f32(data1[((ridx3*196)+49+gidx1)]);
      var val1_2 = f32(data1[((ridx3*196)+98+gidx1)]);
      var val1_3 = f32(data1[((ridx3*196)+147+gidx1)]);
      var val2_0 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4))]);
      var val2_1 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+1)]);
      var val2_2 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+2)]);
      var val2_3 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+3)]);
      var val2_4 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+320)]);
      var val2_5 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+321)]);
      var val2_6 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+322)]);
      var val2_7 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+323)]);
      var val2_8 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+640)]);
      var val2_9 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+641)]);
      var val2_10 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+642)]);
      var val2_11 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+643)]);
      var val2_12 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+960)]);
      var val2_13 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+961)]);
      var val2_14 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+962)]);
      var val2_15 = f32(data2[((gidx0*40960)+(lidx2*1280)+(ridx3*4)+963)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
      acc0_0 = fma(val1_1,val2_1,acc0_0);
      acc0_0 = fma(val1_2,val2_2,acc0_0);
      acc0_0 = fma(val1_3,val2_3,acc0_0);
      acc0_1 = fma(val1_0,val2_4,acc0_1);
      acc0_1 = fma(val1_1,val2_5,acc0_1);
      acc0_1 = fma(val1_2,val2_6,acc0_1);
      acc0_1 = fma(val1_3,val2_7,acc0_1);
      acc0_2 = fma(val1_0,val2_8,acc0_2);
      acc0_2 = fma(val1_1,val2_9,acc0_2);
      acc0_2 = fma(val1_2,val2_10,acc0_2);
      acc0_2 = fma(val1_3,val2_11,acc0_2);
      acc0_3 = fma(val1_0,val2_12,acc0_3);
      acc0_3 = fma(val1_1,val2_13,acc0_3);
      acc0_3 = fma(val1_2,val2_14,acc0_3);
      acc0_3 = fma(val1_3,val2_15,acc0_3);
    } /* reduce */
    data0[((gidx0*6272)+(lidx2*196)+gidx1)] = acc0_0;
    data0[((gidx0*6272)+(lidx2*196)+49+gidx1)] = acc0_1;
    data0[((gidx0*6272)+(lidx2*196)+98+gidx1)] = acc0_2;
    data0[((gidx0*6272)+(lidx2*196)+147+gidx1)] = acc0_3;
  }}} /* global+local */
}`;

const r_10_32_49_4 = `@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@group(0) @binding(4) var<storage,read_write> data5: array<f32>;
@group(0) @binding(5) var<storage,read_write> data7: array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 10 */
  { let lidx1 = i32(lindex.x);  /* 32 */
    var acc0_0 = 0.0f;
    var acc0_1 = 0.0f;
    var acc0_2 = 0.0f;
    var acc0_3 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 48; ridx2++) {
      var val1_0 = f32(data1[((gidx0*6272)+(lidx1*196)+ridx2)]);
      var val1_1 = f32(data1[((gidx0*6272)+(lidx1*196)+49+ridx2)]);
      var val1_2 = f32(data1[((gidx0*6272)+(lidx1*196)+98+ridx2)]);
      var val1_3 = f32(data1[((gidx0*6272)+(lidx1*196)+147+ridx2)]);
      var val2_0 = f32(data2[((gidx0*128)+(lidx1*4))]);
      var val2_1 = f32(data2[((gidx0*128)+(lidx1*4)+1)]);
      var val2_2 = f32(data2[((gidx0*128)+(lidx1*4)+2)]);
      var val2_3 = f32(data2[((gidx0*128)+(lidx1*4)+3)]);
      var val3_0 = f32(data3[((gidx0*128)+(lidx1*4))]);
      var val3_1 = f32(data3[((gidx0*128)+(lidx1*4)+1)]);
      var val3_2 = f32(data3[((gidx0*128)+(lidx1*4)+2)]);
      var val3_3 = f32(data3[((gidx0*128)+(lidx1*4)+3)]);
      var val4_0 = 1.0f;
      var val5_0 = f32(data5[((gidx0*128)+(lidx1*4))]);
      var val5_1 = f32(data5[((gidx0*128)+(lidx1*4)+1)]);
      var val5_2 = f32(data5[((gidx0*128)+(lidx1*4)+2)]);
      var val5_3 = f32(data5[((gidx0*128)+(lidx1*4)+3)]);
      var val6_0 = 1e-05f;
      var val7_0 = f32(data7[((gidx0*128)+(lidx1*4))]);
      var val7_1 = f32(data7[((gidx0*128)+(lidx1*4)+1)]);
      var val7_2 = f32(data7[((gidx0*128)+(lidx1*4)+2)]);
      var val7_3 = f32(data7[((gidx0*128)+(lidx1*4)+3)]);
      var val8_0 = 1.0f;
      var val9_0 = 1.0f;
      var val10_0 = -1.4426950408889634f;
      var alu0 = (val1_0-val2_0);
      var alu1 = (val1_1-val2_1);
      var alu2 = (val1_2-val2_2);
      var alu3 = (val1_3-val2_3);
      var alu4 = (alu0*val3_0);
      var alu5 = (alu1*val3_1);
      var alu6 = (alu2*val3_2);
      var alu7 = (alu3*val3_3);
      var alu8 = (val6_0+val5_0);
      var alu9 = (val6_0+val5_1);
      var alu10 = (val6_0+val5_2);
      var alu11 = (val6_0+val5_3);
      var alu12 = (val4_0/alu8);
      var alu13 = (val4_0/alu9);
      var alu14 = (val4_0/alu10);
      var alu15 = (val4_0/alu11);
      var alu16 = sqrt(alu12);
      var alu17 = sqrt(alu13);
      var alu18 = sqrt(alu14);
      var alu19 = sqrt(alu15);
      var alu20 = (alu4*alu16);
      var alu21 = (alu5*alu17);
      var alu22 = (alu6*alu18);
      var alu23 = (alu7*alu19);
      var alu24 = (alu20+val7_0);
      var alu25 = (alu21+val7_1);
      var alu26 = (alu22+val7_2);
      var alu27 = (alu23+val7_3);
      var alu28 = (alu24*val10_0);
      var alu29 = (alu25*val10_0);
      var alu30 = (alu26*val10_0);
      var alu31 = (alu27*val10_0);
      var alu32 = exp2(alu28);
      var alu33 = exp2(alu29);
      var alu34 = exp2(alu30);
      var alu35 = exp2(alu31);
      var alu36 = (val9_0+alu32);
      var alu37 = (val9_0+alu33);
      var alu38 = (val9_0+alu34);
      var alu39 = (val9_0+alu35);
      var alu40 = (val8_0/alu36);
      var alu41 = (val8_0/alu37);
      var alu42 = (val8_0/alu38);
      var alu43 = (val8_0/alu39);
      acc0_0 = fma(alu24,alu40,acc0_0);
      acc0_1 = fma(alu25,alu41,acc0_1);
      acc0_2 = fma(alu26,alu42,acc0_2);
      acc0_3 = fma(alu27,alu43,acc0_3);
    } /* reduce */
    var val11_0 = 0.02040816326530612f;
    var alu44 = (acc0_0*val11_0);
    var alu45 = (acc0_1*val11_0);
    var alu46 = (acc0_2*val11_0);
    var alu47 = (acc0_3*val11_0);
    data0[((gidx0*128)+(lidx1*4))] = alu44;
    data0[((gidx0*128)+(lidx1*4)+1)] = alu45;
    data0[((gidx0*128)+(lidx1*4)+2)] = alu46;
    data0[((gidx0*128)+(lidx1*4)+3)] = alu47;
  }} /* global+local */
}`;

const r_1000_16_80 = `var<workgroup> temp: array<f32,16>;
@group(0) @binding(0) var<storage,read_write> data0: array<f32>;
@group(0) @binding(1) var<storage,read_write> data1: array<f32>;
@group(0) @binding(2) var<storage,read_write> data2: array<f32>;
@group(0) @binding(3) var<storage,read_write> data3: array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>, @builtin(local_invocation_id) lindex: vec3<u32>) {
{ let gidx0 = i32(gindex.x);  /* 1000 */
  { let lidx1 = i32(lindex.x);  /* 16 */
    var acc0_0 = 0.0f;
    for(var ridx2 = 0; ridx2 <= 79; ridx2++) {
      var val1_0 = f32(data1[((lidx1*80)+ridx2)]);
      var val2_0 = f32(data2[((lidx1*80000)+(ridx2*1000)+gidx0)]);
      acc0_0 = fma(val1_0,val2_0,acc0_0);
    } /* reduce */
    temp[lidx1] = acc0_0;
    workgroupBarrier();
    if (lidx1 == 0) {
    var accm1_0 = 0.0f;
    {
    for(var tidx1 = 0; tidx1 <= 15; tidx1++) {
      var valm1_0 = f32(temp[tidx1]);
      accm1_0 = (valm1_0+accm1_0);
    }} /* late_reduce */
    var val3_0 = f32(data3[gidx0]);
    var alu0 = (accm1_0+val3_0);
    data0[gidx0] = alu0;
  }} /* local */
} /* global */
}`;
      
const setupNet = async (device, safetensor) => {
    const buf_0 = createEmptyBuf(device, 1605632);
    const input = createEmptyBuf(device, 602112);
    const buf_1 = createWeightBuf(device, 3456, safetensor.getTensor('_conv_stem'));
    const buf_2 = createWeightBuf(device, 128, safetensor.getTensor('_bn0.running_mean'));
    const buf_3 = createWeightBuf(device, 128, safetensor.getTensor('_bn0.weight'));
    const buf_4 = createWeightBuf(device, 128, safetensor.getTensor('_bn0.running_var'));
    const buf_5 = createWeightBuf(device, 128, safetensor.getTensor('_bn0.bias'));
    const buf_6 = createEmptyBuf(device, 1605632);;
    const buf_7 = createWeightBuf(device, 1152, safetensor.getTensor('_blocks.0._depthwise_conv'));
    const buf_8 = createEmptyBuf(device, 128);;
    const buf_9 = createWeightBuf(device, 128, safetensor.getTensor('_blocks.0._bn1.running_mean'));
    const buf_10 = createWeightBuf(device, 128, safetensor.getTensor('_blocks.0._bn1.weight'));
    const buf_11 = createWeightBuf(device, 128, safetensor.getTensor('_blocks.0._bn1.running_var'));
    const buf_12 = createWeightBuf(device, 128, safetensor.getTensor('_blocks.0._bn1.bias'));
    const buf_13 = createEmptyBuf(device, 32);;
    const buf_14 = createWeightBuf(device, 1024, safetensor.getTensor('_blocks.0._se_reduce'));
    const buf_15 = createWeightBuf(device, 32, safetensor.getTensor('_blocks.0._se_reduce_bias'));
    const buf_16 = createEmptyBuf(device, 128);;
    const buf_17 = createWeightBuf(device, 1024, safetensor.getTensor('_blocks.0._se_expand'));
    const buf_18 = createWeightBuf(device, 128, safetensor.getTensor('_blocks.0._se_expand_bias'));
    const buf_19 = createEmptyBuf(device, 1605632);;
    const buf_20 = createEmptyBuf(device, 802816);;
    const buf_21 = createWeightBuf(device, 2048, safetensor.getTensor('_blocks.0._project_conv'));
    const buf_22 = createWeightBuf(device, 64, safetensor.getTensor('_blocks.0._bn2.running_mean'));
    const buf_23 = createWeightBuf(device, 64, safetensor.getTensor('_blocks.0._bn2.weight'));
    const buf_24 = createWeightBuf(device, 64, safetensor.getTensor('_blocks.0._bn2.running_var'));
    const buf_25 = createWeightBuf(device, 64, safetensor.getTensor('_blocks.0._bn2.bias'));
    const buf_26 = createEmptyBuf(device, 4816896);;
    const buf_27 = createWeightBuf(device, 6144, safetensor.getTensor('_blocks.1._expand_conv'));
    const buf_28 = createWeightBuf(device, 384, safetensor.getTensor('_blocks.1._bn0.running_mean'));
    const buf_29 = createWeightBuf(device, 384, safetensor.getTensor('_blocks.1._bn0.weight'));
    const buf_30 = createWeightBuf(device, 384, safetensor.getTensor('_blocks.1._bn0.running_var'));
    const buf_31 = createWeightBuf(device, 384, safetensor.getTensor('_blocks.1._bn0.bias'));
    const buf_32 = createEmptyBuf(device, 1204224);;
    const buf_33 = createWeightBuf(device, 3456, safetensor.getTensor('_blocks.1._depthwise_conv'));
    const buf_34 = createEmptyBuf(device, 384);;
    const buf_35 = createWeightBuf(device, 384, safetensor.getTensor('_blocks.1._bn1.running_mean'));
    const buf_36 = createWeightBuf(device, 384, safetensor.getTensor('_blocks.1._bn1.weight'));
    const buf_37 = createWeightBuf(device, 384, safetensor.getTensor('_blocks.1._bn1.running_var'));
    const buf_38 = createWeightBuf(device, 384, safetensor.getTensor('_blocks.1._bn1.bias'));
    const buf_39 = createEmptyBuf(device, 16);;
    const buf_40 = createWeightBuf(device, 1536, safetensor.getTensor('_blocks.1._se_reduce'));
    const buf_41 = createWeightBuf(device, 16, safetensor.getTensor('_blocks.1._se_reduce_bias'));
    const buf_42 = createEmptyBuf(device, 384);;
    const buf_43 = createWeightBuf(device, 1536, safetensor.getTensor('_blocks.1._se_expand'));
    const buf_44 = createWeightBuf(device, 384, safetensor.getTensor('_blocks.1._se_expand_bias'));
    const buf_45 = createEmptyBuf(device, 1204224);;
    const buf_46 = createEmptyBuf(device, 301056);;
    const buf_47 = createWeightBuf(device, 9216, safetensor.getTensor('_blocks.1._project_conv'));
    const buf_48 = createWeightBuf(device, 96, safetensor.getTensor('_blocks.1._bn2.running_mean'));
    const buf_49 = createWeightBuf(device, 96, safetensor.getTensor('_blocks.1._bn2.weight'));
    const buf_50 = createWeightBuf(device, 96, safetensor.getTensor('_blocks.1._bn2.running_var'));
    const buf_51 = createWeightBuf(device, 96, safetensor.getTensor('_blocks.1._bn2.bias'));
    const buf_52 = createEmptyBuf(device, 1806336);;
    const buf_53 = createWeightBuf(device, 13824, safetensor.getTensor('_blocks.2._expand_conv'));
    const buf_54 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.2._bn0.running_mean'));
    const buf_55 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.2._bn0.weight'));
    const buf_56 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.2._bn0.running_var'));
    const buf_57 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.2._bn0.bias'));
    const buf_58 = createEmptyBuf(device, 1806336);;
    const buf_59 = createWeightBuf(device, 5184, safetensor.getTensor('_blocks.2._depthwise_conv'));
    const buf_60 = createEmptyBuf(device, 576);;
    const buf_61 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.2._bn1.running_mean'));
    const buf_62 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.2._bn1.weight'));
    const buf_63 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.2._bn1.running_var'));
    const buf_64 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.2._bn1.bias'));
    const buf_65 = createEmptyBuf(device, 24);;
    const buf_66 = createWeightBuf(device, 3456, safetensor.getTensor('_blocks.2._se_reduce'));
    const buf_67 = createWeightBuf(device, 24, safetensor.getTensor('_blocks.2._se_reduce_bias'));
    const buf_68 = createEmptyBuf(device, 576);;
    const buf_69 = createWeightBuf(device, 3456, safetensor.getTensor('_blocks.2._se_expand'));
    const buf_70 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.2._se_expand_bias'));
    const buf_71 = createEmptyBuf(device, 1806336);;
    const buf_72 = createEmptyBuf(device, 301056);;
    const buf_73 = createWeightBuf(device, 13824, safetensor.getTensor('_blocks.2._project_conv'));
    const buf_74 = createWeightBuf(device, 96, safetensor.getTensor('_blocks.2._bn2.running_mean'));
    const buf_75 = createWeightBuf(device, 96, safetensor.getTensor('_blocks.2._bn2.weight'));
    const buf_76 = createWeightBuf(device, 96, safetensor.getTensor('_blocks.2._bn2.running_var'));
    const buf_77 = createWeightBuf(device, 96, safetensor.getTensor('_blocks.2._bn2.bias'));
    const buf_78 = createEmptyBuf(device, 1806336);;
    const buf_79 = createWeightBuf(device, 13824, safetensor.getTensor('_blocks.3._expand_conv'));
    const buf_80 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.3._bn0.running_mean'));
    const buf_81 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.3._bn0.weight'));
    const buf_82 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.3._bn0.running_var'));
    const buf_83 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.3._bn0.bias'));
    const buf_84 = createEmptyBuf(device, 451584);;
    const buf_85 = createWeightBuf(device, 14400, safetensor.getTensor('_blocks.3._depthwise_conv'));
    const buf_86 = createEmptyBuf(device, 576);;
    const buf_87 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.3._bn1.running_mean'));
    const buf_88 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.3._bn1.weight'));
    const buf_89 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.3._bn1.running_var'));
    const buf_90 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.3._bn1.bias'));
    const buf_91 = createEmptyBuf(device, 24);;
    const buf_92 = createWeightBuf(device, 3456, safetensor.getTensor('_blocks.3._se_reduce'));
    const buf_93 = createWeightBuf(device, 24, safetensor.getTensor('_blocks.3._se_reduce_bias'));
    const buf_94 = createEmptyBuf(device, 576);;
    const buf_95 = createWeightBuf(device, 3456, safetensor.getTensor('_blocks.3._se_expand'));
    const buf_96 = createWeightBuf(device, 576, safetensor.getTensor('_blocks.3._se_expand_bias'));
    const buf_97 = createEmptyBuf(device, 451584);;
    const buf_98 = createEmptyBuf(device, 125440);;
    const buf_99 = createWeightBuf(device, 23040, safetensor.getTensor('_blocks.3._project_conv'));
    const buf_100 = createWeightBuf(device, 160, safetensor.getTensor('_blocks.3._bn2.running_mean'));
    const buf_101 = createWeightBuf(device, 160, safetensor.getTensor('_blocks.3._bn2.weight'));
    const buf_102 = createWeightBuf(device, 160, safetensor.getTensor('_blocks.3._bn2.running_var'));
    const buf_103 = createWeightBuf(device, 160, safetensor.getTensor('_blocks.3._bn2.bias'));
    const buf_104 = createEmptyBuf(device, 752640);;
    const buf_105 = createWeightBuf(device, 38400, safetensor.getTensor('_blocks.4._expand_conv'));
    const buf_106 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.4._bn0.running_mean'));
    const buf_107 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.4._bn0.weight'));
    const buf_108 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.4._bn0.running_var'));
    const buf_109 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.4._bn0.bias'));
    const buf_110 = createEmptyBuf(device, 752640);;
    const buf_111 = createWeightBuf(device, 24000, safetensor.getTensor('_blocks.4._depthwise_conv'));
    const buf_112 = createEmptyBuf(device, 960);;
    const buf_113 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.4._bn1.running_mean'));
    const buf_114 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.4._bn1.weight'));
    const buf_115 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.4._bn1.running_var'));
    const buf_116 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.4._bn1.bias'));
    const buf_117 = createEmptyBuf(device, 40);;
    const buf_118 = createWeightBuf(device, 9600, safetensor.getTensor('_blocks.4._se_reduce'));
    const buf_119 = createWeightBuf(device, 40, safetensor.getTensor('_blocks.4._se_reduce_bias'));
    const buf_120 = createEmptyBuf(device, 960);;
    const buf_121 = createWeightBuf(device, 9600, safetensor.getTensor('_blocks.4._se_expand'));
    const buf_122 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.4._se_expand_bias'));
    const buf_123 = createEmptyBuf(device, 752640);;
    const buf_124 = createEmptyBuf(device, 125440);;
    const buf_125 = createWeightBuf(device, 38400, safetensor.getTensor('_blocks.4._project_conv'));
    const buf_126 = createWeightBuf(device, 160, safetensor.getTensor('_blocks.4._bn2.running_mean'));
    const buf_127 = createWeightBuf(device, 160, safetensor.getTensor('_blocks.4._bn2.weight'));
    const buf_128 = createWeightBuf(device, 160, safetensor.getTensor('_blocks.4._bn2.running_var'));
    const buf_129 = createWeightBuf(device, 160, safetensor.getTensor('_blocks.4._bn2.bias'));
    const buf_130 = createEmptyBuf(device, 752640);;
    const buf_131 = createWeightBuf(device, 38400, safetensor.getTensor('_blocks.5._expand_conv'));
    const buf_132 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.5._bn0.running_mean'));
    const buf_133 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.5._bn0.weight'));
    const buf_134 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.5._bn0.running_var'));
    const buf_135 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.5._bn0.bias'));
    const buf_136 = createEmptyBuf(device, 188160);;
    const buf_137 = createWeightBuf(device, 8640, safetensor.getTensor('_blocks.5._depthwise_conv'));
    const buf_138 = createEmptyBuf(device, 960);;
    const buf_139 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.5._bn1.running_mean'));
    const buf_140 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.5._bn1.weight'));
    const buf_141 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.5._bn1.running_var'));
    const buf_142 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.5._bn1.bias'));
    const buf_143 = createEmptyBuf(device, 40);;
    const buf_144 = createWeightBuf(device, 9600, safetensor.getTensor('_blocks.5._se_reduce'));
    const buf_145 = createWeightBuf(device, 40, safetensor.getTensor('_blocks.5._se_reduce_bias'));
    const buf_146 = createEmptyBuf(device, 960);;
    const buf_147 = createWeightBuf(device, 9600, safetensor.getTensor('_blocks.5._se_expand'));
    const buf_148 = createWeightBuf(device, 960, safetensor.getTensor('_blocks.5._se_expand_bias'));
    const buf_149 = createEmptyBuf(device, 188160);;
    const buf_150 = createEmptyBuf(device, 62720);;
    const buf_151 = createWeightBuf(device, 76800, safetensor.getTensor('_blocks.5._project_conv'));
    const buf_152 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.5._bn2.running_mean'));
    const buf_153 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.5._bn2.weight'));
    const buf_154 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.5._bn2.running_var'));
    const buf_155 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.5._bn2.bias'));
    const buf_156 = createEmptyBuf(device, 376320);;
    const buf_157 = createWeightBuf(device, 153600, safetensor.getTensor('_blocks.6._expand_conv'));
    const buf_158 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.6._bn0.running_mean'));
    const buf_159 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.6._bn0.weight'));
    const buf_160 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.6._bn0.running_var'));
    const buf_161 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.6._bn0.bias'));
    const buf_162 = createEmptyBuf(device, 376320);;
    const buf_163 = createWeightBuf(device, 17280, safetensor.getTensor('_blocks.6._depthwise_conv'));
    const buf_164 = createEmptyBuf(device, 1920);;
    const buf_165 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.6._bn1.running_mean'));
    const buf_166 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.6._bn1.weight'));
    const buf_167 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.6._bn1.running_var'));
    const buf_168 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.6._bn1.bias'));
    const buf_169 = createEmptyBuf(device, 80);;
    const buf_170 = createWeightBuf(device, 38400, safetensor.getTensor('_blocks.6._se_reduce'));
    const buf_171 = createWeightBuf(device, 80, safetensor.getTensor('_blocks.6._se_reduce_bias'));
    const buf_172 = createEmptyBuf(device, 1920);;
    const buf_173 = createWeightBuf(device, 38400, safetensor.getTensor('_blocks.6._se_expand'));
    const buf_174 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.6._se_expand_bias'));
    const buf_175 = createEmptyBuf(device, 376320);;
    const buf_176 = createEmptyBuf(device, 62720);;
    const buf_177 = createWeightBuf(device, 153600, safetensor.getTensor('_blocks.6._project_conv'));
    const buf_178 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.6._bn2.running_mean'));
    const buf_179 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.6._bn2.weight'));
    const buf_180 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.6._bn2.running_var'));
    const buf_181 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.6._bn2.bias'));
    const buf_182 = createEmptyBuf(device, 376320);;
    const buf_183 = createWeightBuf(device, 153600, safetensor.getTensor('_blocks.7._expand_conv'));
    const buf_184 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.7._bn0.running_mean'));
    const buf_185 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.7._bn0.weight'));
    const buf_186 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.7._bn0.running_var'));
    const buf_187 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.7._bn0.bias'));
    const buf_188 = createEmptyBuf(device, 376320);;
    const buf_189 = createWeightBuf(device, 17280, safetensor.getTensor('_blocks.7._depthwise_conv'));
    const buf_190 = createEmptyBuf(device, 1920);;
    const buf_191 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.7._bn1.running_mean'));
    const buf_192 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.7._bn1.weight'));
    const buf_193 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.7._bn1.running_var'));
    const buf_194 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.7._bn1.bias'));
    const buf_195 = createEmptyBuf(device, 80);;
    const buf_196 = createWeightBuf(device, 38400, safetensor.getTensor('_blocks.7._se_reduce'));
    const buf_197 = createWeightBuf(device, 80, safetensor.getTensor('_blocks.7._se_reduce_bias'));
    const buf_198 = createEmptyBuf(device, 1920);;
    const buf_199 = createWeightBuf(device, 38400, safetensor.getTensor('_blocks.7._se_expand'));
    const buf_200 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.7._se_expand_bias'));
    const buf_201 = createEmptyBuf(device, 376320);;
    const buf_202 = createEmptyBuf(device, 62720);;
    const buf_203 = createWeightBuf(device, 153600, safetensor.getTensor('_blocks.7._project_conv'));
    const buf_204 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.7._bn2.running_mean'));
    const buf_205 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.7._bn2.weight'));
    const buf_206 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.7._bn2.running_var'));
    const buf_207 = createWeightBuf(device, 320, safetensor.getTensor('_blocks.7._bn2.bias'));
    const buf_208 = createEmptyBuf(device, 376320);;
    const buf_209 = createWeightBuf(device, 153600, safetensor.getTensor('_blocks.8._expand_conv'));
    const buf_210 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.8._bn0.running_mean'));
    const buf_211 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.8._bn0.weight'));
    const buf_212 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.8._bn0.running_var'));
    const buf_213 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.8._bn0.bias'));
    const buf_214 = createEmptyBuf(device, 376320);;
    const buf_215 = createWeightBuf(device, 48000, safetensor.getTensor('_blocks.8._depthwise_conv'));
    const buf_216 = createEmptyBuf(device, 1920);;
    const buf_217 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.8._bn1.running_mean'));
    const buf_218 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.8._bn1.weight'));
    const buf_219 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.8._bn1.running_var'));
    const buf_220 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.8._bn1.bias'));
    const buf_221 = createEmptyBuf(device, 80);;
    const buf_222 = createWeightBuf(device, 38400, safetensor.getTensor('_blocks.8._se_reduce'));
    const buf_223 = createWeightBuf(device, 80, safetensor.getTensor('_blocks.8._se_reduce_bias'));
    const buf_224 = createEmptyBuf(device, 1920);;
    const buf_225 = createWeightBuf(device, 38400, safetensor.getTensor('_blocks.8._se_expand'));
    const buf_226 = createWeightBuf(device, 1920, safetensor.getTensor('_blocks.8._se_expand_bias'));
    const buf_227 = createEmptyBuf(device, 376320);;
    const buf_228 = createEmptyBuf(device, 87808);;
    const buf_229 = createWeightBuf(device, 215040, safetensor.getTensor('_blocks.8._project_conv'));
    const buf_230 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.8._bn2.running_mean'));
    const buf_231 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.8._bn2.weight'));
    const buf_232 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.8._bn2.running_var'));
    const buf_233 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.8._bn2.bias'));
    const buf_234 = createEmptyBuf(device, 526848);;
    const buf_235 = createWeightBuf(device, 301056, safetensor.getTensor('_blocks.9._expand_conv'));
    const buf_236 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.9._bn0.running_mean'));
    const buf_237 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.9._bn0.weight'));
    const buf_238 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.9._bn0.running_var'));
    const buf_239 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.9._bn0.bias'));
    const buf_240 = createEmptyBuf(device, 526848);;
    const buf_241 = createWeightBuf(device, 67200, safetensor.getTensor('_blocks.9._depthwise_conv'));
    const buf_242 = createEmptyBuf(device, 2688);;
    const buf_243 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.9._bn1.running_mean'));
    const buf_244 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.9._bn1.weight'));
    const buf_245 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.9._bn1.running_var'));
    const buf_246 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.9._bn1.bias'));
    const buf_247 = createEmptyBuf(device, 112);;
    const buf_248 = createWeightBuf(device, 75264, safetensor.getTensor('_blocks.9._se_reduce'));
    const buf_249 = createWeightBuf(device, 112, safetensor.getTensor('_blocks.9._se_reduce_bias'));
    const buf_250 = createEmptyBuf(device, 2688);;
    const buf_251 = createWeightBuf(device, 75264, safetensor.getTensor('_blocks.9._se_expand'));
    const buf_252 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.9._se_expand_bias'));
    const buf_253 = createEmptyBuf(device, 526848);;
    const buf_254 = createEmptyBuf(device, 87808);;
    const buf_255 = createWeightBuf(device, 301056, safetensor.getTensor('_blocks.9._project_conv'));
    const buf_256 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.9._bn2.running_mean'));
    const buf_257 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.9._bn2.weight'));
    const buf_258 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.9._bn2.running_var'));
    const buf_259 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.9._bn2.bias'));
    const buf_260 = createEmptyBuf(device, 526848);;
    const buf_261 = createWeightBuf(device, 301056, safetensor.getTensor('_blocks.10._expand_conv'));
    const buf_262 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.10._bn0.running_mean'));
    const buf_263 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.10._bn0.weight'));
    const buf_264 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.10._bn0.running_var'));
    const buf_265 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.10._bn0.bias'));
    const buf_266 = createEmptyBuf(device, 526848);;
    const buf_267 = createWeightBuf(device, 67200, safetensor.getTensor('_blocks.10._depthwise_conv'));
    const buf_268 = createEmptyBuf(device, 2688);;
    const buf_269 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.10._bn1.running_mean'));
    const buf_270 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.10._bn1.weight'));
    const buf_271 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.10._bn1.running_var'));
    const buf_272 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.10._bn1.bias'));
    const buf_273 = createEmptyBuf(device, 112);;
    const buf_274 = createWeightBuf(device, 75264, safetensor.getTensor('_blocks.10._se_reduce'));
    const buf_275 = createWeightBuf(device, 112, safetensor.getTensor('_blocks.10._se_reduce_bias'));
    const buf_276 = createEmptyBuf(device, 2688);;
    const buf_277 = createWeightBuf(device, 75264, safetensor.getTensor('_blocks.10._se_expand'));
    const buf_278 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.10._se_expand_bias'));
    const buf_279 = createEmptyBuf(device, 526848);;
    const buf_280 = createEmptyBuf(device, 87808);;
    const buf_281 = createWeightBuf(device, 301056, safetensor.getTensor('_blocks.10._project_conv'));
    const buf_282 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.10._bn2.running_mean'));
    const buf_283 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.10._bn2.weight'));
    const buf_284 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.10._bn2.running_var'));
    const buf_285 = createWeightBuf(device, 448, safetensor.getTensor('_blocks.10._bn2.bias'));
    const buf_286 = createEmptyBuf(device, 526848);;
    const buf_287 = createWeightBuf(device, 301056, safetensor.getTensor('_blocks.11._expand_conv'));
    const buf_288 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.11._bn0.running_mean'));
    const buf_289 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.11._bn0.weight'));
    const buf_290 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.11._bn0.running_var'));
    const buf_291 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.11._bn0.bias'));
    const buf_292 = createEmptyBuf(device, 131712);;
    const buf_293 = createWeightBuf(device, 67200, safetensor.getTensor('_blocks.11._depthwise_conv'));
    const buf_294 = createEmptyBuf(device, 2688);;
    const buf_295 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.11._bn1.running_mean'));
    const buf_296 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.11._bn1.weight'));
    const buf_297 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.11._bn1.running_var'));
    const buf_298 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.11._bn1.bias'));
    const buf_299 = createEmptyBuf(device, 112);;
    const buf_300 = createWeightBuf(device, 75264, safetensor.getTensor('_blocks.11._se_reduce'));
    const buf_301 = createWeightBuf(device, 112, safetensor.getTensor('_blocks.11._se_reduce_bias'));
    const buf_302 = createEmptyBuf(device, 2688);;
    const buf_303 = createWeightBuf(device, 75264, safetensor.getTensor('_blocks.11._se_expand'));
    const buf_304 = createWeightBuf(device, 2688, safetensor.getTensor('_blocks.11._se_expand_bias'));
    const buf_305 = createEmptyBuf(device, 131712);;
    const buf_306 = createEmptyBuf(device, 37632);;
    const buf_307 = createWeightBuf(device, 516096, safetensor.getTensor('_blocks.11._project_conv'));
    const buf_308 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.11._bn2.running_mean'));
    const buf_309 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.11._bn2.weight'));
    const buf_310 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.11._bn2.running_var'));
    const buf_311 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.11._bn2.bias'));
    const buf_312 = createEmptyBuf(device, 225792);;
    const buf_313 = createWeightBuf(device, 884736, safetensor.getTensor('_blocks.12._expand_conv'));
    const buf_314 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.12._bn0.running_mean'));
    const buf_315 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.12._bn0.weight'));
    const buf_316 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.12._bn0.running_var'));
    const buf_317 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.12._bn0.bias'));
    const buf_318 = createEmptyBuf(device, 225792);;
    const buf_319 = createWeightBuf(device, 115200, safetensor.getTensor('_blocks.12._depthwise_conv'));
    const buf_320 = createEmptyBuf(device, 4608);;
    const buf_321 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.12._bn1.running_mean'));
    const buf_322 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.12._bn1.weight'));
    const buf_323 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.12._bn1.running_var'));
    const buf_324 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.12._bn1.bias'));
    const buf_325 = createEmptyBuf(device, 192);;
    const buf_326 = createWeightBuf(device, 221184, safetensor.getTensor('_blocks.12._se_reduce'));
    const buf_327 = createWeightBuf(device, 192, safetensor.getTensor('_blocks.12._se_reduce_bias'));
    const buf_328 = createEmptyBuf(device, 4608);;
    const buf_329 = createWeightBuf(device, 221184, safetensor.getTensor('_blocks.12._se_expand'));
    const buf_330 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.12._se_expand_bias'));
    const buf_331 = createEmptyBuf(device, 225792);;
    const buf_332 = createEmptyBuf(device, 37632);;
    const buf_333 = createWeightBuf(device, 884736, safetensor.getTensor('_blocks.12._project_conv'));
    const buf_334 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.12._bn2.running_mean'));
    const buf_335 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.12._bn2.weight'));
    const buf_336 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.12._bn2.running_var'));
    const buf_337 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.12._bn2.bias'));
    const buf_338 = createEmptyBuf(device, 225792);;
    const buf_339 = createWeightBuf(device, 884736, safetensor.getTensor('_blocks.13._expand_conv'));
    const buf_340 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.13._bn0.running_mean'));
    const buf_341 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.13._bn0.weight'));
    const buf_342 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.13._bn0.running_var'));
    const buf_343 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.13._bn0.bias'));
    const buf_344 = createEmptyBuf(device, 225792);;
    const buf_345 = createWeightBuf(device, 115200, safetensor.getTensor('_blocks.13._depthwise_conv'));
    const buf_346 = createEmptyBuf(device, 4608);;
    const buf_347 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.13._bn1.running_mean'));
    const buf_348 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.13._bn1.weight'));
    const buf_349 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.13._bn1.running_var'));
    const buf_350 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.13._bn1.bias'));
    const buf_351 = createEmptyBuf(device, 192);;
    const buf_352 = createWeightBuf(device, 221184, safetensor.getTensor('_blocks.13._se_reduce'));
    const buf_353 = createWeightBuf(device, 192, safetensor.getTensor('_blocks.13._se_reduce_bias'));
    const buf_354 = createEmptyBuf(device, 4608);;
    const buf_355 = createWeightBuf(device, 221184, safetensor.getTensor('_blocks.13._se_expand'));
    const buf_356 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.13._se_expand_bias'));
    const buf_357 = createEmptyBuf(device, 225792);;
    const buf_358 = createEmptyBuf(device, 37632);;
    const buf_359 = createWeightBuf(device, 884736, safetensor.getTensor('_blocks.13._project_conv'));
    const buf_360 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.13._bn2.running_mean'));
    const buf_361 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.13._bn2.weight'));
    const buf_362 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.13._bn2.running_var'));
    const buf_363 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.13._bn2.bias'));
    const buf_364 = createEmptyBuf(device, 225792);;
    const buf_365 = createWeightBuf(device, 884736, safetensor.getTensor('_blocks.14._expand_conv'));
    const buf_366 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.14._bn0.running_mean'));
    const buf_367 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.14._bn0.weight'));
    const buf_368 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.14._bn0.running_var'));
    const buf_369 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.14._bn0.bias'));
    const buf_370 = createEmptyBuf(device, 225792);;
    const buf_371 = createWeightBuf(device, 115200, safetensor.getTensor('_blocks.14._depthwise_conv'));
    const buf_372 = createEmptyBuf(device, 4608);;
    const buf_373 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.14._bn1.running_mean'));
    const buf_374 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.14._bn1.weight'));
    const buf_375 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.14._bn1.running_var'));
    const buf_376 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.14._bn1.bias'));
    const buf_377 = createEmptyBuf(device, 192);;
    const buf_378 = createWeightBuf(device, 221184, safetensor.getTensor('_blocks.14._se_reduce'));
    const buf_379 = createWeightBuf(device, 192, safetensor.getTensor('_blocks.14._se_reduce_bias'));
    const buf_380 = createEmptyBuf(device, 4608);;
    const buf_381 = createWeightBuf(device, 221184, safetensor.getTensor('_blocks.14._se_expand'));
    const buf_382 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.14._se_expand_bias'));
    const buf_383 = createEmptyBuf(device, 225792);;
    const buf_384 = createEmptyBuf(device, 37632);;
    const buf_385 = createWeightBuf(device, 884736, safetensor.getTensor('_blocks.14._project_conv'));
    const buf_386 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.14._bn2.running_mean'));
    const buf_387 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.14._bn2.weight'));
    const buf_388 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.14._bn2.running_var'));
    const buf_389 = createWeightBuf(device, 768, safetensor.getTensor('_blocks.14._bn2.bias'));
    const buf_390 = createEmptyBuf(device, 225792);;
    const buf_391 = createWeightBuf(device, 884736, safetensor.getTensor('_blocks.15._expand_conv'));
    const buf_392 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.15._bn0.running_mean'));
    const buf_393 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.15._bn0.weight'));
    const buf_394 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.15._bn0.running_var'));
    const buf_395 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.15._bn0.bias'));
    const buf_396 = createEmptyBuf(device, 225792);;
    const buf_397 = createWeightBuf(device, 41472, safetensor.getTensor('_blocks.15._depthwise_conv'));
    const buf_398 = createEmptyBuf(device, 4608);;
    const buf_399 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.15._bn1.running_mean'));
    const buf_400 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.15._bn1.weight'));
    const buf_401 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.15._bn1.running_var'));
    const buf_402 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.15._bn1.bias'));
    const buf_403 = createEmptyBuf(device, 192);;
    const buf_404 = createWeightBuf(device, 221184, safetensor.getTensor('_blocks.15._se_reduce'));
    const buf_405 = createWeightBuf(device, 192, safetensor.getTensor('_blocks.15._se_reduce_bias'));
    const buf_406 = createEmptyBuf(device, 4608);;
    const buf_407 = createWeightBuf(device, 221184, safetensor.getTensor('_blocks.15._se_expand'));
    const buf_408 = createWeightBuf(device, 4608, safetensor.getTensor('_blocks.15._se_expand_bias'));
    const buf_409 = createEmptyBuf(device, 225792);;
    const buf_410 = createEmptyBuf(device, 62720);;
    const buf_411 = createWeightBuf(device, 1474560, safetensor.getTensor('_blocks.15._project_conv'));
    const buf_412 = createWeightBuf(device, 1280, safetensor.getTensor('_blocks.15._bn2.running_mean'));
    const buf_413 = createWeightBuf(device, 1280, safetensor.getTensor('_blocks.15._bn2.weight'));
    const buf_414 = createWeightBuf(device, 1280, safetensor.getTensor('_blocks.15._bn2.running_var'));
    const buf_415 = createWeightBuf(device, 1280, safetensor.getTensor('_blocks.15._bn2.bias'));
    const buf_416 = createEmptyBuf(device, 250880);;
    const buf_417 = createWeightBuf(device, 1638400, safetensor.getTensor('_conv_head'));
    const buf_418 = createEmptyBuf(device, 5120);;
    const buf_419 = createWeightBuf(device, 5120, safetensor.getTensor('_bn1.running_mean'));
    const buf_420 = createWeightBuf(device, 5120, safetensor.getTensor('_bn1.weight'));
    const buf_421 = createWeightBuf(device, 5120, safetensor.getTensor('_bn1.running_var'));
    const buf_422 = createWeightBuf(device, 5120, safetensor.getTensor('_bn1.bias'));
    const outputs = createEmptyBuf(device, 4000);;
    const buf_423 = createWeightBuf(device, 5120000, safetensor.getTensor('_fc'));
    const buf_424 = createWeightBuf(device, 4000, safetensor.getTensor('_fc_bias'));

    const gpuWriteBuffer = device.createBuffer({size:input.size, usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE });
    const gpuReadBuffer = device.createBuffer({ size: outputs.size, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ });

    const kernels = [r_8_7_7_16_4_3_3_3_4_4, r_32_7_7_16_4_3_3_4, r_32_256_49, r_8_16_2, r_32_8, r_32_7_7_16_4_3_3_4n1, r_196_4_16_32_4_4, r_4_196_8_16_16_4_3, r_96_7_14_8_3_3_4, r_96_16_196, r_4_16_6, r_3_32_4, r_6_7_14_16_8_3_3_4, r_49_8_16_24_4_4_3, r_6_49_8_16_24_4_3, r_144_7_14_8_3_3_4, r_144_16_196, r_6_16_9, r_9_16_6, r_9_7_14_16_8_3_3_4, r_49_8_16_36_4_4_3, r_6_49_8_16_24_4_3, r_144_7_7_4_5_5_4, r_144_16_49, r_6_16_9, r_9_16_6, r_9_7_7_16_4_5_5_4, r_10_49_4_36_4_4_4, r_5_49_16_4_10_4_4_3, r_240_7_7_4_5_5_4, r_240_16_49, r_10_16_15, r_15_16_10, r_15_7_7_16_4_5_5_4, r_10_49_4_60_4_4_4, r_5_49_16_4_10_4_4_3, r_15_14_14_16_3_3, r_15_16_49_4, r_10_16_15, r_15_16_10, r_5_14_14_16_3_3_3, r_5_49_4_60_4_4_4, r_5_49_32_20_4_4_3, r_15_14_14_32_3_3, r_15_32_49_4, r_20_16_30, r_15_32_20, r_5_14_14_32_3_3_3, r_5_49_4_120_4_4_4, r_5_49_32_20_4_4_3, r_15_14_14_32_3_3, r_15_32_49_4, r_20_16_30, r_15_32_20, r_5_14_14_32_3_3_3, r_5_49_4_120_4_4_4, r_5_49_32_20_4_4_3, r_15_14_14_32_5_5, r_15_32_49_4, r_20_16_30, r_15_32_20, r_5_14_14_32_5_5_3, r_7_49_4_120_4_4_4, r_7_49_32_28_4_4_3, r_21_14_14_32_5_5, r_21_32_49_4, r_28_16_42, r_21_32_28, r_7_14_14_32_5_5_3, r_7_49_4_168_4_4_4, r_7_49_32_28_4_4_3, r_21_14_14_32_5_5, r_21_32_49_4, r_28_16_42, r_21_32_28, r_7_14_14_32_5_5_3, r_7_49_4_168_4_4_4, r_7_49_32_28_4_4_3, r_21_7_7_32_5_5, r_21_32_49, r_28_16_42, r_21_32_28, r_7_7_7_32_5_5_3, r_2_49_32_168_4_3, r_12_49_32_48_4_3, r_36_7_7_32_5_5, r_12_32_49_3, r_48_16_72, r_1152_16_3, r_12_7_7_32_5_5_3, r_2_49_32_288_4_3, r_12_49_32_48_4_3, r_36_7_7_32_5_5, r_12_32_49_3, r_48_16_72, r_1152_16_3, r_12_7_7_32_5_5_3, r_2_49_32_288_4_3, r_12_49_32_48_4_3, r_36_7_7_32_5_5, r_12_32_49_3, r_48_16_72, r_1152_16_3, r_12_7_7_32_5_5_3, r_2_49_32_288_4_3, r_12_49_32_48_4_3, r_36_7_7_32_3_3, r_12_32_49_3, r_48_16_72, r_1152_16_3, r_12_7_7_32_3_3_3, r_5_49_16_288_4_4, r_10_49_32_80_4_4, r_10_32_49_4, r_1000_16_80];
    const piplines = await Promise.all(kernels.map(name => device.createComputePipelineAsync({layout: "auto", compute: { module: device.createShaderModule({ code: name }), entryPoint: "main" }})));

    return async (data) => {
        await gpuWriteBuffer.mapAsync(GPUMapMode.WRITE);
        new Float32Array(gpuWriteBuffer.getMappedRange()).set(data);
        gpuWriteBuffer.unmap();

        const commandEncoder = device.createCommandEncoder();
        commandEncoder.copyBufferToBuffer(gpuWriteBuffer, 0, input, 0, gpuWriteBuffer.size);
        addComputePass(device, commandEncoder, piplines[0], [buf_0, input, buf_1, buf_2, buf_3, buf_4, buf_5], [7, 7, 8]);
    addComputePass(device, commandEncoder, piplines[1], [buf_6, buf_0, buf_7], [7, 7, 32]);
    addComputePass(device, commandEncoder, piplines[2], [buf_8, buf_6, buf_9, buf_10, buf_11, buf_12], [32]);
    addComputePass(device, commandEncoder, piplines[3], [buf_13, buf_8, buf_14, buf_15], [8]);
    addComputePass(device, commandEncoder, piplines[4], [buf_16, buf_13, buf_17, buf_18], [1]);
    addComputePass(device, commandEncoder, piplines[5], [buf_19, buf_0, buf_7, buf_9, buf_10, buf_11, buf_12, buf_16], [7, 7, 32]);
    addComputePass(device, commandEncoder, piplines[6], [buf_20, buf_19, buf_21, buf_22, buf_23, buf_24, buf_25], [196]);
    addComputePass(device, commandEncoder, piplines[7], [buf_26, buf_20, buf_27, buf_28, buf_29, buf_30, buf_31], [196, 4]);
    addComputePass(device, commandEncoder, piplines[8], [buf_32, buf_26, buf_33], [14, 7, 96]);
    addComputePass(device, commandEncoder, piplines[9], [buf_34, buf_32, buf_35, buf_36, buf_37, buf_38], [96]);
    addComputePass(device, commandEncoder, piplines[10], [buf_39, buf_34, buf_40, buf_41], [4]);
    addComputePass(device, commandEncoder, piplines[11], [buf_42, buf_39, buf_43, buf_44], [3]);
    addComputePass(device, commandEncoder, piplines[12], [buf_45, buf_26, buf_33, buf_35, buf_36, buf_37, buf_38, buf_42], [14, 7, 6]);
    addComputePass(device, commandEncoder, piplines[13], [buf_46, buf_45, buf_47, buf_48, buf_49, buf_50, buf_51], [49]);
    addComputePass(device, commandEncoder, piplines[14], [buf_52, buf_46, buf_53, buf_54, buf_55, buf_56, buf_57], [49, 6]);
    addComputePass(device, commandEncoder, piplines[15], [buf_58, buf_52, buf_59], [14, 7, 144]);
    addComputePass(device, commandEncoder, piplines[16], [buf_60, buf_58, buf_61, buf_62, buf_63, buf_64], [144]);
    addComputePass(device, commandEncoder, piplines[17], [buf_65, buf_60, buf_66, buf_67], [6]);
    addComputePass(device, commandEncoder, piplines[18], [buf_68, buf_65, buf_69, buf_70], [9]);
    addComputePass(device, commandEncoder, piplines[19], [buf_71, buf_52, buf_59, buf_61, buf_62, buf_63, buf_64, buf_68], [14, 7, 9]);
    addComputePass(device, commandEncoder, piplines[20], [buf_72, buf_71, buf_73, buf_74, buf_75, buf_76, buf_77, buf_46], [49]);
    addComputePass(device, commandEncoder, piplines[21], [buf_78, buf_72, buf_79, buf_80, buf_81, buf_82, buf_83], [49, 6]);
    addComputePass(device, commandEncoder, piplines[22], [buf_84, buf_78, buf_85], [7, 7, 144]);
    addComputePass(device, commandEncoder, piplines[23], [buf_86, buf_84, buf_87, buf_88, buf_89, buf_90], [144]);
    addComputePass(device, commandEncoder, piplines[24], [buf_91, buf_86, buf_92, buf_93], [6]);
    addComputePass(device, commandEncoder, piplines[25], [buf_94, buf_91, buf_95, buf_96], [9]);
    addComputePass(device, commandEncoder, piplines[26], [buf_97, buf_78, buf_85, buf_87, buf_88, buf_89, buf_90, buf_94], [7, 7, 9]);
    addComputePass(device, commandEncoder, piplines[27], [buf_98, buf_97, buf_99, buf_100, buf_101, buf_102, buf_103], [49, 10]);
    addComputePass(device, commandEncoder, piplines[28], [buf_104, buf_98, buf_105, buf_106, buf_107, buf_108, buf_109], [49, 5]);
    addComputePass(device, commandEncoder, piplines[29], [buf_110, buf_104, buf_111], [7, 7, 240]);
    addComputePass(device, commandEncoder, piplines[30], [buf_112, buf_110, buf_113, buf_114, buf_115, buf_116], [240]);
    addComputePass(device, commandEncoder, piplines[31], [buf_117, buf_112, buf_118, buf_119], [10]);
    addComputePass(device, commandEncoder, piplines[32], [buf_120, buf_117, buf_121, buf_122], [15]);
    addComputePass(device, commandEncoder, piplines[33], [buf_123, buf_104, buf_111, buf_113, buf_114, buf_115, buf_116, buf_120], [7, 7, 15]);
    addComputePass(device, commandEncoder, piplines[34], [buf_124, buf_123, buf_125, buf_126, buf_127, buf_128, buf_129, buf_98], [49, 10]);
    addComputePass(device, commandEncoder, piplines[35], [buf_130, buf_124, buf_131, buf_132, buf_133, buf_134, buf_135], [49, 5]);
    addComputePass(device, commandEncoder, piplines[36], [buf_136, buf_130, buf_137], [14, 14, 15]);
    addComputePass(device, commandEncoder, piplines[37], [buf_138, buf_136, buf_139, buf_140, buf_141, buf_142], [15]);
    addComputePass(device, commandEncoder, piplines[38], [buf_143, buf_138, buf_144, buf_145], [10]);
    addComputePass(device, commandEncoder, piplines[39], [buf_146, buf_143, buf_147, buf_148], [15]);
    addComputePass(device, commandEncoder, piplines[40], [buf_149, buf_130, buf_137, buf_139, buf_140, buf_141, buf_142, buf_146], [14, 14, 5]);
    addComputePass(device, commandEncoder, piplines[41], [buf_150, buf_149, buf_151, buf_152, buf_153, buf_154, buf_155], [49, 5]);
    addComputePass(device, commandEncoder, piplines[42], [buf_156, buf_150, buf_157, buf_158, buf_159, buf_160, buf_161], [49, 5]);
    addComputePass(device, commandEncoder, piplines[43], [buf_162, buf_156, buf_163], [14, 14, 15]);
    addComputePass(device, commandEncoder, piplines[44], [buf_164, buf_162, buf_165, buf_166, buf_167, buf_168], [15]);
    addComputePass(device, commandEncoder, piplines[45], [buf_169, buf_164, buf_170, buf_171], [20]);
    addComputePass(device, commandEncoder, piplines[46], [buf_172, buf_169, buf_173, buf_174], [15]);
    addComputePass(device, commandEncoder, piplines[47], [buf_175, buf_156, buf_163, buf_165, buf_166, buf_167, buf_168, buf_172], [14, 14, 5]);
    addComputePass(device, commandEncoder, piplines[48], [buf_176, buf_175, buf_177, buf_178, buf_179, buf_180, buf_181, buf_150], [49, 5]);
    addComputePass(device, commandEncoder, piplines[49], [buf_182, buf_176, buf_183, buf_184, buf_185, buf_186, buf_187], [49, 5]);
    addComputePass(device, commandEncoder, piplines[50], [buf_188, buf_182, buf_189], [14, 14, 15]);
    addComputePass(device, commandEncoder, piplines[51], [buf_190, buf_188, buf_191, buf_192, buf_193, buf_194], [15]);
    addComputePass(device, commandEncoder, piplines[52], [buf_195, buf_190, buf_196, buf_197], [20]);
    addComputePass(device, commandEncoder, piplines[53], [buf_198, buf_195, buf_199, buf_200], [15]);
    addComputePass(device, commandEncoder, piplines[54], [buf_201, buf_182, buf_189, buf_191, buf_192, buf_193, buf_194, buf_198], [14, 14, 5]);
    addComputePass(device, commandEncoder, piplines[55], [buf_202, buf_201, buf_203, buf_204, buf_205, buf_206, buf_207, buf_176], [49, 5]);
    addComputePass(device, commandEncoder, piplines[56], [buf_208, buf_202, buf_209, buf_210, buf_211, buf_212, buf_213], [49, 5]);
    addComputePass(device, commandEncoder, piplines[57], [buf_214, buf_208, buf_215], [14, 14, 15]);
    addComputePass(device, commandEncoder, piplines[58], [buf_216, buf_214, buf_217, buf_218, buf_219, buf_220], [15]);
    addComputePass(device, commandEncoder, piplines[59], [buf_221, buf_216, buf_222, buf_223], [20]);
    addComputePass(device, commandEncoder, piplines[60], [buf_224, buf_221, buf_225, buf_226], [15]);
    addComputePass(device, commandEncoder, piplines[61], [buf_227, buf_208, buf_215, buf_217, buf_218, buf_219, buf_220, buf_224], [14, 14, 5]);
    addComputePass(device, commandEncoder, piplines[62], [buf_228, buf_227, buf_229, buf_230, buf_231, buf_232, buf_233], [49, 7]);
    addComputePass(device, commandEncoder, piplines[63], [buf_234, buf_228, buf_235, buf_236, buf_237, buf_238, buf_239], [49, 7]);
    addComputePass(device, commandEncoder, piplines[64], [buf_240, buf_234, buf_241], [14, 14, 21]);
    addComputePass(device, commandEncoder, piplines[65], [buf_242, buf_240, buf_243, buf_244, buf_245, buf_246], [21]);
    addComputePass(device, commandEncoder, piplines[66], [buf_247, buf_242, buf_248, buf_249], [28]);
    addComputePass(device, commandEncoder, piplines[67], [buf_250, buf_247, buf_251, buf_252], [21]);
    addComputePass(device, commandEncoder, piplines[68], [buf_253, buf_234, buf_241, buf_243, buf_244, buf_245, buf_246, buf_250], [14, 14, 7]);
    addComputePass(device, commandEncoder, piplines[69], [buf_254, buf_253, buf_255, buf_256, buf_257, buf_258, buf_259, buf_228], [49, 7]);
    addComputePass(device, commandEncoder, piplines[70], [buf_260, buf_254, buf_261, buf_262, buf_263, buf_264, buf_265], [49, 7]);
    addComputePass(device, commandEncoder, piplines[71], [buf_266, buf_260, buf_267], [14, 14, 21]);
    addComputePass(device, commandEncoder, piplines[72], [buf_268, buf_266, buf_269, buf_270, buf_271, buf_272], [21]);
    addComputePass(device, commandEncoder, piplines[73], [buf_273, buf_268, buf_274, buf_275], [28]);
    addComputePass(device, commandEncoder, piplines[74], [buf_276, buf_273, buf_277, buf_278], [21]);
    addComputePass(device, commandEncoder, piplines[75], [buf_279, buf_260, buf_267, buf_269, buf_270, buf_271, buf_272, buf_276], [14, 14, 7]);
    addComputePass(device, commandEncoder, piplines[76], [buf_280, buf_279, buf_281, buf_282, buf_283, buf_284, buf_285, buf_254], [49, 7]);
    addComputePass(device, commandEncoder, piplines[77], [buf_286, buf_280, buf_287, buf_288, buf_289, buf_290, buf_291], [49, 7]);
    addComputePass(device, commandEncoder, piplines[78], [buf_292, buf_286, buf_293], [7, 7, 21]);
    addComputePass(device, commandEncoder, piplines[79], [buf_294, buf_292, buf_295, buf_296, buf_297, buf_298], [21]);
    addComputePass(device, commandEncoder, piplines[80], [buf_299, buf_294, buf_300, buf_301], [28]);
    addComputePass(device, commandEncoder, piplines[81], [buf_302, buf_299, buf_303, buf_304], [21]);
    addComputePass(device, commandEncoder, piplines[82], [buf_305, buf_286, buf_293, buf_295, buf_296, buf_297, buf_298, buf_302], [7, 7, 7]);
    addComputePass(device, commandEncoder, piplines[83], [buf_306, buf_305, buf_307, buf_308, buf_309, buf_310, buf_311], [49, 2]);
    addComputePass(device, commandEncoder, piplines[84], [buf_312, buf_306, buf_313, buf_314, buf_315, buf_316, buf_317], [49, 12]);
    addComputePass(device, commandEncoder, piplines[85], [buf_318, buf_312, buf_319], [7, 7, 36]);
    addComputePass(device, commandEncoder, piplines[86], [buf_320, buf_318, buf_321, buf_322, buf_323, buf_324], [12]);
    addComputePass(device, commandEncoder, piplines[87], [buf_325, buf_320, buf_326, buf_327], [48]);
    addComputePass(device, commandEncoder, piplines[88], [buf_328, buf_325, buf_329, buf_330], [1152]);
    addComputePass(device, commandEncoder, piplines[89], [buf_331, buf_312, buf_319, buf_321, buf_322, buf_323, buf_324, buf_328], [7, 7, 12]);
    addComputePass(device, commandEncoder, piplines[90], [buf_332, buf_331, buf_333, buf_334, buf_335, buf_336, buf_337, buf_306], [49, 2]);
    addComputePass(device, commandEncoder, piplines[91], [buf_338, buf_332, buf_339, buf_340, buf_341, buf_342, buf_343], [49, 12]);
    addComputePass(device, commandEncoder, piplines[92], [buf_344, buf_338, buf_345], [7, 7, 36]);
    addComputePass(device, commandEncoder, piplines[93], [buf_346, buf_344, buf_347, buf_348, buf_349, buf_350], [12]);
    addComputePass(device, commandEncoder, piplines[94], [buf_351, buf_346, buf_352, buf_353], [48]);
    addComputePass(device, commandEncoder, piplines[95], [buf_354, buf_351, buf_355, buf_356], [1152]);
    addComputePass(device, commandEncoder, piplines[96], [buf_357, buf_338, buf_345, buf_347, buf_348, buf_349, buf_350, buf_354], [7, 7, 12]);
    addComputePass(device, commandEncoder, piplines[97], [buf_358, buf_357, buf_359, buf_360, buf_361, buf_362, buf_363, buf_332], [49, 2]);
    addComputePass(device, commandEncoder, piplines[98], [buf_364, buf_358, buf_365, buf_366, buf_367, buf_368, buf_369], [49, 12]);
    addComputePass(device, commandEncoder, piplines[99], [buf_370, buf_364, buf_371], [7, 7, 36]);
    addComputePass(device, commandEncoder, piplines[100], [buf_372, buf_370, buf_373, buf_374, buf_375, buf_376], [12]);
    addComputePass(device, commandEncoder, piplines[101], [buf_377, buf_372, buf_378, buf_379], [48]);
    addComputePass(device, commandEncoder, piplines[102], [buf_380, buf_377, buf_381, buf_382], [1152]);
    addComputePass(device, commandEncoder, piplines[103], [buf_383, buf_364, buf_371, buf_373, buf_374, buf_375, buf_376, buf_380], [7, 7, 12]);
    addComputePass(device, commandEncoder, piplines[104], [buf_384, buf_383, buf_385, buf_386, buf_387, buf_388, buf_389, buf_358], [49, 2]);
    addComputePass(device, commandEncoder, piplines[105], [buf_390, buf_384, buf_391, buf_392, buf_393, buf_394, buf_395], [49, 12]);
    addComputePass(device, commandEncoder, piplines[106], [buf_396, buf_390, buf_397], [7, 7, 36]);
    addComputePass(device, commandEncoder, piplines[107], [buf_398, buf_396, buf_399, buf_400, buf_401, buf_402], [12]);
    addComputePass(device, commandEncoder, piplines[108], [buf_403, buf_398, buf_404, buf_405], [48]);
    addComputePass(device, commandEncoder, piplines[109], [buf_406, buf_403, buf_407, buf_408], [1152]);
    addComputePass(device, commandEncoder, piplines[110], [buf_409, buf_390, buf_397, buf_399, buf_400, buf_401, buf_402, buf_406], [7, 7, 12]);
    addComputePass(device, commandEncoder, piplines[111], [buf_410, buf_409, buf_411, buf_412, buf_413, buf_414, buf_415], [49, 5]);
    addComputePass(device, commandEncoder, piplines[112], [buf_416, buf_410, buf_417], [49, 10]);
    addComputePass(device, commandEncoder, piplines[113], [buf_418, buf_416, buf_419, buf_420, buf_421, buf_422], [10]);
    addComputePass(device, commandEncoder, piplines[114], [outputs, buf_418, buf_423, buf_424], [1000]);
        commandEncoder.copyBufferToBuffer(outputs, 0, gpuReadBuffer, 0, outputs.size);
        const gpuCommands = commandEncoder.finish();
        device.queue.submit([gpuCommands]);

        await gpuReadBuffer.mapAsync(GPUMapMode.READ);
        const resultBuffer = new Float32Array(gpuReadBuffer.size);
        resultBuffer.set(new Float32Array(gpuReadBuffer.getMappedRange()));
        gpuReadBuffer.unmap();
        return resultBuffer;
    }
}
